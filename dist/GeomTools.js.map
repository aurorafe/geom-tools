{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f55464791a9ddf8b3ba5","webpack:///./src/utils/utils.js","webpack:///./src/utils/geometry.js","webpack:///./~/@turf/helpers/index.js","webpack:///./src/geomUtils/GeomParser.js","webpack:///./~/@turf/invariant/index.js","webpack:///./~/@turf/meta/index.js","webpack:///./src/constants.js","webpack:///./~/geojson-rbush/~/@turf/meta/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/geomUtils/LrsUtils.js","webpack:///./~/@turf/bbox-polygon/index.js","webpack:///./~/@turf/line-intersect/index.js","webpack:///./~/@turf/line-segment/index.js","webpack:///./src/index.js","webpack:///./src/utils/bearing.js","webpack:///./~/geojson-rbush/index.js","webpack:///./~/geojson-rbush/~/@turf/bbox/index.js","webpack:///./~/geojson-rbush/~/@turf/helpers/index.js","webpack:///./~/quickselect/index.js","webpack:///./~/rbush/index.js","webpack:///./~/terraformer-wkt-parser/terraformer-wkt-parser.js","webpack:///./~/terraformer/terraformer.js"],"names":["corverRecurrence","data","_data","recurrence","items","Array","isArray","length","forEach","item","concat","closeDisorderArray","arr","num","params","ret","res_","distance","Math","abs","i","newDistance","Error","error","console","log","closeOrderArray","left","right","middle","floor","leftValue","rightValue","from","to","units","degrees2radians","PI","coordinates1","getCoord","coordinates2","dLat","dLon","lat1","lat2","a","pow","sin","cos","radiansToDistance","atan2","sqrt","obj","coordinates","getCoords","geometry","containsNumber","radians","undefined","factor","destination","origin","bearing","radians2degrees","longitude1","latitude1","bearingRad","distanceToRadians","latitude2","asin","longitude2","flattenEach","geojson","callback","geomEach","featureIndex","properties","type","geomType","coordinate","featureSubIndex","geom","j","g","stopG","geometryMaybeCollection","isGeometryCollection","geometryProperties","isFeatureCollection","isFeature","stop","features","geometries","toRadians","angleInDegrees","getDistance_","c1","c2","radius","deltaLatBy2","deltaLonBy2","feature","bbox","id","constructor","Object","feat","point","lineString","polygon","multiPoint","multiLineString","multiPolygon","ring","featureCollection","fc","geometryCollection","factors","miles","nauticalmiles","degrees","inches","yards","meters","metres","centimeters","centimetres","kilometers","kilometres","feet","areaFactors","millimeter","acres","round","precision","isNaN","multiplier","distanceToDegrees","bearingToAngle","angle","convertDistance","originalUnit","finalUnit","convertedDistance","convertArea","area","startFactor","finalFactor","module","exports","utils","GeomParser","parse","e","info","hasOwnProperty","wkt2ArraySource","convert","geoJSON2ArraySource","geojsonType","value","name","featureOf","collectionOf","getGeom","getGeomType","coordEach","excludeWrapCoord","geometryIndex","k","l","coords","wrapShrink","coordIndex","coordReduce","initialValue","previousValue","currentCoord","propEach","propReduce","currentProperties","featureEach","featureReduce","currentFeature","coordAll","coord","push","geomReduce","currentGeometry","currentIndex","flattenReduce","segmentEach","previousCoords","currentSegment","segmentReduce","currentSubIndex","layer","currentCoords","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","geometryUtils","LrsUtils","lines","closestPoint","Infinity","dist","line","start","sectionLength","heightDistance","max","direction","perpendicularPt1","perpendicularPt2","intersect","intersectPt","location","index","epsg","pointSnap","corver_","_start","_stop","JSON","stringify","mile","indexOf","_coords","wkt2ArrayFix","_gLines","wkt2GeoJSON","getClosePointFromLines","require","lowLeft","topLeft","topRight","lowRight","meta","rbush","helpers","lineSegment","line1","line2","unique","results","intersects","tree","load","segment","search","match","key","join","coords1","coords2","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","x","y","segments","createSegments","reduce","west","south","east","north","end","final","calculateFinalBearing","lon1","lon2","b","bear","turfBBox","bboxPolygon","maxEntries","insert","prototype","call","remove","clear","toBBox","collides","all","toJSON","fromJSON","json","minX","minY","maxX","maxY","each","partialSort","compare","defaultCompare","n","m","z","s","exp","sd","newLeft","newRight","min","t","swap","tmp","quickselect","format","_maxEntries","_minEntries","ceil","_initFormat","_all","node","result","nodesToSearch","len","child","childBBox","leaf","contains","pop","_build","slice","height","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","parent","goingUp","findItem","splice","_condense","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","apply","N","M","calcBBox","N2","N1","right2","right3","multiSelect","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","bboxArea","enlargedArea","isNode","insertPath","extend","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","distBBox","intersectionArea","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","bboxMargin","siblings","compareArr","Function","p","destNode","stack","mid","root","factory","navigator","Terraformer","WKT","parser","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$","_$","$0","PointArray","Number","addPoint","addRing","RingList","Ring","addPolygon","PolygonList","table","defaultActions","parseError","str","hash","input","self","vstack","lstack","recovering","TERROR","EOF","lexer","setInput","yylloc","yyloc","ranges","options","popStack","lex","token","symbol","preErrorSymbol","state","action","r","yyval","newState","expected","errStr","showPosition","text","loc","first_line","last_line","first_column","last_column","range","_input","_more","_less","done","matched","conditionStack","offset","ch","unput","split","substr","oldLines","more","less","pastInput","past","replace","upcomingInput","next","pre","c","tempMatch","col","rules","_currentRules","flex","matches","begin","condition","popState","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser","_parse","arguments","element","res","primitive","err","Primitive","arrayToRing","parts","pointToWKTPoint","lineStringToWKTLineString","polygonToWKTPolygon","multiPointToWKTMultiPoint","multiLineStringToWKTMultiLineString","multiPolygonToWKTMultiPolygon","inner","it","window","EarthRadius","DegreesPerRadian","RadiansPerDegree","MercatorCRS","GeographicCRS","toString","warn","args","source","calculateBounds","calculateBoundsFromArray","calculateBoundsFromNestedArrays","calculateBoundsFromNestedArrayOfArrays","calculateBoundsForFeatureCollection","calculateBoundsForGeometryCollection","array","lonlat","lon","lat","innerinner","extents","extent","calculateEnvelope","bounds","w","h","radToDeg","rad","degToRad","deg","eachPosition","func","positionToGeographic","position","atan","positionToMercator","lng","applyConverter","converter","noCrs","f","crs","toMercator","toGeographic","cmp","compSort","p1","p2","turn","q","euclideanDistance","dx","dy","nextHullPoint","points","convexHull","hull","isConvex","ltz","p3","v","coordinatesContainPoint","polygonContainsPoint","edgeIntersectsEdge","a1","a2","b1","b2","ua_t","ub_t","u_b","ua","ub","isNumber","parseFloat","isFinite","arraysIntersectArrays","closedPolygon","outer","pointsEqual","coordinatesEqual","na","nb","excludeFromJSON","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Feature","FeatureCollection","GeometryCollection","envelope","within","linestring","ls","mpoly","insertPoint","removePoint","addVertex","insertVertex","removeVertex","close","hasHoles","holes","found","createCircle","center","interpolate","mercatorPosition","steps","Circle","recalculate","output","Tools"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7DA;;;;AACA;;;;AAMO,IAAMA,8CAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACxC,MAAIC,QAAQ,EAAZ;AACA,WAASC,UAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIA,SAASC,MAAMC,OAAN,CAAcF,KAAd,CAAT,IAAiCA,MAAMG,MAAN,GAAe,CAApD,EAAuD;AACrDH,YAAMI,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5B,YAAIA,QAAQJ,MAAMC,OAAN,CAAcG,IAAd,CAAR,IAA+BA,KAAKF,MAAL,GAAc,CAAjD,EAAoD;AAClDL,kBAAQA,MAAMQ,MAAN,CAAaD,IAAb,CAAR;AACD,SAFD,MAEO;AACLN,qBAAWM,IAAX;AACD;AACF,OAND;AAOD;AACF;AACDN,aAAWF,IAAX;AACA,SAAOC,KAAP;AACD,CAfM;;AAwBA,IAAMS,kDAAqB,SAArBA,kBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,MAAX,EAAsB;AACtD,MAAI;AACF,QAAIF,OAAOP,MAAMC,OAAN,CAAcM,GAAd,CAAP,IAA6BA,IAAIL,MAAJ,GAAa,CAA1C,IAA+C,OAAOM,GAAP,KAAe,QAAlE,EAA4E;AAAA,UACrEE,GADqE,GACvD,EADuD;AAAA,UAChEC,IADgE,GACnD,IADmD;;AAE1E,UAAIX,MAAMC,OAAN,CAAcM,IAAI,CAAJ,CAAd,KAAyB,OAAOE,MAAP,KAAkB,QAA/C,EAAyD;AACvDC,cAAMH,IAAI,CAAJ,EAAOE,MAAP,CAAN;AACA,YAAIG,YAAWC,KAAKC,GAAL,CAASJ,MAAMF,GAAf,CAAf;AACA,aAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIR,IAAIL,MAAxB,EAAgCa,GAAhC,EAAqC;AACnC,cAAIC,cAAcH,KAAKC,GAAL,CAASP,IAAIQ,CAAJ,EAAON,MAAP,IAAiBD,GAA1B,CAAlB;AACA,cAAIQ,cAAcJ,SAAlB,EAA4B;AAC1BA,wBAAWI,WAAX;AACAN,kBAAMH,IAAIQ,CAAJ,EAAON,MAAP,CAAN;AACAE,mBAAOJ,IAAIQ,CAAJ,CAAP;AACD;AACF;AACF,OAXD,MAWO,IAAI,QAAOR,IAAI,CAAJ,CAAP,MAAkB,QAAlB,IAA8B,OAAOE,MAAP,KAAkB,QAApD,EAA8D;AACnEC,cAAMH,IAAI,CAAJ,EAAOE,MAAP,CAAN;AACA,YAAIG,aAAWC,KAAKC,GAAL,CAASJ,MAAMF,GAAf,CAAf;AACA,aAAK,IAAIO,KAAI,CAAb,EAAgBA,KAAIR,IAAIL,MAAxB,EAAgCa,IAAhC,EAAqC;AACnC,cAAIC,eAAcH,KAAKC,GAAL,CAASP,IAAIQ,EAAJ,EAAON,MAAP,IAAiBD,GAA1B,CAAlB;AACA,cAAIQ,eAAcJ,UAAlB,EAA4B;AAC1BA,yBAAWI,YAAX;AACAN,kBAAMH,IAAIQ,EAAJ,EAAON,MAAP,CAAN;AACAE,mBAAOJ,IAAIQ,EAAJ,CAAP;AACD;AACF;AACF,OAXM,MAWA,IAAI,OAAOR,IAAI,CAAJ,CAAP,KAAkB,QAAtB,EAAgC;AACrCG,cAAMH,IAAI,CAAJ,CAAN;AACA,YAAIK,aAAWC,KAAKC,GAAL,CAASJ,MAAMF,GAAf,CAAf;AACA,aAAK,IAAIO,MAAI,CAAb,EAAgBA,MAAIR,IAAIL,MAAxB,EAAgCa,KAAhC,EAAqC;AACnC,cAAIC,gBAAcH,KAAKC,GAAL,CAASP,IAAIQ,GAAJ,IAASP,GAAlB,CAAlB;AACA,cAAIQ,gBAAcJ,UAAlB,EAA4B;AAC1BA,yBAAWI,aAAX;AACAN,kBAAMH,IAAIQ,GAAJ,CAAN;AACAJ,mBAAOJ,IAAIQ,GAAJ,CAAP;AACD;AACF;AACF;AACD,aAAOJ,IAAP;AACD,KArCD,MAqCO;AACL,YAAMM,MAAM,SAAN,CAAN;AACD;AACF,GAzCD,CAyCE,OAAOC,KAAP,EAAc;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACD;AACF,CA7CM;;AAsDA,IAAMG,4CAAkB,SAAlBA,eAAkB,CAACd,GAAD,EAAMC,GAAN,EAAWC,MAAX,EAAsB;AACnD,MAAI;AAAA,QACGa,IADH,GACmB,CADnB;AAAA,QACSC,KADT,GACuBhB,IAAIL,MAAJ,GAAa,CADpC;;AAEF,WAAOoB,QAAQC,KAAf,EAAsB;AACpB,UAAIC,SAASX,KAAKY,KAAL,CAAW,CAACF,QAAQD,IAAT,IAAiB,CAA5B,CAAb;AACA,UAAIC,QAAQD,IAAR,IAAgB,CAApB,EAAuB;AACrB;AACD;AACD,UAAItB,MAAMC,OAAN,CAAcM,IAAIiB,MAAJ,CAAd,KAA8B,OAAOf,MAAP,KAAkB,QAApD,EAA8D;AAC5D,YAAIF,IAAIiB,MAAJ,EAAYf,MAAZ,MAAwBD,GAA5B,EAAiC;AAC/B,iBAAOgB,MAAP;AACD,SAFD,MAEO,IAAIjB,IAAIiB,MAAJ,EAAYf,MAAZ,IAAsBD,GAA1B,EAA+B;AACpCe,kBAAQC,MAAR;AACD,SAFM,MAEA;AACLF,iBAAOE,MAAP;AACD;AACD,YAAIE,YAAYnB,IAAIe,IAAJ,EAAUb,MAAV,CAAhB;AACA,YAAIkB,aAAapB,IAAIgB,KAAJ,EAAWd,MAAX,CAAjB;AACA,eAAOkB,aAAanB,GAAb,GAAmBA,MAAMkB,SAAzB,GAAqCA,SAArC,GAAiDC,UAAxD;AACD,OAXD,MAWO,IAAI,QAAOpB,IAAIiB,MAAJ,CAAP,MAAuB,QAAvB,IAAmC,OAAOf,MAAP,KAAkB,QAAzD,EAAmE;AACxE,YAAIF,IAAIiB,MAAJ,EAAYf,MAAZ,MAAwBD,GAA5B,EAAiC;AAC/B,iBAAOgB,MAAP;AACD,SAFD,MAEO,IAAIjB,IAAIiB,MAAJ,EAAYf,MAAZ,IAAsBD,GAA1B,EAA+B;AACpCe,kBAAQC,MAAR;AACD,SAFM,MAEA;AACLF,iBAAOE,MAAP;AACD;AACD,YAAIE,aAAYnB,IAAIe,IAAJ,EAAUb,MAAV,CAAhB;AACA,YAAIkB,cAAapB,IAAIgB,KAAJ,EAAWd,MAAX,CAAjB;AACA,eAAOkB,cAAanB,GAAb,GAAmBA,MAAMkB,UAAzB,GAAqCA,UAArC,GAAiDC,WAAxD;AACD,OAXM,MAWA,IAAI,OAAOpB,IAAIiB,MAAJ,CAAP,KAAuB,QAA3B,EAAqC;AAC1C,YAAIjB,IAAIiB,MAAJ,MAAgBhB,GAApB,EAAyB;AACvB,iBAAOgB,MAAP;AACD,SAFD,MAEO,IAAIjB,IAAIiB,MAAJ,IAAchB,GAAlB,EAAuB;AAC5Be,kBAAQC,MAAR;AACD,SAFM,MAEA;AACLF,iBAAOE,MAAP;AACD;AACD,YAAIE,cAAYnB,IAAIe,IAAJ,CAAhB;AACA,YAAIK,eAAapB,IAAIgB,KAAJ,CAAjB;AACA,eAAOI,eAAanB,GAAb,GAAmBA,MAAMkB,WAAzB,GAAqCA,WAArC,GAAiDC,YAAxD;AACD;AACF;AACF,GA1CD,CA0CE,OAAOT,KAAP,EAAc;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACD;AACF,CA9CM;;AAuDA,IAAMN,8BAAW,SAAXA,QAAW,CAACgB,IAAD,EAAOC,EAAP,EAAWC,KAAX,EAAqB;AAC3C,MAAIC,kBAAkBlB,KAAKmB,EAAL,GAAU,GAAhC;AACA,MAAIC,eAAeC,SAASN,IAAT,CAAnB;AACA,MAAIO,eAAeD,SAASL,EAAT,CAAnB;AACA,MAAIO,OAAOL,mBAAmBI,aAAa,CAAb,IAAkBF,aAAa,CAAb,CAArC,CAAX;AACA,MAAII,OAAON,mBAAmBI,aAAa,CAAb,IAAkBF,aAAa,CAAb,CAArC,CAAX;AACA,MAAIK,OAAOP,kBAAkBE,aAAa,CAAb,CAA7B;AACA,MAAIM,OAAOR,kBAAkBI,aAAa,CAAb,CAA7B;AACA,MAAIK,IAAI3B,KAAK4B,GAAL,CAAS5B,KAAK6B,GAAL,CAASN,OAAO,CAAhB,CAAT,EAA6B,CAA7B,IACNvB,KAAK4B,GAAL,CAAS5B,KAAK6B,GAAL,CAASL,OAAO,CAAhB,CAAT,EAA6B,CAA7B,IAAkCxB,KAAK8B,GAAL,CAASL,IAAT,CAAlC,GAAmDzB,KAAK8B,GAAL,CAASJ,IAAT,CADrD;AAEA,SAAOK,kBAAkB,IAAI/B,KAAKgC,KAAL,CAAWhC,KAAKiC,IAAL,CAAUN,CAAV,CAAX,EAAyB3B,KAAKiC,IAAL,CAAU,IAAIN,CAAd,CAAzB,CAAtB,EAAkEV,KAAlE,CAAP;AACD,CAXM;;AAiBA,IAAMI,8BAAW,SAAXA,QAAW,CAACa,GAAD,EAAS;AAC/B,MAAI,CAACA,GAAL,EAAU,MAAM,IAAI9B,KAAJ,CAAU,iBAAV,CAAN;AACV,MAAI+B,cAAcC,UAAUF,GAAV,CAAlB;AACA,MAAIC,YAAY9C,MAAZ,GAAqB,CAArB,IACF,OAAO8C,YAAY,CAAZ,CAAP,KAA0B,QADxB,IAEF,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAF5B,EAEsC;AACpC,WAAOA,WAAP;AACD,GAJD,MAIO;AACL,UAAM,IAAI/B,KAAJ,CAAU,iCAAV,CAAN;AACD;AACF,CAVM;;AAiBA,IAAMgC,gCAAY,SAAZA,SAAY,CAACF,GAAD,EAAS;AAChC,MAAI,CAACA,GAAL,EAAU,MAAM,IAAI9B,KAAJ,CAAU,iBAAV,CAAN;AACV,MAAI+B,oBAAJ;;AAEA,MAAID,IAAI7C,MAAR,EAAgB;AACd8C,kBAAcD,GAAd;AAED,GAHD,MAGO,IAAIA,IAAIC,WAAR,EAAqB;AAC1BA,kBAAcD,IAAIC,WAAlB;AAED,GAHM,MAGA,IAAID,IAAIG,QAAJ,IAAgBH,IAAIG,QAAJ,CAAaF,WAAjC,EAA8C;AACnDA,kBAAcD,IAAIG,QAAJ,CAAaF,WAA3B;AACD;;AAED,MAAIA,WAAJ,EAAiB;AACfG,mBAAeH,WAAf;AACA,WAAOA,WAAP;AACD;AACD,QAAM,IAAI/B,KAAJ,CAAU,sBAAV,CAAN;AACD,CAnBM;;AA0BA,IAAMkC,0CAAiB,SAAjBA,cAAiB,CAACH,WAAD,EAAiB;AAC7C,MAAIA,YAAY9C,MAAZ,GAAqB,CAArB,IACF,OAAO8C,YAAY,CAAZ,CAAP,KAA0B,QADxB,IAEF,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAF5B,EAEsC;AACpC,WAAO,IAAP;AACD;AACD,MAAIhD,MAAMC,OAAN,CAAc+C,YAAY,CAAZ,CAAd,KAAiCA,YAAY,CAAZ,EAAe9C,MAApD,EAA4D;AAC1D,WAAOiD,eAAeH,YAAY,CAAZ,CAAf,CAAP;AACD;AACD,QAAM,IAAI/B,KAAJ,CAAU,uCAAV,CAAN;AACD,CAVM;;AAkBA,IAAM2B,gDAAoB,SAApBA,iBAAoB,CAACQ,OAAD,EAAUtB,KAAV,EAAoB;AACnD,MAAIsB,YAAYC,SAAZ,IAAyBD,YAAY,IAAzC,EAA+C,MAAM,IAAInC,KAAJ,CAAU,MAAV,CAAN;AAC/C,MAAIqC,SAAS,oBAAQxB,SAAS,YAAjB,CAAb;AACA,MAAI,CAACwB,MAAL,EAAa,MAAM,IAAIrC,KAAJ,CAAU,OAAV,CAAN;AACb,SAAOmC,UAAUE,MAAjB;AACD,CALM;;AAeA,IAAMC,oCAAc,SAAdA,WAAc,CAACC,MAAD,EAAS5C,QAAT,EAAmB6C,OAAnB,EAA4B3B,KAA5B,EAAsC;AAAA,MAC1DC,eAD0D,GACpBlB,KAAKmB,EAAL,GAAU,GADU;AAAA,MACzC0B,eADyC,GACH,MAAM7C,KAAKmB,EADR;;AAE/D,MAAIC,eAAeC,SAASsB,MAAT,CAAnB;AAF+D,MAG1DG,UAH0D,GAG/B5B,kBAAkBE,aAAa,CAAb,CAHa;AAAA,MAG9C2B,SAH8C,GAI5D7B,kBAAkBE,aAAa,CAAb,CAJ0C;;AAK/D,MAAI4B,aAAa9B,kBAAkB0B,OAAnC;AACA,MAAIL,UAAUU,kBAAkBlD,QAAlB,EAA4BkB,KAA5B,CAAd;AACA,MAAIiC,YAAYlD,KAAKmD,IAAL,CAAUnD,KAAK6B,GAAL,CAASkB,SAAT,IAAsB/C,KAAK8B,GAAL,CAASS,OAAT,CAAtB,GACxBvC,KAAK8B,GAAL,CAASiB,SAAT,IAAsB/C,KAAK6B,GAAL,CAASU,OAAT,CAAtB,GAA0CvC,KAAK8B,GAAL,CAASkB,UAAT,CAD5B,CAAhB;AAEA,MAAII,aAAaN,aACf9C,KAAKgC,KAAL,CAAWhC,KAAK6B,GAAL,CAASmB,UAAT,IACThD,KAAK6B,GAAL,CAASU,OAAT,CADS,GACWvC,KAAK8B,GAAL,CAASiB,SAAT,CADtB,EAEE/C,KAAK8B,GAAL,CAASS,OAAT,IAAoBvC,KAAK6B,GAAL,CAASkB,SAAT,IAAsB/C,KAAK6B,GAAL,CAASqB,SAAT,CAF5C,CADF;AAIA,SAAO,qBAAM,CAACL,kBAAkBO,UAAnB,EAA+BP,kBAAkBK,SAAjD,CAAN,CAAP;AACD,CAdM;;AAsBA,IAAMD,gDAAoB,SAApBA,iBAAoB,CAAClD,QAAD,EAAWkB,KAAX,EAAqB;AACpD,MAAIlB,aAAayC,SAAb,IAA0BzC,aAAa,IAA3C,EAAiD;AAC/C,UAAM,IAAIK,KAAJ,CAAU,SAAV,CAAN;AACD;AACD,MAAIqC,SAAS,oBAAQxB,SAAS,YAAjB,CAAb;AACA,MAAI,CAACwB,MAAL,EAAa;AACX,UAAM,IAAIrC,KAAJ,CAAU,OAAV,CAAN;AACD;AACD,SAAOL,WAAW0C,MAAlB;AACD,CATM;;AAgBA,IAAMY,oCAAc,SAAdA,WAAc,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAChDC,WAASF,OAAT,EAAkB,UAAUjB,QAAV,EAAoBoB,YAApB,EAAkCC,UAAlC,EAA8C;AAE9D,QAAIC,OAAQtB,aAAa,IAAd,GAAsB,IAAtB,GAA6BA,SAASsB,IAAjD;AACA,YAAQA,IAAR;AACE,WAAK,IAAL;AACA,WAAK,OAAL;AACA,WAAK,YAAL;AACA,WAAK,SAAL;AACEJ,iBAAS,uBAAQlB,QAAR,EAAkBqB,UAAlB,CAAT,EAAwCD,YAAxC,EAAsD,CAAtD;AACA;AANJ;AAQA,QAAIG,QAAJ;;AAEA,YAAQD,IAAR;AACE,WAAK,YAAL;AACEC,mBAAW,OAAX;AACA;AACF,WAAK,iBAAL;AACEA,mBAAW,YAAX;AACA;AACF,WAAK,cAAL;AACEA,mBAAW,SAAX;AACA;AATJ;AAWAvB,aAASF,WAAT,CAAqB7C,OAArB,CAA6B,UAAUuE,UAAV,EAAsBC,eAAtB,EAAuC;AAClE,UAAIC,OAAO;AACTJ,cAAMC,QADG;AAETzB,qBAAa0B;AAFJ,OAAX;AAIAN,eAAS,uBAAQQ,IAAR,EAAcL,UAAd,CAAT,EAAoCD,YAApC,EAAkDK,eAAlD;AACD,KAND;AAOD,GA/BD;AAgCD,CAjCM;;AAwCA,IAAMN,8BAAW,SAAXA,QAAW,CAACF,OAAD,EAAUC,QAAV,EAAuB;AAE7C,MAAIrD,CAAJ;AAAA,MAAO8D,CAAP;AAAA,MAAUC,CAAV;AAAA,MAAa5B,QAAb;AAAA,MAAuB6B,KAAvB;AAAA,MACEC,uBADF;AAAA,MAEEC,oBAFF;AAAA,MAGEC,kBAHF;AAAA,MAIEZ,eAAe,CAJjB;AAAA,MAKEa,sBAAsBhB,QAAQK,IAAR,KAAiB,mBALzC;AAAA,MAMEY,YAAYjB,QAAQK,IAAR,KAAiB,SAN/B;AAAA,MAOEa,OAAOF,sBAAsBhB,QAAQmB,QAAR,CAAiBpF,MAAvC,GAAgD,CAPzD;;AAqBA,OAAKa,IAAI,CAAT,EAAYA,IAAIsE,IAAhB,EAAsBtE,GAAtB,EAA2B;AACzBiE,8BAA2BG,sBAAsBhB,QAAQmB,QAAR,CAAiBvE,CAAjB,EAAoBmC,QAA1C,GAAsDkC,YAAYjB,QAAQjB,QAApB,GAA+BiB,OAAhH;AACAe,yBAAsBC,sBAAsBhB,QAAQmB,QAAR,CAAiBvE,CAAjB,EAAoBwD,UAA1C,GAAwDa,YAAYjB,QAAQI,UAApB,GAAiC,EAA/G;AACAU,2BAAwBD,uBAAD,GAA4BA,wBAAwBR,IAAxB,KAAiC,oBAA7D,GAAoF,KAA3G;AACAO,YAAQE,uBAAuBD,wBAAwBO,UAAxB,CAAmCrF,MAA1D,GAAmE,CAA3E;AACA,SAAK4E,IAAI,CAAT,EAAYA,IAAIC,KAAhB,EAAuBD,GAAvB,EAA4B;AAC1B5B,iBAAW+B,uBAAuBD,wBAAwBO,UAAxB,CAAmCT,CAAnC,CAAvB,GAA+DE,uBAA1E;;AAEA,UAAI9B,aAAa,IAAjB,EAAuB;AACrBkB,iBAAS,IAAT,EAAeE,YAAf,EAA6BY,kBAA7B;AACAZ;AACA;AACD;AACD,cAAQpB,SAASsB,IAAjB;AACE,aAAK,OAAL;AACA,aAAK,YAAL;AACA,aAAK,YAAL;AACA,aAAK,SAAL;AACA,aAAK,iBAAL;AACA,aAAK,cAAL;AAAqB;AACnBJ,qBAASlB,QAAT,EAAmBoB,YAAnB,EAAiCY,kBAAjC;AACAZ;AACA;AACD;AACD,aAAK,oBAAL;AAA2B;AACzB,iBAAKO,IAAI,CAAT,EAAYA,IAAI3B,SAASqC,UAAT,CAAoBrF,MAApC,EAA4C2E,GAA5C,EAAiD;AAC/CT,uBAASlB,SAASqC,UAAT,CAAoBV,CAApB,CAAT,EAAiCP,YAAjC,EAA+CY,kBAA/C;AACAZ;AACD;AACD;AACD;AACD;AACE,gBAAM,IAAIrD,KAAJ,CAAU,uBAAV,CAAN;AAnBJ;AAqBD;AACF;AACF,CA3DM;;AAkEA,IAAMuE,gCAAY,SAAZA,SAAY,CAACC,cAAD,EAAoB;AAC3C,SAAOA,iBAAiB5E,KAAKmB,EAAtB,GAA2B,GAAlC;AACD,CAFM;;AAYA,IAAM0D,sCAAe,SAAfA,YAAe,CAACC,EAAD,EAAKC,EAAL,EAASC,MAAT,EAAoB;AAC9C,MAAIvD,OAAOkD,UAAUG,GAAG,CAAH,CAAV,CAAX;AACA,MAAIpD,OAAOiD,UAAUI,GAAG,CAAH,CAAV,CAAX;AACA,MAAIE,cAAc,CAACvD,OAAOD,IAAR,IAAgB,CAAlC;AACA,MAAIyD,cAAcP,UAAUI,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAlB,IAA2B,CAA7C;AACA,MAAInD,IAAI3B,KAAK6B,GAAL,CAASoD,WAAT,IAAwBjF,KAAK6B,GAAL,CAASoD,WAAT,CAAxB,GACNjF,KAAK6B,GAAL,CAASqD,WAAT,IAAwBlF,KAAK6B,GAAL,CAASqD,WAAT,CAAxB,GACAlF,KAAK8B,GAAL,CAASL,IAAT,CADA,GACiBzB,KAAK8B,GAAL,CAASJ,IAAT,CAFnB;AAGA,SAAQ,IAAIsD,MAAJ,GAAahF,KAAKgC,KAAL,CAAWhC,KAAKiC,IAAL,CAAUN,CAAV,CAAX,EAAyB3B,KAAKiC,IAAL,CAAU,IAAIN,CAAd,CAAzB,CAArB;AACD,CATM,C;;;;;;;;;;;;ACxYA,IAAMwD,4BAAU,SAAVA,OAAU,CAAC9C,QAAD,EAAWqB,UAAX,EAAuB0B,IAAvB,EAA6BC,EAA7B,EAAoC;AACzD,MAAIhD,aAAaG,SAAjB,EAA4B,MAAM,IAAIpC,KAAJ,CAAU,sBAAV,CAAN;AAC5B,MAAIsD,cAAcA,WAAW4B,WAAX,KAA2BC,MAA7C,EAAqD,MAAM,IAAInF,KAAJ,CAAU,8BAAV,CAAN;AACrD,MAAIoF,OAAO;AACT7B,UAAM,SADG;AAETD,gBAAYA,cAAc,EAFjB;AAGTrB,cAAUA;AAHD,GAAX;AAKA,MAAI+C,IAAJ,EAAU;AACR,QAAIA,KAAK/F,MAAL,KAAgB,CAApB,EAAuB,MAAM,IAAIe,KAAJ,CAAU,oCAAV,CAAN;AACvBoF,SAAKJ,IAAL,GAAYA,IAAZ;AACD;AACD,MAAIC,EAAJ,EAAQG,KAAKH,EAAL,GAAUA,EAAV;AACR,SAAOG,IAAP;AACD,CAdM;;AAgBA,IAAMnD,8BAAW,SAAXA,QAAW,CAACsB,IAAD,EAAOxB,WAAP,EAAoBiD,IAApB,EAA6B;AAEnD,MAAI,CAACzB,IAAL,EAAW,MAAM,IAAIvD,KAAJ,CAAU,kBAAV,CAAN;AACX,MAAI,CAAC+B,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,yBAAV,CAAN;AAClB,MAAI,CAACjB,MAAMC,OAAN,CAAc+C,WAAd,CAAL,EAAiC,MAAM,IAAI/B,KAAJ,CAAU,8BAAV,CAAN;AACjC,MAAI2D,IAAJ;AACA,UAAQJ,IAAR;AACE,SAAK,OAAL;AACEI,aAAO0B,MAAMtD,WAAN,EAAmBE,QAA1B;AACA;AACF,SAAK,YAAL;AACE0B,aAAO2B,WAAWvD,WAAX,EAAwBE,QAA/B;AACA;AACF,SAAK,SAAL;AACE0B,aAAO4B,QAAQxD,WAAR,EAAqBE,QAA5B;AACA;AACF,SAAK,YAAL;AACE0B,aAAO6B,WAAWzD,WAAX,EAAwBE,QAA/B;AACA;AACF,SAAK,iBAAL;AACE0B,aAAO8B,gBAAgB1D,WAAhB,EAA6BE,QAApC;AACA;AACF,SAAK,cAAL;AACE0B,aAAO+B,aAAa3D,WAAb,EAA0BE,QAAjC;AACA;AACF;AACE,YAAM,IAAIjC,KAAJ,CAAUuD,OAAO,aAAjB,CAAN;AApBJ;AAsBA,MAAIyB,IAAJ,EAAU;AACR,QAAIA,KAAK/F,MAAL,KAAgB,CAApB,EAAuB,MAAM,IAAIe,KAAJ,CAAU,oCAAV,CAAN;AACvB2D,SAAKqB,IAAL,GAAYA,IAAZ;AACD;AACD,SAAOrB,IAAP;AACD,CAjCM;;AAmCA,IAAM0B,wBAAQ,SAARA,KAAQ,CAACtD,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AAC1D,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,MAAI+B,YAAY9C,MAAZ,KAAuBmD,SAA3B,EAAsC,MAAM,IAAIpC,KAAJ,CAAU,8BAAV,CAAN;AACtC,MAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,6CAAV,CAAN;AAC5B,MAAI,OAAO+B,YAAY,CAAZ,CAAP,KAA0B,QAA1B,IAAsC,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAApE,EAA8E,MAAM,IAAI/B,KAAJ,CAAU,kCAAV,CAAN;AAC9E,SAAO+E,QAAQ;AACbxB,UAAM,OADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CATM;;AAWA,IAAMM,4BAAU,SAAVA,OAAU,CAACxD,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AAC5D,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,OAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIiC,YAAY9C,MAAhC,EAAwCa,GAAxC,EAA6C;AAC3C,QAAI6F,OAAO5D,YAAYjC,CAAZ,CAAX;AACA,QAAI6F,KAAK1G,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAM,IAAIe,KAAJ,CAAU,6DAAV,CAAN;AACD;AACD,SAAK,IAAI4D,IAAI,CAAb,EAAgBA,IAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsBA,MAA1C,EAAkD2E,GAAlD,EAAuD;AACrD,UAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsB2E,CAAtB,MAA6B+B,KAAK,CAAL,EAAQ/B,CAAR,CAAjC,EAA6C;AAC3C,cAAM,IAAI5D,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;AACF;AACD,SAAO+E,QAAQ;AACbxB,UAAM,SADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CAjBM;;AAmBA,IAAMK,kCAAa,SAAbA,UAAa,CAACvD,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AAC/D,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,MAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,uDAAV,CAAN;AAC5B,SAAO+E,QAAQ;AACbxB,UAAM,YADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CAPM;;AASA,IAAMW,gDAAoB,SAApBA,iBAAoB,CAACvB,QAAD,EAAWW,IAAX,EAAoB;AACnD,MAAI,CAACX,QAAL,EAAe,MAAM,IAAIrE,KAAJ,CAAU,oBAAV,CAAN;AACf,MAAI,CAACjB,MAAMC,OAAN,CAAcqF,QAAd,CAAL,EAA8B,MAAM,IAAIrE,KAAJ,CAAU,2BAAV,CAAN;AAC9B,MAAI6F,KAAK;AACPtC,UAAM,mBADC;AAEPc,cAAUA;AAFH,GAAT;AAIA,MAAIW,IAAJ,EAAUa,GAAGb,IAAH,GAAUA,IAAV;AACV,SAAOa,EAAP;AACD,CATM;;AAWA,IAAMJ,4CAAkB,SAAlBA,eAAkB,CAAC1D,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AACpE,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,SAAO+E,QAAQ;AACbxB,UAAM,iBADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CANM;;AAQA,IAAMO,kCAAa,SAAbA,UAAa,CAACzD,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AAC/D,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,SAAO+E,QAAQ;AACbxB,UAAM,YADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CANM;;AAQA,IAAMS,sCAAe,SAAfA,YAAe,CAAC3D,WAAD,EAAcuB,UAAd,EAA0B0B,IAA1B,EAAgCC,EAAhC,EAAuC;AACjE,MAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,SAAO+E,QAAQ;AACbxB,UAAM,cADO;AAEbxB,iBAAaA;AAFA,GAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CANM;;AAQA,IAAMa,kDAAqB,SAArBA,kBAAqB,CAACxB,UAAD,EAAahB,UAAb,EAAyB0B,IAAzB,EAA+BC,EAA/B,EAAsC;AACtE,MAAI,CAACX,UAAL,EAAiB,MAAM,IAAItE,KAAJ,CAAU,wBAAV,CAAN;AACjB,MAAI,CAACjB,MAAMC,OAAN,CAAcsF,UAAd,CAAL,EAAgC,MAAM,IAAItE,KAAJ,CAAU,6BAAV,CAAN;AAChC,SAAO+E,QAAQ;AACbxB,UAAM,oBADO;AAEbe,gBAAYA;AAFC,GAAR,EAGJhB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAID,CAPM,C;;;;;;;;;AC1GP,SAASF,OAAT,CAAiB9C,QAAjB,EAA2BqB,UAA3B,EAAuC0B,IAAvC,EAA6CC,EAA7C,EAAiD;AAC7C,QAAIhD,aAAaG,SAAjB,EAA4B,MAAM,IAAIpC,KAAJ,CAAU,sBAAV,CAAN;AAC5B,QAAIsD,cAAcA,WAAW4B,WAAX,KAA2BC,MAA7C,EAAqD,MAAM,IAAInF,KAAJ,CAAU,8BAAV,CAAN;;AAErD,QAAIoF,OAAO;AACP7B,cAAM,SADC;AAEPD,oBAAYA,cAAc,EAFnB;AAGPrB,kBAAUA;AAHH,KAAX;AAKA,QAAI+C,IAAJ,EAAU;AACN,YAAIA,KAAK/F,MAAL,KAAgB,CAApB,EAAuB,MAAM,IAAIe,KAAJ,CAAU,oCAAV,CAAN;AACvBoF,aAAKJ,IAAL,GAAYA,IAAZ;AACH;AACD,QAAIC,EAAJ,EAAQG,KAAKH,EAAL,GAAUA,EAAV;AACR,WAAOG,IAAP;AACH;;AAmBD,SAASnD,QAAT,CAAkBsB,IAAlB,EAAwBxB,WAAxB,EAAqCiD,IAArC,EAA2C;AAEvC,QAAI,CAACzB,IAAL,EAAW,MAAM,IAAIvD,KAAJ,CAAU,kBAAV,CAAN;AACX,QAAI,CAAC+B,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,yBAAV,CAAN;AAClB,QAAI,CAACjB,MAAMC,OAAN,CAAc+C,WAAd,CAAL,EAAiC,MAAM,IAAI/B,KAAJ,CAAU,8BAAV,CAAN;;AAEjC,QAAI2D,IAAJ;AACA,YAAQJ,IAAR;AACA,aAAK,OAAL;AAAcI,mBAAO0B,MAAMtD,WAAN,EAAmBE,QAA1B,CAAoC;AAClD,aAAK,YAAL;AAAmB0B,mBAAO2B,WAAWvD,WAAX,EAAwBE,QAA/B,CAAyC;AAC5D,aAAK,SAAL;AAAgB0B,mBAAO4B,QAAQxD,WAAR,EAAqBE,QAA5B,CAAsC;AACtD,aAAK,YAAL;AAAmB0B,mBAAO6B,WAAWzD,WAAX,EAAwBE,QAA/B,CAAyC;AAC5D,aAAK,iBAAL;AAAwB0B,mBAAO8B,gBAAgB1D,WAAhB,EAA6BE,QAApC,CAA8C;AACtE,aAAK,cAAL;AAAqB0B,mBAAO+B,aAAa3D,WAAb,EAA0BE,QAAjC,CAA2C;AAChE;AAAS,kBAAM,IAAIjC,KAAJ,CAAUuD,OAAO,aAAjB,CAAN;AAPT;AASA,QAAIyB,IAAJ,EAAU;AACN,YAAIA,KAAK/F,MAAL,KAAgB,CAApB,EAAuB,MAAM,IAAIe,KAAJ,CAAU,oCAAV,CAAN;AACvB2D,aAAKqB,IAAL,GAAYA,IAAZ;AACH;AACD,WAAOrB,IAAP;AACH;;AAgBD,SAAS0B,KAAT,CAAetD,WAAf,EAA4BuB,UAA5B,EAAwC0B,IAAxC,EAA8CC,EAA9C,EAAkD;AAC9C,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,QAAI+B,YAAY9C,MAAZ,KAAuBmD,SAA3B,EAAsC,MAAM,IAAIpC,KAAJ,CAAU,8BAAV,CAAN;AACtC,QAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,6CAAV,CAAN;AAC5B,QAAI,OAAO+B,YAAY,CAAZ,CAAP,KAA0B,QAA1B,IAAsC,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAApE,EAA8E,MAAM,IAAI/B,KAAJ,CAAU,kCAAV,CAAN;;AAE9E,WAAO+E,QAAQ;AACXxB,cAAM,OADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAwBD,SAASM,OAAT,CAAiBxD,WAAjB,EAA8BuB,UAA9B,EAA0C0B,IAA1C,EAAgDC,EAAhD,EAAoD;AAChD,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,SAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIiC,YAAY9C,MAAhC,EAAwCa,GAAxC,EAA6C;AACzC,YAAI6F,OAAO5D,YAAYjC,CAAZ,CAAX;AACA,YAAI6F,KAAK1G,MAAL,GAAc,CAAlB,EAAqB;AACjB,kBAAM,IAAIe,KAAJ,CAAU,6DAAV,CAAN;AACH;AACD,aAAK,IAAI4D,IAAI,CAAb,EAAgBA,IAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsBA,MAA1C,EAAkD2E,GAAlD,EAAuD;AACnD,gBAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsB2E,CAAtB,MAA6B+B,KAAK,CAAL,EAAQ/B,CAAR,CAAjC,EAA6C;AACzC,sBAAM,IAAI5D,KAAJ,CAAU,6CAAV,CAAN;AACH;AACJ;AACJ;;AAED,WAAO+E,QAAQ;AACXxB,cAAM,SADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AA+BD,SAASK,UAAT,CAAoBvD,WAApB,EAAiCuB,UAAjC,EAA6C0B,IAA7C,EAAmDC,EAAnD,EAAuD;AACnD,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,QAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,uDAAV,CAAN;;AAE5B,WAAO+E,QAAQ;AACXxB,cAAM,YADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAoBD,SAASW,iBAAT,CAA2BvB,QAA3B,EAAqCW,IAArC,EAA2C;AACvC,QAAI,CAACX,QAAL,EAAe,MAAM,IAAIrE,KAAJ,CAAU,oBAAV,CAAN;AACf,QAAI,CAACjB,MAAMC,OAAN,CAAcqF,QAAd,CAAL,EAA8B,MAAM,IAAIrE,KAAJ,CAAU,2BAAV,CAAN;;AAE9B,QAAI6F,KAAK;AACLtC,cAAM,mBADD;AAELc,kBAAUA;AAFL,KAAT;AAIA,QAAIW,IAAJ,EAAUa,GAAGb,IAAH,GAAUA,IAAV;AACV,WAAOa,EAAP;AACH;;AAkBD,SAASJ,eAAT,CAAyB1D,WAAzB,EAAsCuB,UAAtC,EAAkD0B,IAAlD,EAAwDC,EAAxD,EAA4D;AACxD,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,iBADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAkBD,SAASO,UAAT,CAAoBzD,WAApB,EAAiCuB,UAAjC,EAA6C0B,IAA7C,EAAmDC,EAAnD,EAAuD;AACnD,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,YADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAmBD,SAASS,YAAT,CAAsB3D,WAAtB,EAAmCuB,UAAnC,EAA+C0B,IAA/C,EAAqDC,EAArD,EAAyD;AACrD,QAAI,CAAClD,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,cADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAyBD,SAASa,kBAAT,CAA4BxB,UAA5B,EAAwChB,UAAxC,EAAoD0B,IAApD,EAA0DC,EAA1D,EAA8D;AAC1D,QAAI,CAACX,UAAL,EAAiB,MAAM,IAAItE,KAAJ,CAAU,wBAAV,CAAN;AACjB,QAAI,CAACjB,MAAMC,OAAN,CAAcsF,UAAd,CAAL,EAAgC,MAAM,IAAItE,KAAJ,CAAU,6BAAV,CAAN;;AAEhC,WAAO+E,QAAQ;AACXxB,cAAM,oBADK;AAEXe,oBAAYA;AAFD,KAAR,EAGJhB,UAHI,EAGQ0B,IAHR,EAGcC,EAHd,CAAP;AAIH;;AAGD,IAAIc,UAAU;AACVC,WAAO,IADG;AAEVC,mBAAe,QAFL;AAGVC,aAAS,UAHC;AAIV/D,aAAS,CAJC;AAKVgE,YAAQ,SALE;AAMVC,WAAO,OANG;AAOVC,YAAQ,OAPE;AAQVC,YAAQ,OARE;AASVC,iBAAa,QATH;AAUVC,iBAAa,QAVH;AAWVC,gBAAY,IAXF;AAYVC,gBAAY,IAZF;AAaVC,UAAM;AAbI,CAAd;;AAgBA,IAAIC,cAAc;AACdH,gBAAY,QADE;AAEdC,gBAAY,QAFE;AAGdL,YAAQ,CAHM;AAIdC,YAAQ,CAJM;AAKdE,iBAAa,KALC;AAMdK,gBAAY,OANE;AAOdC,WAAO,WAPO;AAQdd,WAAO,OARO;AASdI,WAAO,WATO;AAUdO,UAAM,YAVQ;AAWdR,YAAQ;AAXM,CAAlB;;AA0BA,SAASY,KAAT,CAAexH,GAAf,EAAoByH,SAApB,EAA+B;AAC3B,QAAIzH,QAAQ6C,SAAR,IAAqB7C,QAAQ,IAA7B,IAAqC0H,MAAM1H,GAAN,CAAzC,EAAqD,MAAM,IAAIS,KAAJ,CAAU,iBAAV,CAAN;AACrD,QAAIgH,aAAa,EAAEA,aAAa,CAAf,CAAjB,EAAoC,MAAM,IAAIhH,KAAJ,CAAU,qCAAV,CAAN;AACpC,QAAIkH,aAAatH,KAAK4B,GAAL,CAAS,EAAT,EAAawF,aAAa,CAA1B,CAAjB;AACA,WAAOpH,KAAKmH,KAAL,CAAWxH,MAAM2H,UAAjB,IAA+BA,UAAtC;AACH;;AAWD,SAASvF,iBAAT,CAA2BQ,OAA3B,EAAoCtB,KAApC,EAA2C;AACvC,QAAIsB,YAAYC,SAAZ,IAAyBD,YAAY,IAAzC,EAA+C,MAAM,IAAInC,KAAJ,CAAU,qBAAV,CAAN;;AAE/C,QAAIqC,SAAS0D,QAAQlF,SAAS,YAAjB,CAAb;AACA,QAAI,CAACwB,MAAL,EAAa,MAAM,IAAIrC,KAAJ,CAAU,kBAAV,CAAN;AACb,WAAOmC,UAAUE,MAAjB;AACH;;AAWD,SAASQ,iBAAT,CAA2BlD,QAA3B,EAAqCkB,KAArC,EAA4C;AACxC,QAAIlB,aAAayC,SAAb,IAA0BzC,aAAa,IAA3C,EAAiD,MAAM,IAAIK,KAAJ,CAAU,sBAAV,CAAN;;AAEjD,QAAIqC,SAAS0D,QAAQlF,SAAS,YAAjB,CAAb;AACA,QAAI,CAACwB,MAAL,EAAa,MAAM,IAAIrC,KAAJ,CAAU,kBAAV,CAAN;AACb,WAAOL,WAAW0C,MAAlB;AACH;;AAWD,SAAS8E,iBAAT,CAA2BxH,QAA3B,EAAqCkB,KAArC,EAA4C;AACxC,WAAO4B,gBAAgBI,kBAAkBlD,QAAlB,EAA4BkB,KAA5B,CAAhB,CAAP;AACH;;AAUD,SAASuG,cAAT,CAAwB5E,OAAxB,EAAiC;AAC7B,QAAIA,YAAY,IAAZ,IAAoBA,YAAYJ,SAApC,EAA+C,MAAM,IAAIpC,KAAJ,CAAU,qBAAV,CAAN;;AAE/C,QAAIqH,QAAQ7E,UAAU,GAAtB;AACA,QAAI6E,QAAQ,CAAZ,EAAeA,SAAS,GAAT;AACf,WAAOA,KAAP;AACH;;AASD,SAAS5E,eAAT,CAAyBN,OAAzB,EAAkC;AAC9B,QAAIA,YAAY,IAAZ,IAAoBA,YAAYC,SAApC,EAA+C,MAAM,IAAIpC,KAAJ,CAAU,qBAAV,CAAN;;AAE/C,QAAIkG,UAAU/D,WAAW,IAAIvC,KAAKmB,EAApB,CAAd;AACA,WAAOmF,UAAU,GAAV,GAAgBtG,KAAKmB,EAA5B;AACH;;AASD,SAASD,eAAT,CAAyBoF,OAAzB,EAAkC;AAC9B,QAAIA,YAAY,IAAZ,IAAoBA,YAAY9D,SAApC,EAA+C,MAAM,IAAIpC,KAAJ,CAAU,qBAAV,CAAN;;AAE/C,QAAImC,UAAU+D,UAAU,GAAxB;AACA,WAAO/D,UAAUvC,KAAKmB,EAAf,GAAoB,GAA3B;AACH;;AAYD,SAASuG,eAAT,CAAyB3H,QAAzB,EAAmC4H,YAAnC,EAAiDC,SAAjD,EAA4D;AACxD,QAAI7H,aAAa,IAAb,IAAqBA,aAAayC,SAAtC,EAAiD,MAAM,IAAIpC,KAAJ,CAAU,sBAAV,CAAN;AACjD,QAAI,EAAEL,YAAY,CAAd,CAAJ,EAAsB,MAAM,IAAIK,KAAJ,CAAU,oCAAV,CAAN;;AAEtB,QAAIyH,oBAAoB9F,kBAAkBkB,kBAAkBlD,QAAlB,EAA4B4H,YAA5B,CAAlB,EAA6DC,aAAa,YAA1E,CAAxB;AACA,WAAOC,iBAAP;AACH;;AAUD,SAASC,WAAT,CAAqBC,IAArB,EAA2BJ,YAA3B,EAAyCC,SAAzC,EAAoD;AAChD,QAAIG,SAAS,IAAT,IAAiBA,SAASvF,SAA9B,EAAyC,MAAM,IAAIpC,KAAJ,CAAU,kBAAV,CAAN;AACzC,QAAI,EAAE2H,QAAQ,CAAV,CAAJ,EAAkB,MAAM,IAAI3H,KAAJ,CAAU,gCAAV,CAAN;;AAElB,QAAI4H,cAAchB,YAAYW,gBAAgB,QAA5B,CAAlB;AACA,QAAI,CAACK,WAAL,EAAkB,MAAM,IAAI5H,KAAJ,CAAU,wBAAV,CAAN;;AAElB,QAAI6H,cAAcjB,YAAYY,aAAa,YAAzB,CAAlB;AACA,QAAI,CAACK,WAAL,EAAkB,MAAM,IAAI7H,KAAJ,CAAU,qBAAV,CAAN;;AAElB,WAAQ2H,OAAOC,WAAR,GAAuBC,WAA9B;AACH;;AAEDC,OAAOC,OAAP,GAAiB;AACbhD,aAASA,OADI;AAEb9C,cAAUA,QAFG;AAGb2D,uBAAmBA,iBAHN;AAIbE,wBAAoBA,kBAJP;AAKbT,WAAOA,KALM;AAMbG,gBAAYA,UANC;AAObF,gBAAYA,UAPC;AAQbG,qBAAiBA,eARJ;AASbF,aAASA,OATI;AAUbG,kBAAcA,YAVD;AAWb/D,uBAAmBA,iBAXN;AAYbkB,uBAAmBA,iBAZN;AAabsE,uBAAmBA,iBAbN;AAcb1E,qBAAiBA,eAdJ;AAeb3B,qBAAiBA,eAfJ;AAgBbsG,oBAAgBA,cAhBH;AAiBbE,qBAAiBA,eAjBJ;AAkBbI,iBAAaA,WAlBA;AAmBbX,WAAOA;AAnBM,CAAjB,C;;;;;;;;;;;;;;;ACnfA;;;;AACA;;IAAYiB,K;;;;;;;;IACNC,U;;;;;;;gCAMShG,Q,EAAU;AACrB,UAAI;AACF,eAAO,+BAAqBiG,KAArB,CAA2BjG,QAA3B,CAAP;AACD,OAFD,CAEE,OAAOkG,CAAP,EAAU;AACVjI,gBAAQkI,IAAR,CAAaD,CAAb;AACD;AACF;;;oCAOgBlG,Q,EAAU;AACzB,UAAI;AACF,YAAI0B,OAAO,+BAAqBuE,KAArB,CAA2BjG,QAA3B,CAAX;AACA,YAAI0B,KAAK0E,cAAL,CAAoB,aAApB,KAAsC1E,KAAK,aAAL,CAAtC,IAA6D5E,MAAMC,OAAN,CAAc2E,KAAK,aAAL,CAAd,CAAjE,EAAqG;AACnG,iBAAOA,KAAK,aAAL,CAAP;AACD,SAFD,MAEO;AACL,gBAAM3D,MAAM,OAAN,CAAN;AACD;AACF,OAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,gBAAQkI,IAAR,CAAanI,KAAb;AACD;AACF;;;iCAMagC,Q,EAAU;AACtB,UAAI;AACF,YAAIF,cAAc,KAAKuG,eAAL,CAAqBrG,QAArB,CAAlB;AACA,eAAQ+F,MAAMtJ,gBAAN,CAAuBqD,WAAvB,CAAR;AACD,OAHD,CAGE,OAAO9B,KAAP,EAAc;AACdC,gBAAQkI,IAAR,CAAanI,KAAb;AACD;AACF;;;gCAOYgC,Q,EAAU;AACrB,UAAI;AACF,eAAO,+BAAqBsG,OAArB,CAA6BtG,QAA7B,CAAP;AACD,OAFD,CAEE,OAAOhC,KAAP,EAAc;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACD;AACF;;;wCAOoBgC,Q,EAAU;AAC7B,UAAI;AACF,YAAIA,SAASoG,cAAT,CAAwB,aAAxB,KAA0CpG,SAAS,aAAT,CAA1C,IAAqElD,MAAMC,OAAN,CAAciD,SAAS,aAAT,CAAd,CAAzE,EAAiH;AAC/G,iBAAOA,SAAS,aAAT,CAAP;AACD,SAFD,MAEO;AACL,gBAAMjC,MAAM,OAAN,CAAN;AACD;AACF,OAND,CAME,OAAOmI,CAAP,EAAU;AACVjI,gBAAQkI,IAAR,CAAaD,CAAb;AACD;AACF;;;qCAMiBlG,Q,EAAU;AAC1B,UAAI;AACF,YAAIF,cAAc,KAAKyG,mBAAL,CAAyBvG,QAAzB,CAAlB;AACA,eAAQ+F,MAAMtJ,gBAAN,CAAuBqD,WAAvB,CAAR;AACD,OAHD,CAGE,OAAO9B,KAAP,EAAc;AACdC,gBAAQkI,IAAR,CAAanI,KAAb;AACD;AACF;;;;;;kBAGYgI,U;;;;;;;;;;ACnFf,SAAShH,QAAT,CAAkBa,GAAlB,EAAuB;AACnB,QAAI,CAACA,GAAL,EAAU,MAAM,IAAI9B,KAAJ,CAAU,iBAAV,CAAN;;AAEV,QAAI+B,cAAcC,UAAUF,GAAV,CAAlB;;AAGA,QAAIC,YAAY9C,MAAZ,GAAqB,CAArB,IACA,OAAO8C,YAAY,CAAZ,CAAP,KAA0B,QAD1B,IAEA,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAF9B,EAEwC;AACpC,eAAOA,WAAP;AACH,KAJD,MAIO;AACH,cAAM,IAAI/B,KAAJ,CAAU,iCAAV,CAAN;AACH;AACJ;;AAcD,SAASgC,SAAT,CAAmBF,GAAnB,EAAwB;AACpB,QAAI,CAACA,GAAL,EAAU,MAAM,IAAI9B,KAAJ,CAAU,iBAAV,CAAN;AACV,QAAI+B,WAAJ;;AAGA,QAAID,IAAI7C,MAAR,EAAgB;AACZ8C,sBAAcD,GAAd;AAGH,KAJD,MAIO,IAAIA,IAAIC,WAAR,EAAqB;AACxBA,sBAAcD,IAAIC,WAAlB;AAGH,KAJM,MAIA,IAAID,IAAIG,QAAJ,IAAgBH,IAAIG,QAAJ,CAAaF,WAAjC,EAA8C;AACjDA,sBAAcD,IAAIG,QAAJ,CAAaF,WAA3B;AACH;;AAED,QAAIA,WAAJ,EAAiB;AACbG,uBAAeH,WAAf;AACA,eAAOA,WAAP;AACH;AACD,UAAM,IAAI/B,KAAJ,CAAU,sBAAV,CAAN;AACH;;AASD,SAASkC,cAAT,CAAwBH,WAAxB,EAAqC;AACjC,QAAIA,YAAY9C,MAAZ,GAAqB,CAArB,IACA,OAAO8C,YAAY,CAAZ,CAAP,KAA0B,QAD1B,IAEA,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAF9B,EAEwC;AACpC,eAAO,IAAP;AACH;;AAED,QAAIhD,MAAMC,OAAN,CAAc+C,YAAY,CAAZ,CAAd,KAAiCA,YAAY,CAAZ,EAAe9C,MAApD,EAA4D;AACxD,eAAOiD,eAAeH,YAAY,CAAZ,CAAf,CAAP;AACH;AACD,UAAM,IAAI/B,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAWD,SAASyI,WAAT,CAAqBC,KAArB,EAA4BnF,IAA5B,EAAkCoF,IAAlC,EAAwC;AACpC,QAAI,CAACpF,IAAD,IAAS,CAACoF,IAAd,EAAoB,MAAM,IAAI3I,KAAJ,CAAU,wBAAV,CAAN;;AAEpB,QAAI,CAAC0I,KAAD,IAAUA,MAAMnF,IAAN,KAAeA,IAA7B,EAAmC;AAC/B,cAAM,IAAIvD,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,cAA7B,GAA8CpF,IAA9C,GAAqD,UAArD,GAAkEmF,MAAMnF,IAAlF,CAAN;AACH;AACJ;;AAYD,SAASqF,SAAT,CAAmB7D,OAAnB,EAA4BxB,IAA5B,EAAkCoF,IAAlC,EAAwC;AACpC,QAAI,CAAC5D,OAAL,EAAc,MAAM,IAAI/E,KAAJ,CAAU,mBAAV,CAAN;AACd,QAAI,CAAC2I,IAAL,EAAW,MAAM,IAAI3I,KAAJ,CAAU,8BAAV,CAAN;AACX,QAAI,CAAC+E,OAAD,IAAYA,QAAQxB,IAAR,KAAiB,SAA7B,IAA0C,CAACwB,QAAQ9C,QAAvD,EAAiE;AAC7D,cAAM,IAAIjC,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,kCAAvC,CAAN;AACH;AACD,QAAI,CAAC5D,QAAQ9C,QAAT,IAAqB8C,QAAQ9C,QAAR,CAAiBsB,IAAjB,KAA0BA,IAAnD,EAAyD;AACrD,cAAM,IAAIvD,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,cAA7B,GAA8CpF,IAA9C,GAAqD,UAArD,GAAkEwB,QAAQ9C,QAAR,CAAiBsB,IAA7F,CAAN;AACH;AACJ;;AAYD,SAASsF,YAAT,CAAsBjD,iBAAtB,EAAyCrC,IAAzC,EAA+CoF,IAA/C,EAAqD;AACjD,QAAI,CAAC/C,iBAAL,EAAwB,MAAM,IAAI5F,KAAJ,CAAU,6BAAV,CAAN;AACxB,QAAI,CAAC2I,IAAL,EAAW,MAAM,IAAI3I,KAAJ,CAAU,iCAAV,CAAN;AACX,QAAI,CAAC4F,iBAAD,IAAsBA,kBAAkBrC,IAAlB,KAA2B,mBAArD,EAA0E;AACtE,cAAM,IAAIvD,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,8BAAvC,CAAN;AACH;AACD,SAAK,IAAI7I,IAAI,CAAb,EAAgBA,IAAI8F,kBAAkBvB,QAAlB,CAA2BpF,MAA/C,EAAuDa,GAAvD,EAA4D;AACxD,YAAIiF,UAAUa,kBAAkBvB,QAAlB,CAA2BvE,CAA3B,CAAd;AACA,YAAI,CAACiF,OAAD,IAAYA,QAAQxB,IAAR,KAAiB,SAA7B,IAA0C,CAACwB,QAAQ9C,QAAvD,EAAiE;AAC7D,kBAAM,IAAIjC,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,kCAAvC,CAAN;AACH;AACD,YAAI,CAAC5D,QAAQ9C,QAAT,IAAqB8C,QAAQ9C,QAAR,CAAiBsB,IAAjB,KAA0BA,IAAnD,EAAyD;AACrD,kBAAM,IAAIvD,KAAJ,CAAU,sBAAsB2I,IAAtB,GAA6B,cAA7B,GAA8CpF,IAA9C,GAAqD,UAArD,GAAkEwB,QAAQ9C,QAAR,CAAiBsB,IAA7F,CAAN;AACH;AACJ;AACJ;;AAoBD,SAASuF,OAAT,CAAiB5F,OAAjB,EAA0B;AACtB,QAAI,CAACA,OAAL,EAAc,MAAM,IAAIlD,KAAJ,CAAU,qBAAV,CAAN;AACd,QAAIkD,QAAQjB,QAAR,KAAqBG,SAAzB,EAAoC,OAAOc,QAAQjB,QAAf;AACpC,QAAIiB,QAAQnB,WAAR,IAAuBmB,QAAQoB,UAAnC,EAA+C,OAAOpB,OAAP;AAC/C,UAAM,IAAIlD,KAAJ,CAAU,oDAAV,CAAN;AACH;;AAoBD,SAAS+I,WAAT,CAAqB7F,OAArB,EAA8B;AAC1B,QAAI,CAACA,OAAL,EAAc,MAAM,IAAIlD,KAAJ,CAAU,qBAAV,CAAN;AACd,QAAI2D,OAAOmF,QAAQ5F,OAAR,CAAX;AACA,QAAIS,IAAJ,EAAU,OAAOA,KAAKJ,IAAZ;AACb;;AAEDuE,OAAOC,OAAP,GAAiB;AACbU,iBAAaA,WADA;AAEbI,kBAAcA,YAFD;AAGbD,eAAWA,SAHE;AAIb3H,cAAUA,QAJG;AAKbe,eAAWA,SALE;AAMbE,oBAAgBA,cANH;AAOb4G,aAASA,OAPI;AAQbC,iBAAaA;AARA,CAAjB,C;;;;;;;;;ACtKA,SAASC,SAAT,CAAmB9F,OAAnB,EAA4BC,QAA5B,EAAsC8F,gBAAtC,EAAwD;AAEpD,QAAI/F,YAAY,IAAhB,EAAsB;AACtB,QAAIG,YAAJ;AAAA,QAAkB6F,aAAlB;AAAA,QAAiCtF,CAAjC;AAAA,QAAoCuF,CAApC;AAAA,QAAuCC,CAAvC;AAAA,QAA0CnH,QAA1C;AAAA,QAAoD6B,KAApD;AAAA,QAA2DuF,MAA3D;AAAA,QACItF,uBADJ;AAAA,QAEIuF,aAAa,CAFjB;AAAA,QAGIC,aAAa,CAHjB;AAAA,QAIIvF,oBAJJ;AAAA,QAKIT,OAAOL,QAAQK,IALnB;AAAA,QAMIW,sBAAsBX,SAAS,mBANnC;AAAA,QAOIY,YAAYZ,SAAS,SAPzB;AAAA,QAQIa,OAAOF,sBAAsBhB,QAAQmB,QAAR,CAAiBpF,MAAvC,GAAgD,CAR3D;;AAsBA,SAAKoE,eAAe,CAApB,EAAuBA,eAAee,IAAtC,EAA4Cf,cAA5C,EAA4D;AACxD,YAAIK,kBAAkB,CAAtB;;AAEAK,kCAA2BG,sBAAsBhB,QAAQmB,QAAR,CAAiBhB,YAAjB,EAA+BpB,QAArD,GAC1BkC,YAAYjB,QAAQjB,QAApB,GAA+BiB,OADhC;AAEAc,+BAAwBD,uBAAD,GAA4BA,wBAAwBR,IAAxB,KAAiC,oBAA7D,GAAoF,KAA3G;AACAO,gBAAQE,uBAAuBD,wBAAwBO,UAAxB,CAAmCrF,MAA1D,GAAmE,CAA3E;;AAEA,aAAKiK,gBAAgB,CAArB,EAAwBA,gBAAgBpF,KAAxC,EAA+CoF,eAA/C,EAAgE;AAC5DjH,uBAAW+B,uBACXD,wBAAwBO,UAAxB,CAAmC4E,aAAnC,CADW,GACyCnF,uBADpD;;AAIA,gBAAI9B,aAAa,IAAjB,EAAuB;AACvBoH,qBAASpH,SAASF,WAAlB;AACA,gBAAIyB,WAAWvB,SAASsB,IAAxB;;AAEA+F,yBAAcL,qBAAqBzF,aAAa,SAAb,IAA0BA,aAAa,cAA5D,CAAD,GAAgF,CAAhF,GAAoF,CAAjG;;AAEA,oBAAQA,QAAR;AACA,qBAAK,IAAL;AACI;AACJ,qBAAK,OAAL;AACIL,6BAASkG,MAAT,EAAiBE,UAAjB,EAA6BlG,YAA7B,EAA2CK,eAA3C;AACA6F;AACA7F;AACA;AACJ,qBAAK,YAAL;AACA,qBAAK,YAAL;AACI,yBAAKE,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B,EAAoC;AAChCT,iCAASkG,OAAOzF,CAAP,CAAT,EAAoB2F,UAApB,EAAgClG,YAAhC,EAA8CK,eAA9C;AACA6F;AACA7F;AACH;AACD;AACJ,qBAAK,SAAL;AACA,qBAAK,iBAAL;AACI,yBAAKE,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B;AACI,6BAAKuF,IAAI,CAAT,EAAYA,IAAIE,OAAOzF,CAAP,EAAU3E,MAAV,GAAmBqK,UAAnC,EAA+CH,GAA/C,EAAoD;AAChDhG,qCAASkG,OAAOzF,CAAP,EAAUuF,CAAV,CAAT,EAAuBI,UAAvB,EAAmClG,YAAnC,EAAiDK,eAAjD;AACA6F;AACA7F;AACH;AALL,qBAMA;AACJ,qBAAK,cAAL;AACI,yBAAKE,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B;AACI,6BAAKuF,IAAI,CAAT,EAAYA,IAAIE,OAAOzF,CAAP,EAAU3E,MAA1B,EAAkCkK,GAAlC;AACI,iCAAKC,IAAI,CAAT,EAAYA,IAAIC,OAAOzF,CAAP,EAAUuF,CAAV,EAAalK,MAAb,GAAsBqK,UAAtC,EAAkDF,GAAlD,EAAuD;AACnDjG,yCAASkG,OAAOzF,CAAP,EAAUuF,CAAV,EAAaC,CAAb,CAAT,EAA0BG,UAA1B,EAAsClG,YAAtC,EAAoDK,eAApD;AACA6F;AACA7F;AACH;AALL;AADJ,qBAOA;AACJ,qBAAK,oBAAL;AACI,yBAAKE,IAAI,CAAT,EAAYA,IAAI3B,SAASqC,UAAT,CAAoBrF,MAApC,EAA4C2E,GAA5C;AACIoF,kCAAU/G,SAASqC,UAAT,CAAoBV,CAApB,CAAV,EAAkCT,QAAlC,EAA4C8F,gBAA5C;AADJ,qBAEA;AACJ;AAAS,0BAAM,IAAIjJ,KAAJ,CAAU,uBAAV,CAAN;AAtCT;AAwCH;AACJ;AACJ;;AAkDD,SAASwJ,WAAT,CAAqBtG,OAArB,EAA8BC,QAA9B,EAAwCsG,YAAxC,EAAsDR,gBAAtD,EAAwE;AACpE,QAAIS,gBAAgBD,YAApB;AACAT,cAAU9F,OAAV,EAAmB,UAAUyG,YAAV,EAAwBJ,UAAxB,EAAoClG,YAApC,EAAkDK,eAAlD,EAAmE;AAClF,YAAI6F,eAAe,CAAf,IAAoBE,iBAAiBrH,SAAzC,EAAoDsH,gBAAgBC,YAAhB,CAApD,KACKD,gBAAgBvG,SAASuG,aAAT,EAAwBC,YAAxB,EAAsCJ,UAAtC,EAAkDlG,YAAlD,EAAgEK,eAAhE,CAAhB;AACR,KAHD,EAGGuF,gBAHH;AAIA,WAAOS,aAAP;AACH;;AA4BD,SAASE,QAAT,CAAkB1G,OAAlB,EAA2BC,QAA3B,EAAqC;AACjC,QAAIrD,CAAJ;AACA,YAAQoD,QAAQK,IAAhB;AACA,aAAK,mBAAL;AACI,iBAAKzD,IAAI,CAAT,EAAYA,IAAIoD,QAAQmB,QAAR,CAAiBpF,MAAjC,EAAyCa,GAAzC,EAA8C;AAC1CqD,yBAASD,QAAQmB,QAAR,CAAiBvE,CAAjB,EAAoBwD,UAA7B,EAAyCxD,CAAzC;AACH;AACD;AACJ,aAAK,SAAL;AACIqD,qBAASD,QAAQI,UAAjB,EAA6B,CAA7B;AACA;AARJ;AAUH;;AAgDD,SAASuG,UAAT,CAAoB3G,OAApB,EAA6BC,QAA7B,EAAuCsG,YAAvC,EAAqD;AACjD,QAAIC,gBAAgBD,YAApB;AACAG,aAAS1G,OAAT,EAAkB,UAAU4G,iBAAV,EAA6BzG,YAA7B,EAA2C;AACzD,YAAIA,iBAAiB,CAAjB,IAAsBoG,iBAAiBrH,SAA3C,EAAsDsH,gBAAgBI,iBAAhB,CAAtD,KACKJ,gBAAgBvG,SAASuG,aAAT,EAAwBI,iBAAxB,EAA2CzG,YAA3C,CAAhB;AACR,KAHD;AAIA,WAAOqG,aAAP;AACH;;AA6BD,SAASK,WAAT,CAAqB7G,OAArB,EAA8BC,QAA9B,EAAwC;AACpC,QAAID,QAAQK,IAAR,KAAiB,SAArB,EAAgC;AAC5BJ,iBAASD,OAAT,EAAkB,CAAlB;AACH,KAFD,MAEO,IAAIA,QAAQK,IAAR,KAAiB,mBAArB,EAA0C;AAC7C,aAAK,IAAIzD,IAAI,CAAb,EAAgBA,IAAIoD,QAAQmB,QAAR,CAAiBpF,MAArC,EAA6Ca,GAA7C,EAAkD;AAC9CqD,qBAASD,QAAQmB,QAAR,CAAiBvE,CAAjB,CAAT,EAA8BA,CAA9B;AACH;AACJ;AACJ;;AA6CD,SAASkK,aAAT,CAAuB9G,OAAvB,EAAgCC,QAAhC,EAA0CsG,YAA1C,EAAwD;AACpD,QAAIC,gBAAgBD,YAApB;AACAM,gBAAY7G,OAAZ,EAAqB,UAAU+G,cAAV,EAA0B5G,YAA1B,EAAwC;AACzD,YAAIA,iBAAiB,CAAjB,IAAsBoG,iBAAiBrH,SAA3C,EAAsDsH,gBAAgBO,cAAhB,CAAtD,KACKP,gBAAgBvG,SAASuG,aAAT,EAAwBO,cAAxB,EAAwC5G,YAAxC,CAAhB;AACR,KAHD;AAIA,WAAOqG,aAAP;AACH;;AAiBD,SAASQ,QAAT,CAAkBhH,OAAlB,EAA2B;AACvB,QAAImG,SAAS,EAAb;AACAL,cAAU9F,OAAV,EAAmB,UAAUiH,KAAV,EAAiB;AAChCd,eAAOe,IAAP,CAAYD,KAAZ;AACH,KAFD;AAGA,WAAOd,MAAP;AACH;;AA8BD,SAASjG,QAAT,CAAkBF,OAAlB,EAA2BC,QAA3B,EAAqC;AACjC,QAAIrD,CAAJ;AAAA,QAAO8D,CAAP;AAAA,QAAUC,CAAV;AAAA,QAAa5B,QAAb;AAAA,QAAuB6B,KAAvB;AAAA,QACIC,uBADJ;AAAA,QAEIC,oBAFJ;AAAA,QAGIC,kBAHJ;AAAA,QAIIZ,eAAe,CAJnB;AAAA,QAKIa,sBAAsBhB,QAAQK,IAAR,KAAiB,mBAL3C;AAAA,QAMIY,YAAYjB,QAAQK,IAAR,KAAiB,SANjC;AAAA,QAOIa,OAAOF,sBAAsBhB,QAAQmB,QAAR,CAAiBpF,MAAvC,GAAgD,CAP3D;;AAqBA,SAAKa,IAAI,CAAT,EAAYA,IAAIsE,IAAhB,EAAsBtE,GAAtB,EAA2B;;AAEvBiE,kCAA2BG,sBAAsBhB,QAAQmB,QAAR,CAAiBvE,CAAjB,EAAoBmC,QAA1C,GAC1BkC,YAAYjB,QAAQjB,QAApB,GAA+BiB,OADhC;AAEAe,6BAAsBC,sBAAsBhB,QAAQmB,QAAR,CAAiBvE,CAAjB,EAAoBwD,UAA1C,GACCa,YAAYjB,QAAQI,UAApB,GAAiC,EADxD;AAEAU,+BAAwBD,uBAAD,GAA4BA,wBAAwBR,IAAxB,KAAiC,oBAA7D,GAAoF,KAA3G;AACAO,gBAAQE,uBAAuBD,wBAAwBO,UAAxB,CAAmCrF,MAA1D,GAAmE,CAA3E;;AAEA,aAAK4E,IAAI,CAAT,EAAYA,IAAIC,KAAhB,EAAuBD,GAAvB,EAA4B;AACxB5B,uBAAW+B,uBACXD,wBAAwBO,UAAxB,CAAmCT,CAAnC,CADW,GAC6BE,uBADxC;;AAIA,gBAAI9B,aAAa,IAAjB,EAAuB;AACnBkB,yBAAS,IAAT,EAAeE,YAAf,EAA6BY,kBAA7B;AACAZ;AACA;AACH;AACD,oBAAQpB,SAASsB,IAAjB;AACA,qBAAK,OAAL;AACA,qBAAK,YAAL;AACA,qBAAK,YAAL;AACA,qBAAK,SAAL;AACA,qBAAK,iBAAL;AACA,qBAAK,cAAL;AAAqB;AACjBJ,iCAASlB,QAAT,EAAmBoB,YAAnB,EAAiCY,kBAAjC;AACAZ;AACA;AACH;AACD,qBAAK,oBAAL;AAA2B;AACvB,6BAAKO,IAAI,CAAT,EAAYA,IAAI3B,SAASqC,UAAT,CAAoBrF,MAApC,EAA4C2E,GAA5C,EAAiD;AAC7CT,qCAASlB,SAASqC,UAAT,CAAoBV,CAApB,CAAT,EAAiCP,YAAjC,EAA+CY,kBAA/C;AACAZ;AACH;AACD;AACH;AACD;AAAS,0BAAM,IAAIrD,KAAJ,CAAU,uBAAV,CAAN;AAlBT;AAoBH;AACJ;AACJ;;AA+CD,SAASqK,UAAT,CAAoBnH,OAApB,EAA6BC,QAA7B,EAAuCsG,YAAvC,EAAqD;AACjD,QAAIC,gBAAgBD,YAApB;AACArG,aAASF,OAAT,EAAkB,UAAUoH,eAAV,EAA2BC,YAA3B,EAAyCT,iBAAzC,EAA4D;AAC1E,YAAIS,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsDsH,gBAAgBY,eAAhB,CAAtD,KACKZ,gBAAgBvG,SAASuG,aAAT,EAAwBY,eAAxB,EAAyCC,YAAzC,EAAuDT,iBAAvD,CAAhB;AACR,KAHD;AAIA,WAAOJ,aAAP;AACH;;AAgCD,SAASzG,WAAT,CAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AACpCC,aAASF,OAAT,EAAkB,UAAUjB,QAAV,EAAoBoB,YAApB,EAAkCC,UAAlC,EAA8C;AAE5D,YAAIC,OAAQtB,aAAa,IAAd,GAAsB,IAAtB,GAA6BA,SAASsB,IAAjD;AACA,gBAAQA,IAAR;AACA,iBAAK,IAAL;AACA,iBAAK,OAAL;AACA,iBAAK,YAAL;AACA,iBAAK,SAAL;AACIJ,yBAAS4B,QAAQ9C,QAAR,EAAkBqB,UAAlB,CAAT,EAAwCD,YAAxC,EAAsD,CAAtD;AACA;AANJ;;AASA,YAAIG,QAAJ;;AAGA,gBAAQD,IAAR;AACA,iBAAK,YAAL;AACIC,2BAAW,OAAX;AACA;AACJ,iBAAK,iBAAL;AACIA,2BAAW,YAAX;AACA;AACJ,iBAAK,cAAL;AACIA,2BAAW,SAAX;AACA;AATJ;;AAYAvB,iBAASF,WAAT,CAAqB7C,OAArB,CAA6B,UAAUuE,UAAV,EAAsBC,eAAtB,EAAuC;AAChE,gBAAIC,OAAO;AACPJ,sBAAMC,QADC;AAEPzB,6BAAa0B;AAFN,aAAX;AAIAN,qBAAS4B,QAAQpB,IAAR,EAAcL,UAAd,CAAT,EAAoCD,YAApC,EAAkDK,eAAlD;AACH,SAND;AAQH,KAnCD;AAoCH;;AAgDD,SAAS8G,aAAT,CAAuBtH,OAAvB,EAAgCC,QAAhC,EAA0CsG,YAA1C,EAAwD;AACpD,QAAIC,gBAAgBD,YAApB;AACAxG,gBAAYC,OAAZ,EAAqB,UAAU+G,cAAV,EAA0B5G,YAA1B,EAAwCK,eAAxC,EAAyD;AAC1E,YAAIL,iBAAiB,CAAjB,IAAsBK,oBAAoB,CAA1C,IAA+C+F,iBAAiBrH,SAApE,EAA+EsH,gBAAgBO,cAAhB,CAA/E,KACKP,gBAAgBvG,SAASuG,aAAT,EAAwBO,cAAxB,EAAwC5G,YAAxC,EAAsDK,eAAtD,CAAhB;AACR,KAHD;AAIA,WAAOgG,aAAP;AACH;;AAqCD,SAASe,WAAT,CAAqBvH,OAArB,EAA8BC,QAA9B,EAAwC;AACpCF,gBAAYC,OAAZ,EAAqB,UAAU6B,OAAV,EAAmB1B,YAAnB,EAAiC;AAClD,YAAIK,kBAAkB,CAAtB;;AAEA,YAAI,CAACqB,QAAQ9C,QAAb,EAAuB;;AAEvB,YAAIsB,OAAOwB,QAAQ9C,QAAR,CAAiBsB,IAA5B;AACA,YAAIA,SAAS,OAAT,IAAoBA,SAAS,YAAjC,EAA+C;;AAG/CiG,oBAAYzE,OAAZ,EAAqB,UAAU2F,cAAV,EAA0Bf,YAA1B,EAAwC;AACzD,gBAAIgB,iBAAiBrF,WAAW,CAACoF,cAAD,EAAiBf,YAAjB,CAAX,EAA2C5E,QAAQzB,UAAnD,CAArB;AACAH,qBAASwH,cAAT,EAAyBtH,YAAzB,EAAuCK,eAAvC;AACAA;AACA,mBAAOiG,YAAP;AACH,SALD;AAMH,KAfD;AAgBH;;AAqDD,SAASiB,aAAT,CAAuB1H,OAAvB,EAAgCC,QAAhC,EAA0CsG,YAA1C,EAAwD;AACpD,QAAIC,gBAAgBD,YAApB;AACAgB,gBAAYvH,OAAZ,EAAqB,UAAUyH,cAAV,EAA0BJ,YAA1B,EAAwCM,eAAxC,EAAyD;AAC1E,YAAIN,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsDsH,gBAAgBiB,cAAhB,CAAtD,KACKjB,gBAAgBvG,SAASuG,aAAT,EAAwBiB,cAAxB,EAAwCJ,YAAxC,EAAsDM,eAAtD,CAAhB;AACR,KAHD;AAIA,WAAOnB,aAAP;AACH;;AAUD,SAAS3E,OAAT,CAAiB9C,QAAjB,EAA2BqB,UAA3B,EAAuC;AACnC,QAAIrB,aAAaG,SAAjB,EAA4B,MAAM,IAAIpC,KAAJ,CAAU,oBAAV,CAAN;;AAE5B,WAAO;AACHuD,cAAM,SADH;AAEHD,oBAAYA,cAAc,EAFvB;AAGHrB,kBAAUA;AAHP,KAAP;AAKH;;AAUD,SAASqD,UAAT,CAAoBvD,WAApB,EAAiCuB,UAAjC,EAA6C;AACzC,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,QAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,uDAAV,CAAN;;AAE5B,WAAO;AACHuD,cAAM,SADH;AAEHD,oBAAYA,cAAc,EAFvB;AAGHrB,kBAAU;AACNsB,kBAAM,YADA;AAENxB,yBAAaA;AAFP;AAHP,KAAP;AAQH;;AAED+F,OAAOC,OAAP,GAAiB;AACbiB,eAAWA,SADE;AAEbQ,iBAAaA,WAFA;AAGbI,cAAUA,QAHG;AAIbC,gBAAYA,UAJC;AAKbE,iBAAaA,WALA;AAMbC,mBAAeA,aANF;AAObE,cAAUA,QAPG;AAQb9G,cAAUA,QARG;AASbiH,gBAAYA,UATC;AAUbpH,iBAAaA,WAVA;AAWbuH,mBAAeA,aAXF;AAYbC,iBAAaA,WAZA;AAabG,mBAAeA;AAbF,CAAjB,C;;;;;;;;;ACpyBA9C,OAAOC,OAAP,GAAiB;AACf/B,SAAO,IADQ;AAEfC,iBAAe,QAFA;AAGfC,WAAS,UAHM;AAIf/D,WAAS,CAJM;AAKfgE,UAAQ,SALO;AAMfC,SAAO,OANQ;AAOfC,UAAQ,OAPO;AAQfC,UAAQ,OARO;AASf1B,UAAQ,OATO;AAUf2B,eAAa,QAVE;AAWfC,eAAa,QAXE;AAYfC,cAAY,IAZG;AAafC,cAAY,IAbG;AAcfC,QAAM;AAdS,CAAjB,C;;;;;;;;;ACyCA,SAASqC,SAAT,CAAmB8B,KAAnB,EAA0B3H,QAA1B,EAAoC8F,gBAApC,EAAsD;AAClD,QAAInJ,CAAJ;AAAA,QAAO8D,CAAP;AAAA,QAAUuF,CAAV;AAAA,QAAatF,CAAb;AAAA,QAAgBuF,CAAhB;AAAA,QAAmBnH,QAAnB;AAAA,QAA6B6B,KAA7B;AAAA,QAAoCuF,MAApC;AAAA,QACItF,uBADJ;AAAA,QAEIuF,aAAa,CAFjB;AAAA,QAGIiB,eAAe,CAHnB;AAAA,QAIIvG,oBAJJ;AAAA,QAKIE,sBAAsB4G,MAAMvH,IAAN,KAAe,mBALzC;AAAA,QAMIY,YAAY2G,MAAMvH,IAAN,KAAe,SAN/B;AAAA,QAOIa,OAAOF,sBAAsB4G,MAAMzG,QAAN,CAAepF,MAArC,GAA8C,CAPzD;;AAqBA,SAAKa,IAAI,CAAT,EAAYA,IAAIsE,IAAhB,EAAsBtE,GAAtB,EAA2B;;AAEvBiE,kCAA2BG,sBAAsB4G,MAAMzG,QAAN,CAAevE,CAAf,EAAkBmC,QAAxC,GAC1BkC,YAAY2G,MAAM7I,QAAlB,GAA6B6I,KAD9B;AAEA9G,+BAAuBD,wBAAwBR,IAAxB,KAAiC,oBAAxD;AACAO,gBAAQE,uBAAuBD,wBAAwBO,UAAxB,CAAmCrF,MAA1D,GAAmE,CAA3E;;AAEA,aAAK4E,IAAI,CAAT,EAAYA,IAAIC,KAAhB,EAAuBD,GAAvB,EAA4B;AACxB5B,uBAAW+B,uBACXD,wBAAwBO,UAAxB,CAAmCT,CAAnC,CADW,GAC6BE,uBADxC;AAEAsF,qBAASpH,SAASF,WAAlB;;AAEAuH,yBAAcL,qBACThH,SAASsB,IAAT,KAAkB,SAAlB,IAA+BtB,SAASsB,IAAT,KAAkB,cADxC,CAAD,GAET,CAFS,GAEL,CAFR;;AAIA,gBAAItB,SAASsB,IAAT,KAAkB,OAAtB,EAA+B;AAC3BJ,yBAASkG,MAAT,EAAiBkB,YAAjB;AACAA;AACH,aAHD,MAGO,IAAItI,SAASsB,IAAT,KAAkB,YAAlB,IAAkCtB,SAASsB,IAAT,KAAkB,YAAxD,EAAsE;AACzE,qBAAKK,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B,EAAoC;AAChCT,6BAASkG,OAAOzF,CAAP,CAAT,EAAoB2G,YAApB;AACAA;AACH;AACJ,aALM,MAKA,IAAItI,SAASsB,IAAT,KAAkB,SAAlB,IAA+BtB,SAASsB,IAAT,KAAkB,iBAArD,EAAwE;AAC3E,qBAAKK,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B;AACI,yBAAKuF,IAAI,CAAT,EAAYA,IAAIE,OAAOzF,CAAP,EAAU3E,MAAV,GAAmBqK,UAAnC,EAA+CH,GAA/C,EAAoD;AAChDhG,iCAASkG,OAAOzF,CAAP,EAAUuF,CAAV,CAAT,EAAuBoB,YAAvB;AACAA;AACH;AAJL;AAKH,aANM,MAMA,IAAItI,SAASsB,IAAT,KAAkB,cAAtB,EAAsC;AACzC,qBAAKK,IAAI,CAAT,EAAYA,IAAIyF,OAAOpK,MAAvB,EAA+B2E,GAA/B;AACI,yBAAKuF,IAAI,CAAT,EAAYA,IAAIE,OAAOzF,CAAP,EAAU3E,MAA1B,EAAkCkK,GAAlC;AACI,6BAAKC,IAAI,CAAT,EAAYA,IAAIC,OAAOzF,CAAP,EAAUuF,CAAV,EAAalK,MAAb,GAAsBqK,UAAtC,EAAkDF,GAAlD,EAAuD;AACnDjG,qCAASkG,OAAOzF,CAAP,EAAUuF,CAAV,EAAaC,CAAb,CAAT,EAA0BmB,YAA1B;AACAA;AACH;AAJL;AADJ;AAMH,aAPM,MAOA,IAAItI,SAASsB,IAAT,KAAkB,oBAAtB,EAA4C;AAC/C,qBAAKK,IAAI,CAAT,EAAYA,IAAI3B,SAASqC,UAAT,CAAoBrF,MAApC,EAA4C2E,GAA5C;AACIoF,8BAAU/G,SAASqC,UAAT,CAAoBV,CAApB,CAAV,EAAkCT,QAAlC,EAA4C8F,gBAA5C;AADJ;AAEH,aAHM,MAGA;AACH,sBAAM,IAAIjJ,KAAJ,CAAU,uBAAV,CAAN;AACH;AACJ;AACJ;AACJ;AACD8H,OAAOC,OAAP,CAAeiB,SAAf,GAA2BA,SAA3B;;AAgEA,SAASQ,WAAT,CAAqBsB,KAArB,EAA4B3H,QAA5B,EAAsCsG,YAAtC,EAAoDR,gBAApD,EAAsE;AAClE,QAAIS,gBAAgBD,YAApB;AACAT,cAAU8B,KAAV,EAAiB,UAAUC,aAAV,EAAyBR,YAAzB,EAAuC;AACpD,YAAIA,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsD;AAClDsH,4BAAgBqB,aAAhB;AACH,SAFD,MAEO;AACHrB,4BAAgBvG,SAASuG,aAAT,EAAwBqB,aAAxB,EAAuCR,YAAvC,CAAhB;AACH;AACJ,KAND,EAMGtB,gBANH;AAOA,WAAOS,aAAP;AACH;AACD5B,OAAOC,OAAP,CAAeyB,WAAf,GAA6BA,WAA7B;;AA6CA,SAASI,QAAT,CAAkBkB,KAAlB,EAAyB3H,QAAzB,EAAmC;AAC/B,QAAIrD,CAAJ;AACA,YAAQgL,MAAMvH,IAAd;AACA,aAAK,mBAAL;AACI,iBAAKzD,IAAI,CAAT,EAAYA,IAAIgL,MAAMzG,QAAN,CAAepF,MAA/B,EAAuCa,GAAvC,EAA4C;AACxCqD,yBAAS2H,MAAMzG,QAAN,CAAevE,CAAf,EAAkBwD,UAA3B,EAAuCxD,CAAvC;AACH;AACD;AACJ,aAAK,SAAL;AACIqD,qBAAS2H,MAAMxH,UAAf,EAA2B,CAA3B;AACA;AARJ;AAUH;AACDwE,OAAOC,OAAP,CAAe6B,QAAf,GAA0BA,QAA1B;;AAiEA,SAASC,UAAT,CAAoBiB,KAApB,EAA2B3H,QAA3B,EAAqCsG,YAArC,EAAmD;AAC/C,QAAIC,gBAAgBD,YAApB;AACAG,aAASkB,KAAT,EAAgB,UAAUhB,iBAAV,EAA6BS,YAA7B,EAA2C;AACvD,YAAIA,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsD;AAClDsH,4BAAgBI,iBAAhB;AACH,SAFD,MAEO;AACHJ,4BAAgBvG,SAASuG,aAAT,EAAwBI,iBAAxB,EAA2CS,YAA3C,CAAhB;AACH;AACJ,KAND;AAOA,WAAOb,aAAP;AACH;AACD5B,OAAOC,OAAP,CAAe8B,UAAf,GAA4BA,UAA5B;;AA8CA,SAASE,WAAT,CAAqBe,KAArB,EAA4B3H,QAA5B,EAAsC;AAClC,QAAI2H,MAAMvH,IAAN,KAAe,SAAnB,EAA8B;AAC1BJ,iBAAS2H,KAAT,EAAgB,CAAhB;AACH,KAFD,MAEO,IAAIA,MAAMvH,IAAN,KAAe,mBAAnB,EAAwC;AAC3C,aAAK,IAAIzD,IAAI,CAAb,EAAgBA,IAAIgL,MAAMzG,QAAN,CAAepF,MAAnC,EAA2Ca,GAA3C,EAAgD;AAC5CqD,qBAAS2H,MAAMzG,QAAN,CAAevE,CAAf,CAAT,EAA4BA,CAA5B;AACH;AACJ;AACJ;AACDgI,OAAOC,OAAP,CAAegC,WAAf,GAA6BA,WAA7B;;AA8DA,SAASC,aAAT,CAAuBc,KAAvB,EAA8B3H,QAA9B,EAAwCsG,YAAxC,EAAsD;AAClD,QAAIC,gBAAgBD,YAApB;AACAM,gBAAYe,KAAZ,EAAmB,UAAUb,cAAV,EAA0BM,YAA1B,EAAwC;AACvD,YAAIA,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsD;AAClDsH,4BAAgBO,cAAhB;AACH,SAFD,MAEO;AACHP,4BAAgBvG,SAASuG,aAAT,EAAwBO,cAAxB,EAAwCM,YAAxC,CAAhB;AACH;AACJ,KAND;AAOA,WAAOb,aAAP;AACH;AACD5B,OAAOC,OAAP,CAAeiC,aAAf,GAA+BA,aAA/B;;AAiCA,SAASE,QAAT,CAAkBY,KAAlB,EAAyB;AACrB,QAAIzB,SAAS,EAAb;AACAL,cAAU8B,KAAV,EAAiB,UAAUX,KAAV,EAAiB;AAC9Bd,eAAOe,IAAP,CAAYD,KAAZ;AACH,KAFD;AAGA,WAAOd,MAAP;AACH;AACDvB,OAAOC,OAAP,CAAemC,QAAf,GAA0BA,QAA1B;;AAmCA,SAAS9G,QAAT,CAAkB0H,KAAlB,EAAyB3H,QAAzB,EAAmC;AAC/B,QAAIrD,CAAJ;AAAA,QAAO8D,CAAP;AAAA,QAAUC,CAAV;AAAA,QAAa5B,QAAb;AAAA,QAAuB6B,KAAvB;AAAA,QACIC,uBADJ;AAAA,QAEIC,oBAFJ;AAAA,QAGIuG,eAAe,CAHnB;AAAA,QAIIrG,sBAAsB4G,MAAMvH,IAAN,KAAe,mBAJzC;AAAA,QAKIY,YAAY2G,MAAMvH,IAAN,KAAe,SAL/B;AAAA,QAMIa,OAAOF,sBAAsB4G,MAAMzG,QAAN,CAAepF,MAArC,GAA8C,CANzD;;AAoBA,SAAKa,IAAI,CAAT,EAAYA,IAAIsE,IAAhB,EAAsBtE,GAAtB,EAA2B;;AAEvBiE,kCAA2BG,sBAAsB4G,MAAMzG,QAAN,CAAevE,CAAf,EAAkBmC,QAAxC,GAC1BkC,YAAY2G,MAAM7I,QAAlB,GAA6B6I,KAD9B;AAEA9G,+BAAuBD,wBAAwBR,IAAxB,KAAiC,oBAAxD;AACAO,gBAAQE,uBAAuBD,wBAAwBO,UAAxB,CAAmCrF,MAA1D,GAAmE,CAA3E;;AAEA,aAAK4E,IAAI,CAAT,EAAYA,IAAIC,KAAhB,EAAuBD,GAAvB,EAA4B;AACxB5B,uBAAW+B,uBACXD,wBAAwBO,UAAxB,CAAmCT,CAAnC,CADW,GAC6BE,uBADxC;;AAGA,gBAAI9B,SAASsB,IAAT,KAAkB,OAAlB,IACAtB,SAASsB,IAAT,KAAkB,YADlB,IAEAtB,SAASsB,IAAT,KAAkB,YAFlB,IAGAtB,SAASsB,IAAT,KAAkB,SAHlB,IAIAtB,SAASsB,IAAT,KAAkB,iBAJlB,IAKAtB,SAASsB,IAAT,KAAkB,cALtB,EAKsC;AAClCJ,yBAASlB,QAAT,EAAmBsI,YAAnB;AACAA;AACH,aARD,MAQO,IAAItI,SAASsB,IAAT,KAAkB,oBAAtB,EAA4C;AAC/C,qBAAKK,IAAI,CAAT,EAAYA,IAAI3B,SAASqC,UAAT,CAAoBrF,MAApC,EAA4C2E,GAA5C,EAAiD;AAC7CT,6BAASlB,SAASqC,UAAT,CAAoBV,CAApB,CAAT,EAAiC2G,YAAjC;AACAA;AACH;AACJ,aALM,MAKA;AACH,sBAAM,IAAIvK,KAAJ,CAAU,uBAAV,CAAN;AACH;AACJ;AACJ;AACJ;AACD8H,OAAOC,OAAP,CAAe3E,QAAf,GAA0BA,QAA1B;;AA8DA,SAASiH,UAAT,CAAoBS,KAApB,EAA2B3H,QAA3B,EAAqCsG,YAArC,EAAmD;AAC/C,QAAIC,gBAAgBD,YAApB;AACArG,aAAS0H,KAAT,EAAgB,UAAUR,eAAV,EAA2BC,YAA3B,EAAyC;AACrD,YAAIA,iBAAiB,CAAjB,IAAsBd,iBAAiBrH,SAA3C,EAAsD;AAClDsH,4BAAgBY,eAAhB;AACH,SAFD,MAEO;AACHZ,4BAAgBvG,SAASuG,aAAT,EAAwBY,eAAxB,EAAyCC,YAAzC,CAAhB;AACH;AACJ,KAND;AAOA,WAAOb,aAAP;AACH;AACD5B,OAAOC,OAAP,CAAesC,UAAf,GAA4BA,UAA5B,C;;;;;;;;;ACzoBAvC,OAAOC,OAAP,GAAiB,UAASD,MAAT,EAAiB;AACjC,KAAG,CAACA,OAAOkD,eAAX,EAA4B;AAC3BlD,SAAOmD,SAAP,GAAmB,YAAW,CAAE,CAAhC;AACAnD,SAAOoD,KAAP,GAAe,EAAf;;AAEA,MAAG,CAACpD,OAAOqD,QAAX,EAAqBrD,OAAOqD,QAAP,GAAkB,EAAlB;AACrBhG,SAAOiG,cAAP,CAAsBtD,MAAtB,EAA8B,QAA9B,EAAwC;AACvCuD,eAAY,IAD2B;AAEvCC,QAAK,eAAW;AACf,WAAOxD,OAAOsB,CAAd;AACA;AAJsC,GAAxC;AAMAjE,SAAOiG,cAAP,CAAsBtD,MAAtB,EAA8B,IAA9B,EAAoC;AACnCuD,eAAY,IADuB;AAEnCC,QAAK,eAAW;AACf,WAAOxD,OAAOhI,CAAd;AACA;AAJkC,GAApC;AAMAgI,SAAOkD,eAAP,GAAyB,CAAzB;AACA;AACD,QAAOlD,MAAP;AACA,CArBD,C;;;;;;;;;;;;;;;ACIA;;IAAYE,K;;AACZ;;AACA;;;;AACA;;;;AACA;;IAAYuD,a;;AACZ;;;;;;;;;;IACMC,Q;;;;;;;2CAQoBC,K,EAAOpG,K,EAAOxE,K,EAAO;AAC3C,UAAI;AAEF,YAAI0C,OAAQkI,MAAMxJ,QAAP,GAAmBwJ,MAAMxJ,QAAN,CAAesB,IAAlC,GAAyCkI,MAAMlI,IAA1D;AACA,YAAIA,SAAS,YAAT,IAAyBA,SAAS,iBAAtC,EAAyD;AACvD,gBAAM,IAAIvD,KAAJ,CAAU,6CAAV,CAAN;AACD;AACD,YAAI0L,eAAeH,cAAclG,KAAd,CAAoB,CAACsG,QAAD,EAAWA,QAAX,CAApB,EAA0C;AAC3DC,gBAAMD;AADqD,SAA1C,CAAnB;AAGA,YAAI1M,SAAS,GAAb;AACA+I,cAAM/E,WAAN,CAAkBwI,KAAlB,EAAyB,UAAUI,IAAV,EAAgB;AACvC,cAAIxC,SAASrB,MAAMhG,SAAN,CAAgB6J,IAAhB,CAAb;AACA,eAAK,IAAI/L,IAAI,CAAb,EAAgBA,IAAIuJ,OAAOpK,MAAP,GAAgB,CAApC,EAAuCa,GAAvC,EAA4C;AAC1C,gBAAIuJ,OAAOvJ,CAAP,EAAUb,MAAV,GAAmB,CAAvB,EAA0B;AACxB;AACD,aAFD,MAEO;AAEL,kBAAI6M,QAAQP,cAAclG,KAAd,CAAoBgE,OAAOvJ,CAAP,CAApB,CAAZ;AACAgM,oBAAMxI,UAAN,CAAiBsI,IAAjB,GAAwB5D,MAAMrI,QAAN,CAAe0F,KAAf,EAAsByG,KAAtB,EAA6BjL,KAA7B,CAAxB;;AAEA,kBAAIuD,OAAOmH,cAAclG,KAAd,CAAoBgE,OAAOvJ,IAAI,CAAX,CAApB,CAAX;AACAsE,mBAAKd,UAAL,CAAgBsI,IAAhB,GAAuB5D,MAAMrI,QAAN,CAAe0F,KAAf,EAAsBjB,IAAtB,EAA4BvD,KAA5B,CAAvB;;AAEA,kBAAIkL,gBAAgB/D,MAAMrI,QAAN,CAAemM,KAAf,EAAsB1H,IAAtB,EAA4BvD,KAA5B,CAApB;;AAEA,kBAAImL,iBAAiBpM,KAAKqM,GAAL,CAASH,MAAMxI,UAAN,CAAiBsI,IAA1B,EAAgCxH,KAAKd,UAAL,CAAgBsI,IAAhD,CAArB;AACA,kBAAIM,YAAY,sBAAQJ,KAAR,EAAe1H,IAAf,CAAhB;AACA,kBAAI+H,mBAAmBnE,MAAM1F,WAAN,CAAkB+C,KAAlB,EAAyB2G,cAAzB,EAAyCE,YAAY,EAArD,EAAyDrL,KAAzD,CAAvB;AACA,kBAAIuL,mBAAmBpE,MAAM1F,WAAN,CAAkB+C,KAAlB,EAAyB2G,cAAzB,EAAyCE,YAAY,EAArD,EAAyDrL,KAAzD,CAAvB;AACA,kBAAIwL,YAAY,6BAAed,cAAcjG,UAAd,CAAyB,CAAC6G,iBAAiBlK,QAAjB,CAA0BF,WAA3B,EACtDqK,iBAAiBnK,QAAjB,CAA0BF,WAD4B,CAAzB,CAAf,EAC2BwJ,cAAcjG,UAAd,CAAyB,CAACwG,MAAM7J,QAAN,CAAeF,WAAhB,EAA6BqC,KAAKnC,QAAL,CAAcF,WAA3C,CAAzB,CAD3B,CAAhB;AAEA,kBAAIuK,cAAc,IAAlB;AACA,kBAAID,UAAUhI,QAAV,CAAmBpF,MAAnB,GAA4B,CAAhC,EAAmC;AACjCqN,8BAAcD,UAAUhI,QAAV,CAAmB,CAAnB,CAAd;AACAiI,4BAAYhJ,UAAZ,CAAuBsI,IAAvB,GAA8B5D,MAAMrI,QAAN,CAAe0F,KAAf,EAAsBiH,WAAtB,EAAmCzL,KAAnC,CAA9B;AACAyL,4BAAYhJ,UAAZ,CAAuBiJ,QAAvB,GAAkCtN,SAAS+I,MAAMrI,QAAN,CAAemM,KAAf,EAAsBQ,WAAtB,EAAmCzL,KAAnC,CAA3C;AACD;AACD,kBAAIiL,MAAMxI,UAAN,CAAiBsI,IAAjB,GAAwBF,aAAapI,UAAb,CAAwBsI,IAApD,EAA0D;AACxDF,+BAAeI,KAAf;AACAJ,6BAAapI,UAAb,CAAwBkJ,KAAxB,GAAgC1M,CAAhC;AACA4L,6BAAapI,UAAb,CAAwBiJ,QAAxB,GAAmCtN,MAAnC;AACD;AACD,kBAAImF,KAAKd,UAAL,CAAgBsI,IAAhB,GAAuBF,aAAapI,UAAb,CAAwBsI,IAAnD,EAAyD;AACvDF,+BAAetH,IAAf;AACAsH,6BAAapI,UAAb,CAAwBkJ,KAAxB,GAAgC1M,IAAI,CAApC;AACA4L,6BAAapI,UAAb,CAAwBiJ,QAAxB,GAAmCtN,SAAS8M,aAA5C;AACD;AACD,kBAAIO,eAAeA,YAAYhJ,UAAZ,CAAuBsI,IAAvB,GAA8BF,aAAapI,UAAb,CAAwBsI,IAAzE,EAA+E;AAC7EF,+BAAeY,WAAf;AACAZ,6BAAapI,UAAb,CAAwBkJ,KAAxB,GAAgC1M,CAAhC;AACD;;AAEDb,wBAAU8M,aAAV;AACD;AACF;AACF,SA7CD;AA8CA,eAAOL,YAAP;AACD,OAzDD,CAyDE,OAAOzL,KAAP,EAAc;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACD;AACF;;;+CAS2BwL,K,EAAOpG,K,EAAOoH,I,EAAM;AAC9C,UAAI;AACF,YAAIC,YAAY,IAAhB;AACA,YAAI3N,MAAMC,OAAN,CAAcyM,KAAd,KAAwBA,MAAMxM,MAAN,GAAe,CAA3C,EAA8C;AAAA,cAEvC6M,KAFuC,GAEvB;AACnBF,kBAAMD,QADa;AAEnBa,mBAAOb;AAFY,WAFuB;AAAA,cAEhCvH,IAFgC,GAKzC,EALyC;;AAM5C,eAAK,IAAItE,IAAI,CAAb,EAAgBA,IAAI2L,MAAMxM,MAAN,GAAe,CAAnC,EAAsCa,GAAtC,EAA2C;AACzC,gBAAI2L,MAAM3L,CAAN,EAASb,MAAT,GAAkB,CAAtB,EAAyB;AACvB;AACD,aAFD,MAEO;AACL,kBAAI2M,OAAO5D,MAAMvD,YAAN,CAAmBY,KAAnB,EAA0BoG,MAAM3L,CAAN,CAA1B,EAAoC,oBAAU,QAAV,CAApC,CAAX;AACAsE,mBAAK,MAAL,IAAewH,IAAf;AACAxH,mBAAK,QAAL,IAAiBqH,MAAM3L,CAAN,CAAjB;AACAsE,mBAAK,OAAL,IAAgBtE,CAAhB;AACA,kBAAI6M,UAAU,SAAVA,OAAU,CAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACrC,oBAAID,OAAO,MAAP,IAAiBC,MAAM,MAAN,CAArB,EAAoC;AAClCD,2BAASE,KAAKC,SAAL,CAAeH,MAAf,CAAT;AACD,iBAFD,MAEO;AACLA,2BAASE,KAAKC,SAAL,CAAeF,KAAf,CAAT;AACD;AACD,uBAAOC,KAAK5E,KAAL,CAAW0E,MAAX,CAAP;AACD,eAPD;AAQAd,sBAAQa,QAAQb,KAAR,EAAe1H,IAAf,CAAR;AACAsI,0BAAYZ,KAAZ;AACD;AACF;AACF;AACD,eAAOY,SAAP;AACD,OA9BD,CA8BE,OAAOzM,KAAP,EAAc;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACD;AACF;;;sCAQkBwL,K,EAAOuB,I,EAAM;AAC9B,UAAI;AACF,YAAI,OAAOvB,KAAP,KAAiB,QAAjB,IACF,CAACA,MAAMwB,OAAN,CAAc,YAAd,KAA+B,CAA/B,IACDxB,MAAMwB,OAAN,CAAc,iBAAd,CADA,KACqC,CAFvC,EAE0C;AACxC,cAAIC,UAAW,0BAAD,CAAmBC,YAAnB,CAAgC1B,KAAhC,CAAd;AACA,iBAAQzD,MAAM3I,kBAAN,CAAyB6N,OAAzB,EAAkCF,IAAlC,EAAwC,CAAxC,CAAR;AACD;AACF,OAPD,CAOE,OAAO/M,KAAP,EAAc;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACD;AACF;;;sCAQkBwL,K,EAAO1J,W,EAAa;AACrC,UAAI;AACF,YAAI,OAAO0J,KAAP,KAAiB,QAAjB,IACF,CAACA,MAAMwB,OAAN,CAAc,YAAd,KAA+B,CAA/B,IACDxB,MAAMwB,OAAN,CAAc,iBAAd,CADA,KACqC,CAFvC,EAE0C;AACxC,cAAIG,UAAW,0BAAD,CAAmBC,WAAnB,CAA+B5B,KAA/B,CAAd;AACA,iBAAQ,KAAK6B,sBAAL,CAA4BF,OAA5B,EAAqC7B,cAAclG,KAAd,CAAoBtD,WAApB,CAArC,EAAuE,OAAvE,CAAR;AACD;AACF,OAPD,CAOE,OAAO9B,KAAP,EAAc;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACD;AACF;;;;;;kBAGYuL,Q;;;;;;;;;;ACnKf,IAAIjG,UAAU,mBAAAgI,CAAQ,CAAR,EAAyBhI,OAAvC;;AAgBAuC,OAAOC,OAAP,GAAiB,UAAU/C,IAAV,EAAgB;AAC7B,QAAIwI,UAAU,CAACxI,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,CAAd;AACA,QAAIyI,UAAU,CAACzI,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,CAAd;AACA,QAAI0I,WAAW,CAAC1I,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,CAAf;AACA,QAAI2I,WAAW,CAAC3I,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,CAAf;;AAEA,WAAOO,QAAQ,CAAC,CACZiI,OADY,EAEZG,QAFY,EAGZD,QAHY,EAIZD,OAJY,EAKZD,OALY,CAAD,CAAR,CAAP;AAOH,CAbD,C;;;;;;;;;AChBA,IAAII,OAAO,mBAAAL,CAAQ,CAAR,CAAX;AACA,IAAIM,QAAQ,mBAAAN,CAAQ,EAAR,CAAZ;AACA,IAAIO,UAAU,mBAAAP,CAAQ,CAAR,CAAd;AACA,IAAIvL,YAAY,mBAAAuL,CAAQ,CAAR,EAA2BvL,SAA3C;AACA,IAAI+L,cAAc,mBAAAR,CAAQ,EAAR,CAAlB;AACA,IAAIlI,QAAQyI,QAAQzI,KAApB;AACA,IAAI0E,cAAc6D,KAAK7D,WAAvB;AACA,IAAInE,oBAAoBkI,QAAQlI,iBAAhC;;AAiBAkC,OAAOC,OAAP,GAAiB,UAAUiG,KAAV,EAAiBC,KAAjB,EAAwB;AACrC,QAAIC,SAAS,EAAb;AACA,QAAIC,UAAU,EAAd;;AAIA,QAAIH,MAAMzK,IAAN,KAAe,YAAnB,EAAiCyK,QAAQF,QAAQ/I,OAAR,CAAgBiJ,KAAhB,CAAR;AACjC,QAAIC,MAAM1K,IAAN,KAAe,YAAnB,EAAiC0K,QAAQH,QAAQ/I,OAAR,CAAgBkJ,KAAhB,CAAR;AACjC,QAAID,MAAMzK,IAAN,KAAe,SAAf,IACA0K,MAAM1K,IAAN,KAAe,SADf,IAEAyK,MAAM/L,QAAN,CAAesB,IAAf,KAAwB,YAFxB,IAGA0K,MAAMhM,QAAN,CAAesB,IAAf,KAAwB,YAHxB,IAIAyK,MAAM/L,QAAN,CAAeF,WAAf,CAA2B9C,MAA3B,KAAsC,CAJtC,IAKAgP,MAAMhM,QAAN,CAAeF,WAAf,CAA2B9C,MAA3B,KAAsC,CAL1C,EAK6C;AACzC,YAAIoN,YAAY+B,WAAWJ,KAAX,EAAkBC,KAAlB,CAAhB;AACA,YAAI5B,SAAJ,EAAe8B,QAAQ/D,IAAR,CAAaiC,SAAb;AACf,eAAOzG,kBAAkBuI,OAAlB,CAAP;AACH;;AAGD,QAAIE,OAAOR,OAAX;AACAQ,SAAKC,IAAL,CAAUP,YAAYE,KAAZ,CAAV;AACAlE,gBAAYgE,YAAYC,KAAZ,CAAZ,EAAgC,UAAUO,OAAV,EAAmB;AAC/CxE,oBAAYsE,KAAKG,MAAL,CAAYD,OAAZ,CAAZ,EAAkC,UAAUE,KAAV,EAAiB;AAC/C,gBAAIpC,YAAY+B,WAAWG,OAAX,EAAoBE,KAApB,CAAhB;AACA,gBAAIpC,SAAJ,EAAe;AAEX,oBAAIqC,MAAM1M,UAAUqK,SAAV,EAAqBsC,IAArB,CAA0B,GAA1B,CAAV;AACA,oBAAI,CAACT,OAAOQ,GAAP,CAAL,EAAkB;AACdR,2BAAOQ,GAAP,IAAc,IAAd;AACAP,4BAAQ/D,IAAR,CAAaiC,SAAb;AACH;AACJ;AACJ,SAVD;AAWH,KAZD;AAaA,WAAOzG,kBAAkBuI,OAAlB,CAAP;AACH,CApCD;;AA8CA,SAASC,UAAT,CAAoBJ,KAApB,EAA2BC,KAA3B,EAAkC;AAC9B,QAAIW,UAAU5M,UAAUgM,KAAV,CAAd;AACA,QAAIa,UAAU7M,UAAUiM,KAAV,CAAd;AACA,QAAIW,QAAQ3P,MAAR,KAAmB,CAAvB,EAA0B;AACtB,cAAM,IAAIe,KAAJ,CAAU,oDAAV,CAAN;AACH;AACD,QAAI6O,QAAQ5P,MAAR,KAAmB,CAAvB,EAA0B;AACtB,cAAM,IAAIe,KAAJ,CAAU,oDAAV,CAAN;AACH;AACD,QAAI8O,KAAKF,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIG,KAAKH,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAII,KAAKJ,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIK,KAAKL,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIM,KAAKL,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIM,KAAKN,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIO,KAAKP,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIQ,KAAKR,QAAQ,CAAR,EAAW,CAAX,CAAT;AACA,QAAIS,QAAS,CAACD,KAAKF,EAAN,KAAaH,KAAKF,EAAlB,CAAD,GAA2B,CAACM,KAAKF,EAAN,KAAaD,KAAKF,EAAlB,CAAvC;AACA,QAAIQ,QAAS,CAACH,KAAKF,EAAN,KAAaH,KAAKI,EAAlB,CAAD,GAA2B,CAACE,KAAKF,EAAN,KAAaL,KAAKI,EAAlB,CAAvC;AACA,QAAIM,QAAS,CAACR,KAAKF,EAAN,KAAaC,KAAKI,EAAlB,CAAD,GAA2B,CAACF,KAAKF,EAAN,KAAaD,KAAKI,EAAlB,CAAvC;;AAEA,QAAII,UAAU,CAAd,EAAiB;AACb,YAAIC,UAAU,CAAV,IAAeC,UAAU,CAA7B,EAAgC;AAC5B,mBAAO,IAAP;AACH;AACD,eAAO,IAAP;AACH;;AAED,QAAIC,KAAKF,QAAQD,KAAjB;AACA,QAAII,KAAKF,QAAQF,KAAjB;;AAEA,QAAIG,MAAM,CAAN,IAAWA,MAAM,CAAjB,IAAsBC,MAAM,CAA5B,IAAiCA,MAAM,CAA3C,EAA8C;AAC1C,YAAIC,IAAIb,KAAMW,MAAMT,KAAKF,EAAX,CAAd;AACA,YAAIc,IAAIb,KAAMU,MAAMR,KAAKF,EAAX,CAAd;AACA,eAAO1J,MAAM,CAACsK,CAAD,EAAIC,CAAJ,CAAN,CAAP;AACH;AACD,WAAO,IAAP;AACH,C;;;;;;;;;AC3GD,IAAI9B,UAAU,mBAAAP,CAAQ,CAAR,CAAd;AACA,IAAIvL,YAAY,mBAAAuL,CAAQ,CAAR,EAA2BvL,SAA3C;AACA,IAAIiB,cAAc,mBAAAsK,CAAQ,CAAR,EAAsBtK,WAAxC;AACA,IAAIqC,aAAawI,QAAQxI,UAAzB;AACA,IAAIM,oBAAoBkI,QAAQlI,iBAAhC;;AAeAkC,OAAOC,OAAP,GAAiB,UAAU7E,OAAV,EAAmB;AAChC,QAAI,CAACA,OAAL,EAAc,MAAM,IAAIlD,KAAJ,CAAU,qBAAV,CAAN;;AAEd,QAAImO,UAAU,EAAd;AACAlL,gBAAYC,OAAZ,EAAqB,UAAU6B,OAAV,EAAmB;AACpCgJ,oBAAYhJ,OAAZ,EAAqBoJ,OAArB;AACH,KAFD;AAGA,WAAOvI,kBAAkBuI,OAAlB,CAAP;AACH,CARD;;AAkBA,SAASJ,WAAT,CAAqB7K,OAArB,EAA8BiL,OAA9B,EAAuC;AACnC,QAAI9E,SAAS,EAAb;AACA,QAAIpH,WAAWiB,QAAQjB,QAAvB;AACA,YAAQA,SAASsB,IAAjB;AACA,aAAK,SAAL;AACI8F,qBAASrH,UAAUC,QAAV,CAAT;AACA;AACJ,aAAK,YAAL;AACIoH,qBAAS,CAACrH,UAAUC,QAAV,CAAD,CAAT;AALJ;AAOAoH,WAAOnK,OAAP,CAAe,UAAUiL,KAAV,EAAiB;AAC5B,YAAI0F,WAAWC,eAAe3F,KAAf,EAAsBjH,QAAQI,UAA9B,CAAf;AACAuM,iBAAS3Q,OAAT,CAAiB,UAAUqP,OAAV,EAAmB;AAChCA,oBAAQtJ,EAAR,GAAakJ,QAAQlP,MAArB;AACAkP,oBAAQ/D,IAAR,CAAamE,OAAb;AACH,SAHD;AAIH,KAND;AAOH;;AAUD,SAASuB,cAAT,CAAwBzG,MAAxB,EAAgC/F,UAAhC,EAA4C;AACxC,QAAIuM,WAAW,EAAf;AACAxG,WAAO0G,MAAP,CAAc,UAAUrF,cAAV,EAA0BK,aAA1B,EAAyC;AACnD,YAAIwD,UAAUjJ,WAAW,CAACoF,cAAD,EAAiBK,aAAjB,CAAX,EAA4CzH,UAA5C,CAAd;AACAiL,gBAAQvJ,IAAR,GAAeA,KAAK0F,cAAL,EAAqBK,aAArB,CAAf;AACA8E,iBAASzF,IAAT,CAAcmE,OAAd;AACA,eAAOxD,aAAP;AACH,KALD;AAMA,WAAO8E,QAAP;AACH;;AAUD,SAAS7K,IAAT,CAAc4J,OAAd,EAAuBC,OAAvB,EAAgC;AAC5B,QAAIC,KAAKF,QAAQ,CAAR,CAAT;AACA,QAAIG,KAAKH,QAAQ,CAAR,CAAT;AACA,QAAII,KAAKH,QAAQ,CAAR,CAAT;AACA,QAAII,KAAKJ,QAAQ,CAAR,CAAT;AACA,QAAImB,OAAQlB,KAAKE,EAAN,GAAYF,EAAZ,GAAiBE,EAA5B;AACA,QAAIiB,QAASlB,KAAKE,EAAN,GAAYF,EAAZ,GAAiBE,EAA7B;AACA,QAAIiB,OAAQpB,KAAKE,EAAN,GAAYF,EAAZ,GAAiBE,EAA5B;AACA,QAAImB,QAASpB,KAAKE,EAAN,GAAYF,EAAZ,GAAiBE,EAA7B;AACA,WAAO,CAACe,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAoBC,KAApB,CAAP;AACH,C;;;;;;;;;;;;;AC1FD;;;;AACA;;;;AACA;;IAAYnI,K;;AACZ;;IAAY/F,Q;;;;;;kBACG;AACbgG,kCADa;AAEbuD,8BAFa;AAGbxD,cAHa;AAIb/F;AAJa,C;;;;;;;;;;;;;;;ACPf;;AASO,IAAMO,4BAAU,SAAVA,OAAU,CAACsJ,KAAD,EAAQsE,GAAR,EAAaC,KAAb,EAAuB;AAC5C,MAAIA,UAAU,IAAd,EAAoB;AAClB,WAAOC,sBAAsBxE,KAAtB,EAA6BsE,GAA7B,CAAP;AACD,GAFD,MAEO;AAAA,QACAtP,eADA,GACsClB,KAAKmB,EAAL,GAAU,GADhD;AAAA,QACiB0B,eADjB,GACuD,MAAM7C,KAAKmB,EADlE;;AAEL,QAAIC,eAAe,qBAAS8K,KAAT,CAAnB;AACA,QAAI5K,eAAe,qBAASkP,GAAT,CAAnB;AAHK,QAIAG,IAJA,GAI4BzP,kBAAkBE,aAAa,CAAb,CAJ9C;AAAA,QAIMwP,IAJN,GAKF1P,kBAAkBI,aAAa,CAAb,CALhB;AAAA,QAIYG,IAJZ,GAKmCP,kBAAkBE,aAAa,CAAb,CALrD;AAAA,QAIkBM,IAJlB,GAMFR,kBAAkBI,aAAa,CAAb,CANhB;AAAA,QAOAK,CAPA,GAOU3B,KAAK6B,GAAL,CAAS+O,OAAOD,IAAhB,IAAwB3Q,KAAK8B,GAAL,CAASJ,IAAT,CAPlC;AAAA,QAOGmP,CAPH,GAOoD7Q,KAAK8B,GAAL,CAASL,IAAT,IAAiBzB,KAAK6B,GAAL,CAASH,IAAT,CAAjB,GACvD1B,KAAK6B,GAAL,CAASJ,IAAT,IAAiBzB,KAAK8B,GAAL,CAASJ,IAAT,CAAjB,GAAkC1B,KAAK8B,GAAL,CAAS8O,OAAOD,IAAhB,CAR/B;;AASL,WAAQ9N,kBAAkB7C,KAAKgC,KAAL,CAAWL,CAAX,EAAckP,CAAd,CAA1B;AACD;AACF,CAdM;;AAqBA,IAAMH,wDAAwB,SAAxBA,qBAAwB,CAACxE,KAAD,EAAQsE,GAAR,EAAgB;AAEnD,MAAIM,OAAOlO,QAAQ4N,GAAR,EAAatE,KAAb,CAAX;AACA4E,SAAO,CAACA,OAAO,GAAR,IAAe,GAAtB;AACA,SAAOA,IAAP;AACD,CALM,C;;;;;;;;;AC9BP,IAAIC,WAAW,mBAAApD,CAAQ,EAAR,CAAf;AACA,IAAI3H,oBAAoB,mBAAA2H,CAAQ,EAAR,EAAyB3H,iBAAjD;AACA,IAAImE,cAAc,mBAAAwD,CAAQ,CAAR,EAAsBxD,WAAxC;AACA,IAAI6G,cAAc,mBAAArD,CAAQ,EAAR,CAAlB;AACA,IAAIM,QAAQ,mBAAAN,CAAQ,EAAR,CAAZ;;AAaAzF,OAAOC,OAAP,GAAiB,UAAU8I,UAAV,EAAsB;AACnC,QAAIxC,OAAOR,MAAMgD,UAAN,CAAX;;AAiBAxC,SAAKyC,MAAL,GAAc,UAAU/L,OAAV,EAAmB;AAC7B,YAAIhG,MAAMC,OAAN,CAAc+F,OAAd,CAAJ,EAA4B;AACxB,gBAAIC,OAAOD,OAAX;AACAA,sBAAU6L,YAAY5L,IAAZ,CAAV;AACAD,oBAAQC,IAAR,GAAeA,IAAf;AACH,SAJD,MAIO;AACHD,oBAAQC,IAAR,GAAeD,QAAQC,IAAR,GAAeD,QAAQC,IAAvB,GAA8B2L,SAAS5L,OAAT,CAA7C;AACH;AACD,eAAO8I,MAAMkD,SAAN,CAAgBD,MAAhB,CAAuBE,IAAvB,CAA4B,IAA5B,EAAkCjM,OAAlC,CAAP;AACH,KATD;;AAwCAsJ,SAAKC,IAAL,GAAY,UAAUjK,QAAV,EAAoB;AAC5B,YAAIiK,OAAO,EAAX;;AAEA,YAAIvP,MAAMC,OAAN,CAAcqF,QAAd,CAAJ,EAA6B;AACzBA,qBAASnF,OAAT,CAAiB,UAAU8F,IAAV,EAAgB;AAC7B,oBAAID,UAAU6L,YAAY5L,IAAZ,CAAd;AACAD,wBAAQC,IAAR,GAAeA,IAAf;AACAsJ,qBAAKlE,IAAL,CAAUrF,OAAV;AACH,aAJD;AAKH,SAND,MAMO;AAEHgF,wBAAY1F,QAAZ,EAAsB,UAAUU,OAAV,EAAmB;AACrCA,wBAAQC,IAAR,GAAeD,QAAQC,IAAR,GAAeD,QAAQC,IAAvB,GAA8B2L,SAAS5L,OAAT,CAA7C;AACAuJ,qBAAKlE,IAAL,CAAUrF,OAAV;AACH,aAHD;AAIH;AACD,eAAO8I,MAAMkD,SAAN,CAAgBzC,IAAhB,CAAqB0C,IAArB,CAA0B,IAA1B,EAAgC1C,IAAhC,CAAP;AACH,KAjBD;;AAmCAD,SAAK4C,MAAL,GAAc,UAAUlM,OAAV,EAAmB;AAC7B,YAAIhG,MAAMC,OAAN,CAAc+F,OAAd,CAAJ,EAA4B;AACxB,gBAAIC,OAAOD,OAAX;AACAA,sBAAU6L,YAAY5L,IAAZ,CAAV;AACAD,oBAAQC,IAAR,GAAeA,IAAf;AACH;AACD,eAAO6I,MAAMkD,SAAN,CAAgBE,MAAhB,CAAuBD,IAAvB,CAA4B,IAA5B,EAAkCjM,OAAlC,CAAP;AACH,KAPD;;AAgBAsJ,SAAK6C,KAAL,GAAa,YAAY;AACrB,eAAOrD,MAAMkD,SAAN,CAAgBG,KAAhB,CAAsBF,IAAtB,CAA2B,IAA3B,CAAP;AACH,KAFD;;AAoBA3C,SAAKG,MAAL,GAAc,UAAUtL,OAAV,EAAmB;AAC7B,YAAIsL,SAASX,MAAMkD,SAAN,CAAgBvC,MAAhB,CAAuBwC,IAAvB,CAA4B,IAA5B,EAAkC,KAAKG,MAAL,CAAYjO,OAAZ,CAAlC,CAAb;AACA,eAAO0C,kBAAkB4I,MAAlB,CAAP;AACH,KAHD;;AAqBAH,SAAK+C,QAAL,GAAgB,UAAUlO,OAAV,EAAmB;AAC/B,eAAO2K,MAAMkD,SAAN,CAAgBK,QAAhB,CAAyBJ,IAAzB,CAA8B,IAA9B,EAAoC,KAAKG,MAAL,CAAYjO,OAAZ,CAApC,CAAP;AACH,KAFD;;AAYAmL,SAAKgD,GAAL,GAAW,YAAY;AACnB,YAAIA,MAAMxD,MAAMkD,SAAN,CAAgBM,GAAhB,CAAoBL,IAApB,CAAyB,IAAzB,CAAV;AACA,eAAOpL,kBAAkByL,GAAlB,CAAP;AACH,KAHD;;AAaAhD,SAAKiD,MAAL,GAAc,YAAY;AACtB,eAAOzD,MAAMkD,SAAN,CAAgBO,MAAhB,CAAuBN,IAAvB,CAA4B,IAA5B,CAAP;AACH,KAFD;;AA+BA3C,SAAKkD,QAAL,GAAgB,UAAUC,IAAV,EAAgB;AAC5B,eAAO3D,MAAMkD,SAAN,CAAgBQ,QAAhB,CAAyBP,IAAzB,CAA8B,IAA9B,EAAoCQ,IAApC,CAAP;AACH,KAFD;;AAWAnD,SAAK8C,MAAL,GAAc,UAAUjO,OAAV,EAAmB;AAC7B,YAAI8B,IAAJ;AACA,YAAI9B,QAAQ8B,IAAZ,EAAkBA,OAAO9B,QAAQ8B,IAAf,CAAlB,KACK,IAAIjG,MAAMC,OAAN,CAAckE,OAAd,KAA0BA,QAAQjE,MAAR,KAAmB,CAAjD,EAAoD+F,OAAO9B,OAAP,CAApD,KACA8B,OAAO2L,SAASzN,OAAT,CAAP;;AAEL,eAAO;AACHuO,kBAAMzM,KAAK,CAAL,CADH;AAEH0M,kBAAM1M,KAAK,CAAL,CAFH;AAGH2M,kBAAM3M,KAAK,CAAL,CAHH;AAIH4M,kBAAM5M,KAAK,CAAL;AAJH,SAAP;AAMH,KAZD;AAaA,WAAOqJ,IAAP;AACH,CAvOD,C;;;;;;;;;ACjBA,IAAIwD,OAAO,mBAAAtE,CAAQ,CAAR,EAAsBvE,SAAjC;;AAyBAlB,OAAOC,OAAP,GAAiB,UAAU7E,OAAV,EAAmB;AAChC,QAAI8B,OAAO,CAAC2G,QAAD,EAAWA,QAAX,EAAqB,CAACA,QAAtB,EAAgC,CAACA,QAAjC,CAAX;AACAkG,SAAK3O,OAAL,EAAc,UAAUiH,KAAV,EAAiB;AAC3B,YAAInF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAd,EAAwBnF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAV;AACxB,YAAInF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAd,EAAwBnF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAV;AACxB,YAAInF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAd,EAAwBnF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAV;AACxB,YAAInF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAd,EAAwBnF,KAAK,CAAL,IAAUmF,MAAM,CAAN,CAAV;AAC3B,KALD;AAMA,WAAOnF,IAAP;AACH,CATD,C;;;;;;;;;ACLA,SAASD,OAAT,CAAiB9C,QAAjB,EAA2BqB,UAA3B,EAAuC;AACnC,QAAI,CAACrB,QAAL,EAAe,MAAM,IAAIjC,KAAJ,CAAU,oBAAV,CAAN;;AAEf,WAAO;AACHuD,cAAM,SADH;AAEHD,oBAAYA,cAAc,EAFvB;AAGHrB,kBAAUA;AAHP,KAAP;AAKH;AACD6F,OAAOC,OAAP,CAAehD,OAAf,GAAyBA,OAAzB;;AAeA+C,OAAOC,OAAP,CAAe1C,KAAf,GAAuB,UAAUtD,WAAV,EAAuBuB,UAAvB,EAAmC;AACtD,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;AAClB,QAAI+B,YAAY9C,MAAZ,KAAuBmD,SAA3B,EAAsC,MAAM,IAAIpC,KAAJ,CAAU,8BAAV,CAAN;AACtC,QAAI+B,YAAY9C,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,IAAIe,KAAJ,CAAU,6CAAV,CAAN;AAC5B,QAAI,OAAO+B,YAAY,CAAZ,CAAP,KAA0B,QAA1B,IAAsC,OAAOA,YAAY,CAAZ,CAAP,KAA0B,QAApE,EAA8E,MAAM,IAAI/B,KAAJ,CAAU,0BAAV,CAAN;;AAE9E,WAAO+E,QAAQ;AACXxB,cAAM,OADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAVD;;AAiCAwE,OAAOC,OAAP,CAAexC,OAAf,GAAyB,UAAUxD,WAAV,EAAuBuB,UAAvB,EAAmC;AACxD,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,SAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIiC,YAAY9C,MAAhC,EAAwCa,GAAxC,EAA6C;AACzC,YAAI6F,OAAO5D,YAAYjC,CAAZ,CAAX;AACA,YAAI6F,KAAK1G,MAAL,GAAc,CAAlB,EAAqB;AACjB,kBAAM,IAAIe,KAAJ,CAAU,6DAAV,CAAN;AACH;AACD,aAAK,IAAI4D,IAAI,CAAb,EAAgBA,IAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsBA,MAA1C,EAAkD2E,GAAlD,EAAuD;AACnD,gBAAI+B,KAAKA,KAAK1G,MAAL,GAAc,CAAnB,EAAsB2E,CAAtB,MAA6B+B,KAAK,CAAL,EAAQ/B,CAAR,CAAjC,EAA6C;AACzC,sBAAM,IAAI5D,KAAJ,CAAU,6CAAV,CAAN;AACH;AACJ;AACJ;;AAED,WAAO+E,QAAQ;AACXxB,cAAM,SADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAnBD;;AAgDAwE,OAAOC,OAAP,CAAezC,UAAf,GAA4B,UAAUvD,WAAV,EAAuBuB,UAAvB,EAAmC;AAC3D,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,YADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAPD;;AA0BAwE,OAAOC,OAAP,CAAenC,iBAAf,GAAmC,UAAUvB,QAAV,EAAoB;AACnD,QAAI,CAACA,QAAL,EAAe,MAAM,IAAIrE,KAAJ,CAAU,oBAAV,CAAN;;AAEf,WAAO;AACHuD,cAAM,mBADH;AAEHc,kBAAUA;AAFP,KAAP;AAIH,CAPD;;AAwBAyD,OAAOC,OAAP,CAAetC,eAAf,GAAiC,UAAU1D,WAAV,EAAuBuB,UAAvB,EAAmC;AAChE,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,iBADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAPD;;AAwBAwE,OAAOC,OAAP,CAAevC,UAAf,GAA4B,UAAUzD,WAAV,EAAuBuB,UAAvB,EAAmC;AAC3D,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,YADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAPD;;AAyBAwE,OAAOC,OAAP,CAAerC,YAAf,GAA8B,UAAU3D,WAAV,EAAuBuB,UAAvB,EAAmC;AAC7D,QAAI,CAACvB,WAAL,EAAkB,MAAM,IAAI/B,KAAJ,CAAU,uBAAV,CAAN;;AAElB,WAAO+E,QAAQ;AACXxB,cAAM,cADK;AAEXxB,qBAAaA;AAFF,KAAR,EAGJuB,UAHI,CAAP;AAIH,CAPD;;AA8BAwE,OAAOC,OAAP,CAAejC,kBAAf,GAAoC,UAAUxB,UAAV,EAAsBhB,UAAtB,EAAkC;AAClE,QAAI,CAACgB,UAAL,EAAiB,MAAM,IAAItE,KAAJ,CAAU,sBAAV,CAAN;;AAEjB,WAAO+E,QAAQ;AACXxB,cAAM,oBADK;AAEXe,oBAAYA;AAFD,KAAR,EAGJhB,UAHI,CAAP;AAIH,CAPD;;AASA,IAAIyC,UAAU;AACVC,WAAO,IADG;AAEVC,mBAAe,QAFL;AAGVC,aAAS,UAHC;AAIV/D,aAAS,CAJC;AAKVgE,YAAQ,SALE;AAMVC,WAAO,OANG;AAOVC,YAAQ,OAPE;AAQVC,YAAQ,OARE;AASVG,gBAAY,IATF;AAUVC,gBAAY,IAVF;AAWVC,UAAM;AAXI,CAAd;;AAuBAmB,OAAOC,OAAP,CAAepG,iBAAf,GAAmC,UAAUQ,OAAV,EAAmBtB,KAAnB,EAA0B;AACzD,QAAIwB,SAAS0D,QAAQlF,SAAS,YAAjB,CAAb;AACA,QAAIwB,WAAWD,SAAf,EAA0B,MAAM,IAAIpC,KAAJ,CAAU,cAAV,CAAN;;AAE1B,WAAOmC,UAAUE,MAAjB;AACH,CALD;;AAgBAyF,OAAOC,OAAP,CAAelF,iBAAf,GAAmC,UAAUlD,QAAV,EAAoBkB,KAApB,EAA2B;AAC1D,QAAIwB,SAAS0D,QAAQlF,SAAS,YAAjB,CAAb;AACA,QAAIwB,WAAWD,SAAf,EAA0B,MAAM,IAAIpC,KAAJ,CAAU,cAAV,CAAN;;AAE1B,WAAOL,WAAW0C,MAAlB;AACH,CALD;;AAgBAyF,OAAOC,OAAP,CAAeZ,iBAAf,GAAmC,UAAUxH,QAAV,EAAoBkB,KAApB,EAA2B;AAC1D,QAAIwB,SAAS0D,QAAQlF,SAAS,YAAjB,CAAb;AACA,QAAIwB,WAAWD,SAAf,EAA0B,MAAM,IAAIpC,KAAJ,CAAU,cAAV,CAAN;;AAE1B,WAAQL,WAAW0C,MAAZ,GAAsB,OAA7B;AACH,CALD,C;;;;;;;AC9TA;;AAEAyF,OAAOC,OAAP,GAAiB+J,WAAjB;;AAMA,SAASA,WAAT,CAAqBxS,GAArB,EAA0B6J,CAA1B,EAA6B9I,IAA7B,EAAmCC,KAAnC,EAA0CyR,OAA1C,EAAmD;AAC/C1R,WAAOA,QAAQ,CAAf;AACAC,YAAQA,SAAUhB,IAAIL,MAAJ,GAAa,CAA/B;AACA8S,cAAUA,WAAWC,cAArB;;AAEA,WAAO1R,QAAQD,IAAf,EAAqB;AACjB,YAAIC,QAAQD,IAAR,GAAe,GAAnB,EAAwB;AACpB,gBAAI4R,IAAI3R,QAAQD,IAAR,GAAe,CAAvB;AACA,gBAAI6R,IAAI/I,IAAI9I,IAAJ,GAAW,CAAnB;AACA,gBAAI8R,IAAIvS,KAAKO,GAAL,CAAS8R,CAAT,CAAR;AACA,gBAAIG,IAAI,MAAMxS,KAAKyS,GAAL,CAAS,IAAIF,CAAJ,GAAQ,CAAjB,CAAd;AACA,gBAAIG,KAAK,MAAM1S,KAAKiC,IAAL,CAAUsQ,IAAIC,CAAJ,IAASH,IAAIG,CAAb,IAAkBH,CAA5B,CAAN,IAAwCC,IAAID,IAAI,CAAR,GAAY,CAAZ,GAAgB,CAAC,CAAjB,GAAqB,CAA7D,CAAT;AACA,gBAAIM,UAAU3S,KAAKqM,GAAL,CAAS5L,IAAT,EAAeT,KAAKY,KAAL,CAAW2I,IAAI+I,IAAIE,CAAJ,GAAQH,CAAZ,GAAgBK,EAA3B,CAAf,CAAd;AACA,gBAAIE,WAAW5S,KAAK6S,GAAL,CAASnS,KAAT,EAAgBV,KAAKY,KAAL,CAAW2I,IAAI,CAAC8I,IAAIC,CAAL,IAAUE,CAAV,GAAcH,CAAlB,GAAsBK,EAAjC,CAAhB,CAAf;AACAR,wBAAYxS,GAAZ,EAAiB6J,CAAjB,EAAoBoJ,OAApB,EAA6BC,QAA7B,EAAuCT,OAAvC;AACH;;AAED,YAAIW,IAAIpT,IAAI6J,CAAJ,CAAR;AACA,YAAIrJ,IAAIO,IAAR;AACA,YAAIuD,IAAItD,KAAR;;AAEAqS,aAAKrT,GAAL,EAAUe,IAAV,EAAgB8I,CAAhB;AACA,YAAI4I,QAAQzS,IAAIgB,KAAJ,CAAR,EAAoBoS,CAApB,IAAyB,CAA7B,EAAgCC,KAAKrT,GAAL,EAAUe,IAAV,EAAgBC,KAAhB;;AAEhC,eAAOR,IAAI8D,CAAX,EAAc;AACV+O,iBAAKrT,GAAL,EAAUQ,CAAV,EAAa8D,CAAb;AACA9D;AACA8D;AACA,mBAAOmO,QAAQzS,IAAIQ,CAAJ,CAAR,EAAgB4S,CAAhB,IAAqB,CAA5B;AAA+B5S;AAA/B,aACA,OAAOiS,QAAQzS,IAAIsE,CAAJ,CAAR,EAAgB8O,CAAhB,IAAqB,CAA5B;AAA+B9O;AAA/B;AACH;;AAED,YAAImO,QAAQzS,IAAIe,IAAJ,CAAR,EAAmBqS,CAAnB,MAA0B,CAA9B,EAAiCC,KAAKrT,GAAL,EAAUe,IAAV,EAAgBuD,CAAhB,EAAjC,KACK;AACDA;AACA+O,iBAAKrT,GAAL,EAAUsE,CAAV,EAAatD,KAAb;AACH;;AAED,YAAIsD,KAAKuF,CAAT,EAAY9I,OAAOuD,IAAI,CAAX;AACZ,YAAIuF,KAAKvF,CAAT,EAAYtD,QAAQsD,IAAI,CAAZ;AACf;AACJ;;AAED,SAAS+O,IAAT,CAAcrT,GAAd,EAAmBQ,CAAnB,EAAsB8D,CAAtB,EAAyB;AACrB,QAAIgP,MAAMtT,IAAIQ,CAAJ,CAAV;AACAR,QAAIQ,CAAJ,IAASR,IAAIsE,CAAJ,CAAT;AACAtE,QAAIsE,CAAJ,IAASgP,GAAT;AACH;;AAED,SAASZ,cAAT,CAAwBzQ,CAAxB,EAA2BkP,CAA3B,EAA8B;AAC1B,WAAOlP,IAAIkP,CAAJ,GAAQ,CAAC,CAAT,GAAalP,IAAIkP,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACH,C;;;;;;;AC3DD;;AAEA3I,OAAOC,OAAP,GAAiB8F,KAAjB;;AAEA,IAAIgF,cAAc,mBAAAtF,CAAQ,EAAR,CAAlB;;AAEA,SAASM,KAAT,CAAegD,UAAf,EAA2BiC,MAA3B,EAAmC;AAC/B,QAAI,EAAE,gBAAgBjF,KAAlB,CAAJ,EAA8B,OAAO,IAAIA,KAAJ,CAAUgD,UAAV,EAAsBiC,MAAtB,CAAP;;AAG9B,SAAKC,WAAL,GAAmBnT,KAAKqM,GAAL,CAAS,CAAT,EAAY4E,cAAc,CAA1B,CAAnB;AACA,SAAKmC,WAAL,GAAmBpT,KAAKqM,GAAL,CAAS,CAAT,EAAYrM,KAAKqT,IAAL,CAAU,KAAKF,WAAL,GAAmB,GAA7B,CAAZ,CAAnB;;AAEA,QAAID,MAAJ,EAAY;AACR,aAAKI,WAAL,CAAiBJ,MAAjB;AACH;;AAED,SAAK5B,KAAL;AACH;;AAEDrD,MAAMkD,SAAN,GAAkB;;AAEdM,SAAK,eAAY;AACb,eAAO,KAAK8B,IAAL,CAAU,KAAKxU,IAAf,EAAqB,EAArB,CAAP;AACH,KAJa;;AAMd6P,YAAQ,gBAAUxJ,IAAV,EAAgB;;AAEpB,YAAIoO,OAAO,KAAKzU,IAAhB;AAAA,YACI0U,SAAS,EADb;AAAA,YAEIlC,SAAS,KAAKA,MAFlB;;AAIA,YAAI,CAAC/C,WAAWpJ,IAAX,EAAiBoO,IAAjB,CAAL,EAA6B,OAAOC,MAAP;;AAE7B,YAAIC,gBAAgB,EAApB;AAAA,YACIxT,CADJ;AAAA,YACOyT,GADP;AAAA,YACYC,KADZ;AAAA,YACmBC,SADnB;;AAGA,eAAOL,IAAP,EAAa;AACT,iBAAKtT,IAAI,CAAJ,EAAOyT,MAAMH,KAAKjI,QAAL,CAAclM,MAAhC,EAAwCa,IAAIyT,GAA5C,EAAiDzT,GAAjD,EAAsD;;AAElD0T,wBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACA2T,4BAAYL,KAAKM,IAAL,GAAYvC,OAAOqC,KAAP,CAAZ,GAA4BA,KAAxC;;AAEA,oBAAIpF,WAAWpJ,IAAX,EAAiByO,SAAjB,CAAJ,EAAiC;AAC7B,wBAAIL,KAAKM,IAAT,EAAeL,OAAOjJ,IAAP,CAAYoJ,KAAZ,EAAf,KACK,IAAIG,SAAS3O,IAAT,EAAeyO,SAAf,CAAJ,EAA+B,KAAKN,IAAL,CAAUK,KAAV,EAAiBH,MAAjB,EAA/B,KACAC,cAAclJ,IAAd,CAAmBoJ,KAAnB;AACR;AACJ;AACDJ,mBAAOE,cAAcM,GAAd,EAAP;AACH;;AAED,eAAOP,MAAP;AACH,KAjCa;;AAmCdjC,cAAU,kBAAUpM,IAAV,EAAgB;;AAEtB,YAAIoO,OAAO,KAAKzU,IAAhB;AAAA,YACIwS,SAAS,KAAKA,MADlB;;AAGA,YAAI,CAAC/C,WAAWpJ,IAAX,EAAiBoO,IAAjB,CAAL,EAA6B,OAAO,KAAP;;AAE7B,YAAIE,gBAAgB,EAApB;AAAA,YACIxT,CADJ;AAAA,YACOyT,GADP;AAAA,YACYC,KADZ;AAAA,YACmBC,SADnB;;AAGA,eAAOL,IAAP,EAAa;AACT,iBAAKtT,IAAI,CAAJ,EAAOyT,MAAMH,KAAKjI,QAAL,CAAclM,MAAhC,EAAwCa,IAAIyT,GAA5C,EAAiDzT,GAAjD,EAAsD;;AAElD0T,wBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACA2T,4BAAYL,KAAKM,IAAL,GAAYvC,OAAOqC,KAAP,CAAZ,GAA4BA,KAAxC;;AAEA,oBAAIpF,WAAWpJ,IAAX,EAAiByO,SAAjB,CAAJ,EAAiC;AAC7B,wBAAIL,KAAKM,IAAL,IAAaC,SAAS3O,IAAT,EAAeyO,SAAf,CAAjB,EAA4C,OAAO,IAAP;AAC5CH,kCAAclJ,IAAd,CAAmBoJ,KAAnB;AACH;AACJ;AACDJ,mBAAOE,cAAcM,GAAd,EAAP;AACH;;AAED,eAAO,KAAP;AACH,KA5Da;;AA8DdtF,UAAM,cAAU3P,IAAV,EAAgB;AAClB,YAAI,EAAEA,QAAQA,KAAKM,MAAf,CAAJ,EAA4B,OAAO,IAAP;;AAE5B,YAAIN,KAAKM,MAAL,GAAc,KAAK+T,WAAvB,EAAoC;AAChC,iBAAK,IAAIlT,IAAI,CAAR,EAAWyT,MAAM5U,KAAKM,MAA3B,EAAmCa,IAAIyT,GAAvC,EAA4CzT,GAA5C,EAAiD;AAC7C,qBAAKgR,MAAL,CAAYnS,KAAKmB,CAAL,CAAZ;AACH;AACD,mBAAO,IAAP;AACH;;AAGD,YAAIsT,OAAO,KAAKS,MAAL,CAAYlV,KAAKmV,KAAL,EAAZ,EAA0B,CAA1B,EAA6BnV,KAAKM,MAAL,GAAc,CAA3C,EAA8C,CAA9C,CAAX;;AAEA,YAAI,CAAC,KAAKN,IAAL,CAAUwM,QAAV,CAAmBlM,MAAxB,EAAgC;AAE5B,iBAAKN,IAAL,GAAYyU,IAAZ;AAEH,SAJD,MAIO,IAAI,KAAKzU,IAAL,CAAUoV,MAAV,KAAqBX,KAAKW,MAA9B,EAAsC;AAEzC,iBAAKC,UAAL,CAAgB,KAAKrV,IAArB,EAA2ByU,IAA3B;AAEH,SAJM,MAIA;AACH,gBAAI,KAAKzU,IAAL,CAAUoV,MAAV,GAAmBX,KAAKW,MAA5B,EAAoC;AAEhC,oBAAIE,UAAU,KAAKtV,IAAnB;AACA,qBAAKA,IAAL,GAAYyU,IAAZ;AACAA,uBAAOa,OAAP;AACH;;AAGD,iBAAKC,OAAL,CAAad,IAAb,EAAmB,KAAKzU,IAAL,CAAUoV,MAAV,GAAmBX,KAAKW,MAAxB,GAAiC,CAApD,EAAuD,IAAvD;AACH;;AAED,eAAO,IAAP;AACH,KAhGa;;AAkGdjD,YAAQ,gBAAU3R,IAAV,EAAgB;AACpB,YAAIA,IAAJ,EAAU,KAAK+U,OAAL,CAAa/U,IAAb,EAAmB,KAAKR,IAAL,CAAUoV,MAAV,GAAmB,CAAtC;AACV,eAAO,IAAP;AACH,KArGa;;AAuGd7C,WAAO,iBAAY;AACf,aAAKvS,IAAL,GAAYwV,WAAW,EAAX,CAAZ;AACA,eAAO,IAAP;AACH,KA1Ga;;AA4GdlD,YAAQ,gBAAU9R,IAAV,EAAgBiV,QAAhB,EAA0B;AAC9B,YAAI,CAACjV,IAAL,EAAW,OAAO,IAAP;;AAEX,YAAIiU,OAAO,KAAKzU,IAAhB;AAAA,YACIqG,OAAO,KAAKmM,MAAL,CAAYhS,IAAZ,CADX;AAAA,YAEIkV,OAAO,EAFX;AAAA,YAGIC,UAAU,EAHd;AAAA,YAIIxU,CAJJ;AAAA,YAIOyU,MAJP;AAAA,YAIe/H,KAJf;AAAA,YAIsBgI,OAJtB;;AAOA,eAAOpB,QAAQiB,KAAKpV,MAApB,EAA4B;;AAExB,gBAAI,CAACmU,IAAL,EAAW;AACPA,uBAAOiB,KAAKT,GAAL,EAAP;AACAW,yBAASF,KAAKA,KAAKpV,MAAL,GAAc,CAAnB,CAAT;AACAa,oBAAIwU,QAAQV,GAAR,EAAJ;AACAY,0BAAU,IAAV;AACH;;AAED,gBAAIpB,KAAKM,IAAT,EAAe;AACXlH,wBAAQiI,SAAStV,IAAT,EAAeiU,KAAKjI,QAApB,EAA8BiJ,QAA9B,CAAR;;AAEA,oBAAI5H,UAAU,CAAC,CAAf,EAAkB;AAEd4G,yBAAKjI,QAAL,CAAcuJ,MAAd,CAAqBlI,KAArB,EAA4B,CAA5B;AACA6H,yBAAKjK,IAAL,CAAUgJ,IAAV;AACA,yBAAKuB,SAAL,CAAeN,IAAf;AACA,2BAAO,IAAP;AACH;AACJ;;AAED,gBAAI,CAACG,OAAD,IAAY,CAACpB,KAAKM,IAAlB,IAA0BC,SAASP,IAAT,EAAepO,IAAf,CAA9B,EAAoD;AAChDqP,qBAAKjK,IAAL,CAAUgJ,IAAV;AACAkB,wBAAQlK,IAAR,CAAatK,CAAb;AACAA,oBAAI,CAAJ;AACAyU,yBAASnB,IAAT;AACAA,uBAAOA,KAAKjI,QAAL,CAAc,CAAd,CAAP;AAEH,aAPD,MAOO,IAAIoJ,MAAJ,EAAY;AACfzU;AACAsT,uBAAOmB,OAAOpJ,QAAP,CAAgBrL,CAAhB,CAAP;AACA0U,0BAAU,KAAV;AAEH,aALM,MAKApB,OAAO,IAAP;AACV;;AAED,eAAO,IAAP;AACH,KA3Ja;;AA6JdjC,YAAQ,gBAAUhS,IAAV,EAAgB;AAAE,eAAOA,IAAP;AAAc,KA7J1B;;AA+JdyV,iBAAaC,eA/JC;AAgKdC,iBAAaC,eAhKC;;AAkKdzD,YAAQ,kBAAY;AAAE,eAAO,KAAK3S,IAAZ;AAAmB,KAlK3B;;AAoKd4S,cAAU,kBAAU5S,IAAV,EAAgB;AACtB,aAAKA,IAAL,GAAYA,IAAZ;AACA,eAAO,IAAP;AACH,KAvKa;;AAyKdwU,UAAM,cAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC1B,YAAIC,gBAAgB,EAApB;AACA,eAAOF,IAAP,EAAa;AACT,gBAAIA,KAAKM,IAAT,EAAeL,OAAOjJ,IAAP,CAAY4K,KAAZ,CAAkB3B,MAAlB,EAA0BD,KAAKjI,QAA/B,EAAf,KACKmI,cAAclJ,IAAd,CAAmB4K,KAAnB,CAAyB1B,aAAzB,EAAwCF,KAAKjI,QAA7C;;AAELiI,mBAAOE,cAAcM,GAAd,EAAP;AACH;AACD,eAAOP,MAAP;AACH,KAlLa;;AAoLdQ,YAAQ,gBAAU/U,KAAV,EAAiBuB,IAAjB,EAAuBC,KAAvB,EAA8ByT,MAA9B,EAAsC;;AAE1C,YAAIkB,IAAI3U,QAAQD,IAAR,GAAe,CAAvB;AAAA,YACI6U,IAAI,KAAKnC,WADb;AAAA,YAEIK,IAFJ;;AAIA,YAAI6B,KAAKC,CAAT,EAAY;AAER9B,mBAAOe,WAAWrV,MAAMgV,KAAN,CAAYzT,IAAZ,EAAkBC,QAAQ,CAA1B,CAAX,CAAP;AACA6U,qBAAS/B,IAAT,EAAe,KAAKjC,MAApB;AACA,mBAAOiC,IAAP;AACH;;AAED,YAAI,CAACW,MAAL,EAAa;AAETA,qBAASnU,KAAKqT,IAAL,CAAUrT,KAAKO,GAAL,CAAS8U,CAAT,IAAcrV,KAAKO,GAAL,CAAS+U,CAAT,CAAxB,CAAT;;AAGAA,gBAAItV,KAAKqT,IAAL,CAAUgC,IAAIrV,KAAK4B,GAAL,CAAS0T,CAAT,EAAYnB,SAAS,CAArB,CAAd,CAAJ;AACH;;AAEDX,eAAOe,WAAW,EAAX,CAAP;AACAf,aAAKM,IAAL,GAAY,KAAZ;AACAN,aAAKW,MAAL,GAAcA,MAAd;;AAIA,YAAIqB,KAAKxV,KAAKqT,IAAL,CAAUgC,IAAIC,CAAd,CAAT;AAAA,YACIG,KAAKD,KAAKxV,KAAKqT,IAAL,CAAUrT,KAAKiC,IAAL,CAAUqT,CAAV,CAAV,CADd;AAAA,YAEIpV,CAFJ;AAAA,YAEO8D,CAFP;AAAA,YAEU0R,MAFV;AAAA,YAEkBC,MAFlB;;AAIAC,oBAAY1W,KAAZ,EAAmBuB,IAAnB,EAAyBC,KAAzB,EAAgC+U,EAAhC,EAAoC,KAAKT,WAAzC;;AAEA,aAAK9U,IAAIO,IAAT,EAAeP,KAAKQ,KAApB,EAA2BR,KAAKuV,EAAhC,EAAoC;;AAEhCC,qBAAS1V,KAAK6S,GAAL,CAAS3S,IAAIuV,EAAJ,GAAS,CAAlB,EAAqB/U,KAArB,CAAT;;AAEAkV,wBAAY1W,KAAZ,EAAmBgB,CAAnB,EAAsBwV,MAAtB,EAA8BF,EAA9B,EAAkC,KAAKN,WAAvC;;AAEA,iBAAKlR,IAAI9D,CAAT,EAAY8D,KAAK0R,MAAjB,EAAyB1R,KAAKwR,EAA9B,EAAkC;;AAE9BG,yBAAS3V,KAAK6S,GAAL,CAAS7O,IAAIwR,EAAJ,GAAS,CAAlB,EAAqBE,MAArB,CAAT;;AAGAlC,qBAAKjI,QAAL,CAAcf,IAAd,CAAmB,KAAKyJ,MAAL,CAAY/U,KAAZ,EAAmB8E,CAAnB,EAAsB2R,MAAtB,EAA8BxB,SAAS,CAAvC,CAAnB;AACH;AACJ;;AAEDoB,iBAAS/B,IAAT,EAAe,KAAKjC,MAApB;;AAEA,eAAOiC,IAAP;AACH,KAvOa;;AAyOdqC,oBAAgB,wBAAUzQ,IAAV,EAAgBoO,IAAhB,EAAsBsC,KAAtB,EAA6BrB,IAA7B,EAAmC;;AAE/C,YAAIvU,CAAJ,EAAOyT,GAAP,EAAYC,KAAZ,EAAmBmC,UAAnB,EAA+BhO,IAA/B,EAAqCiO,WAArC,EAAkDC,OAAlD,EAA2DC,cAA3D;;AAEA,eAAO,IAAP,EAAa;AACTzB,iBAAKjK,IAAL,CAAUgJ,IAAV;;AAEA,gBAAIA,KAAKM,IAAL,IAAaW,KAAKpV,MAAL,GAAc,CAAd,KAAoByW,KAArC,EAA4C;;AAE5CG,sBAAUC,iBAAiBnK,QAA3B;;AAEA,iBAAK7L,IAAI,CAAJ,EAAOyT,MAAMH,KAAKjI,QAAL,CAAclM,MAAhC,EAAwCa,IAAIyT,GAA5C,EAAiDzT,GAAjD,EAAsD;AAClD0T,wBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACA6H,uBAAOoO,SAASvC,KAAT,CAAP;AACAoC,8BAAcI,aAAahR,IAAb,EAAmBwO,KAAnB,IAA4B7L,IAA1C;;AAGA,oBAAIiO,cAAcE,cAAlB,EAAkC;AAC9BA,qCAAiBF,WAAjB;AACAC,8BAAUlO,OAAOkO,OAAP,GAAiBlO,IAAjB,GAAwBkO,OAAlC;AACAF,iCAAanC,KAAb;AAEH,iBALD,MAKO,IAAIoC,gBAAgBE,cAApB,EAAoC;AAEvC,wBAAInO,OAAOkO,OAAX,EAAoB;AAChBA,kCAAUlO,IAAV;AACAgO,qCAAanC,KAAb;AACH;AACJ;AACJ;;AAEDJ,mBAAOuC,cAAcvC,KAAKjI,QAAL,CAAc,CAAd,CAArB;AACH;;AAED,eAAOiI,IAAP;AACH,KA5Qa;;AA8Qdc,aAAS,iBAAU/U,IAAV,EAAgBuW,KAAhB,EAAuBO,MAAvB,EAA+B;;AAEpC,YAAI9E,SAAS,KAAKA,MAAlB;AAAA,YACInM,OAAOiR,SAAS9W,IAAT,GAAgBgS,OAAOhS,IAAP,CAD3B;AAAA,YAEI+W,aAAa,EAFjB;;AAKA,YAAI9C,OAAO,KAAKqC,cAAL,CAAoBzQ,IAApB,EAA0B,KAAKrG,IAA/B,EAAqC+W,KAArC,EAA4CQ,UAA5C,CAAX;;AAGA9C,aAAKjI,QAAL,CAAcf,IAAd,CAAmBjL,IAAnB;AACAgX,eAAO/C,IAAP,EAAapO,IAAb;;AAGA,eAAO0Q,SAAS,CAAhB,EAAmB;AACf,gBAAIQ,WAAWR,KAAX,EAAkBvK,QAAlB,CAA2BlM,MAA3B,GAAoC,KAAK8T,WAA7C,EAA0D;AACtD,qBAAKqD,MAAL,CAAYF,UAAZ,EAAwBR,KAAxB;AACAA;AACH,aAHD,MAGO;AACV;;AAGD,aAAKW,mBAAL,CAAyBrR,IAAzB,EAA+BkR,UAA/B,EAA2CR,KAA3C;AACH,KArSa;;AAwSdU,YAAQ,gBAAUF,UAAV,EAAsBR,KAAtB,EAA6B;;AAEjC,YAAItC,OAAO8C,WAAWR,KAAX,CAAX;AAAA,YACIR,IAAI9B,KAAKjI,QAAL,CAAclM,MADtB;AAAA,YAEIiT,IAAI,KAAKc,WAFb;;AAIA,aAAKsD,gBAAL,CAAsBlD,IAAtB,EAA4BlB,CAA5B,EAA+BgD,CAA/B;;AAEA,YAAIqB,aAAa,KAAKC,iBAAL,CAAuBpD,IAAvB,EAA6BlB,CAA7B,EAAgCgD,CAAhC,CAAjB;;AAEA,YAAIuB,UAAUtC,WAAWf,KAAKjI,QAAL,CAAcuJ,MAAd,CAAqB6B,UAArB,EAAiCnD,KAAKjI,QAAL,CAAclM,MAAd,GAAuBsX,UAAxD,CAAX,CAAd;AACAE,gBAAQ1C,MAAR,GAAiBX,KAAKW,MAAtB;AACA0C,gBAAQ/C,IAAR,GAAeN,KAAKM,IAApB;;AAEAyB,iBAAS/B,IAAT,EAAe,KAAKjC,MAApB;AACAgE,iBAASsB,OAAT,EAAkB,KAAKtF,MAAvB;;AAEA,YAAIuE,KAAJ,EAAWQ,WAAWR,QAAQ,CAAnB,EAAsBvK,QAAtB,CAA+Bf,IAA/B,CAAoCqM,OAApC,EAAX,KACK,KAAKzC,UAAL,CAAgBZ,IAAhB,EAAsBqD,OAAtB;AACR,KA3Ta;;AA6TdzC,gBAAY,oBAAUZ,IAAV,EAAgBqD,OAAhB,EAAyB;AAEjC,aAAK9X,IAAL,GAAYwV,WAAW,CAACf,IAAD,EAAOqD,OAAP,CAAX,CAAZ;AACA,aAAK9X,IAAL,CAAUoV,MAAV,GAAmBX,KAAKW,MAAL,GAAc,CAAjC;AACA,aAAKpV,IAAL,CAAU+U,IAAV,GAAiB,KAAjB;AACAyB,iBAAS,KAAKxW,IAAd,EAAoB,KAAKwS,MAAzB;AACH,KAnUa;;AAqUdqF,uBAAmB,2BAAUpD,IAAV,EAAgBlB,CAAhB,EAAmBgD,CAAnB,EAAsB;;AAErC,YAAIpV,CAAJ,EAAO4W,KAAP,EAAcC,KAAd,EAAqBC,OAArB,EAA8BjP,IAA9B,EAAoCkP,UAApC,EAAgDhB,OAAhD,EAAyDrJ,KAAzD;;AAEAqK,qBAAahB,UAAUlK,QAAvB;;AAEA,aAAK7L,IAAIoS,CAAT,EAAYpS,KAAKoV,IAAIhD,CAArB,EAAwBpS,GAAxB,EAA6B;AACzB4W,oBAAQI,SAAS1D,IAAT,EAAe,CAAf,EAAkBtT,CAAlB,EAAqB,KAAKqR,MAA1B,CAAR;AACAwF,oBAAQG,SAAS1D,IAAT,EAAetT,CAAf,EAAkBoV,CAAlB,EAAqB,KAAK/D,MAA1B,CAAR;;AAEAyF,sBAAUG,iBAAiBL,KAAjB,EAAwBC,KAAxB,CAAV;AACAhP,mBAAOoO,SAASW,KAAT,IAAkBX,SAASY,KAAT,CAAzB;;AAGA,gBAAIC,UAAUC,UAAd,EAA0B;AACtBA,6BAAaD,OAAb;AACApK,wBAAQ1M,CAAR;;AAEA+V,0BAAUlO,OAAOkO,OAAP,GAAiBlO,IAAjB,GAAwBkO,OAAlC;AAEH,aAND,MAMO,IAAIe,YAAYC,UAAhB,EAA4B;AAE/B,oBAAIlP,OAAOkO,OAAX,EAAoB;AAChBA,8BAAUlO,IAAV;AACA6E,4BAAQ1M,CAAR;AACH;AACJ;AACJ;;AAED,eAAO0M,KAAP;AACH,KAnWa;;AAsWd8J,sBAAkB,0BAAUlD,IAAV,EAAgBlB,CAAhB,EAAmBgD,CAAnB,EAAsB;;AAEpC,YAAIN,cAAcxB,KAAKM,IAAL,GAAY,KAAKkB,WAAjB,GAA+BC,eAAjD;AAAA,YACIC,cAAc1B,KAAKM,IAAL,GAAY,KAAKoB,WAAjB,GAA+BC,eADjD;AAAA,YAEIiC,UAAU,KAAKC,cAAL,CAAoB7D,IAApB,EAA0BlB,CAA1B,EAA6BgD,CAA7B,EAAgCN,WAAhC,CAFd;AAAA,YAGIsC,UAAU,KAAKD,cAAL,CAAoB7D,IAApB,EAA0BlB,CAA1B,EAA6BgD,CAA7B,EAAgCJ,WAAhC,CAHd;;AAOA,YAAIkC,UAAUE,OAAd,EAAuB9D,KAAKjI,QAAL,CAAcgM,IAAd,CAAmBvC,WAAnB;AAC1B,KAhXa;;AAmXdqC,oBAAgB,wBAAU7D,IAAV,EAAgBlB,CAAhB,EAAmBgD,CAAnB,EAAsBnD,OAAtB,EAA+B;;AAE3CqB,aAAKjI,QAAL,CAAcgM,IAAd,CAAmBpF,OAAnB;;AAEA,YAAIZ,SAAS,KAAKA,MAAlB;AAAA,YACIiG,WAAWN,SAAS1D,IAAT,EAAe,CAAf,EAAkBlB,CAAlB,EAAqBf,MAArB,CADf;AAAA,YAEIkG,YAAYP,SAAS1D,IAAT,EAAe8B,IAAIhD,CAAnB,EAAsBgD,CAAtB,EAAyB/D,MAAzB,CAFhB;AAAA,YAGImG,SAASC,WAAWH,QAAX,IAAuBG,WAAWF,SAAX,CAHpC;AAAA,YAIIvX,CAJJ;AAAA,YAIO0T,KAJP;;AAMA,aAAK1T,IAAIoS,CAAT,EAAYpS,IAAIoV,IAAIhD,CAApB,EAAuBpS,GAAvB,EAA4B;AACxB0T,oBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACAqW,mBAAOiB,QAAP,EAAiBhE,KAAKM,IAAL,GAAYvC,OAAOqC,KAAP,CAAZ,GAA4BA,KAA7C;AACA8D,sBAAUC,WAAWH,QAAX,CAAV;AACH;;AAED,aAAKtX,IAAIoV,IAAIhD,CAAJ,GAAQ,CAAjB,EAAoBpS,KAAKoS,CAAzB,EAA4BpS,GAA5B,EAAiC;AAC7B0T,oBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACAqW,mBAAOkB,SAAP,EAAkBjE,KAAKM,IAAL,GAAYvC,OAAOqC,KAAP,CAAZ,GAA4BA,KAA9C;AACA8D,sBAAUC,WAAWF,SAAX,CAAV;AACH;;AAED,eAAOC,MAAP;AACH,KA1Ya;;AA4YdjB,yBAAqB,6BAAUrR,IAAV,EAAgBqP,IAAhB,EAAsBqB,KAAtB,EAA6B;AAE9C,aAAK,IAAI5V,IAAI4V,KAAb,EAAoB5V,KAAK,CAAzB,EAA4BA,GAA5B,EAAiC;AAC7BqW,mBAAO9B,KAAKvU,CAAL,CAAP,EAAgBkF,IAAhB;AACH;AACJ,KAjZa;;AAmZd2P,eAAW,mBAAUN,IAAV,EAAgB;AAEvB,aAAK,IAAIvU,IAAIuU,KAAKpV,MAAL,GAAc,CAAtB,EAAyBuY,QAA9B,EAAwC1X,KAAK,CAA7C,EAAgDA,GAAhD,EAAqD;AACjD,gBAAIuU,KAAKvU,CAAL,EAAQqL,QAAR,CAAiBlM,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,oBAAIa,IAAI,CAAR,EAAW;AACP0X,+BAAWnD,KAAKvU,IAAI,CAAT,EAAYqL,QAAvB;AACAqM,6BAAS9C,MAAT,CAAgB8C,SAASvK,OAAT,CAAiBoH,KAAKvU,CAAL,CAAjB,CAAhB,EAA2C,CAA3C;AAEH,iBAJD,MAIO,KAAKoR,KAAL;AAEV,aAPD,MAOOiE,SAASd,KAAKvU,CAAL,CAAT,EAAkB,KAAKqR,MAAvB;AACV;AACJ,KA/Za;;AAiad+B,iBAAa,qBAAUJ,MAAV,EAAkB;;AAO3B,YAAI2E,aAAa,CAAC,UAAD,EAAa,MAAb,EAAqB,GAArB,CAAjB;;AAEA,aAAK7C,WAAL,GAAmB,IAAI8C,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuBD,WAAW9I,IAAX,CAAgBmE,OAAO,CAAP,CAAhB,CAAvB,CAAnB;AACA,aAAKgC,WAAL,GAAmB,IAAI4C,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuBD,WAAW9I,IAAX,CAAgBmE,OAAO,CAAP,CAAhB,CAAvB,CAAnB;;AAEA,aAAK3B,MAAL,GAAc,IAAIuG,QAAJ,CAAa,GAAb,EACV,oBAAoB5E,OAAO,CAAP,CAApB,GACA,WADA,GACcA,OAAO,CAAP,CADd,GAEA,WAFA,GAEcA,OAAO,CAAP,CAFd,GAGA,WAHA,GAGcA,OAAO,CAAP,CAHd,GAG0B,IAJhB,CAAd;AAKH;AAlba,CAAlB;;AAqbA,SAAS2B,QAAT,CAAkBtV,IAAlB,EAAwBL,KAAxB,EAA+BsV,QAA/B,EAAyC;AACrC,QAAI,CAACA,QAAL,EAAe,OAAOtV,MAAMmO,OAAN,CAAc9N,IAAd,CAAP;;AAEf,SAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAIhB,MAAMG,MAA1B,EAAkCa,GAAlC,EAAuC;AACnC,YAAIsU,SAASjV,IAAT,EAAeL,MAAMgB,CAAN,CAAf,CAAJ,EAA8B,OAAOA,CAAP;AACjC;AACD,WAAO,CAAC,CAAR;AACH;;AAGD,SAASqV,QAAT,CAAkB/B,IAAlB,EAAwBjC,MAAxB,EAAgC;AAC5B2F,aAAS1D,IAAT,EAAe,CAAf,EAAkBA,KAAKjI,QAAL,CAAclM,MAAhC,EAAwCkS,MAAxC,EAAgDiC,IAAhD;AACH;;AAGD,SAAS0D,QAAT,CAAkB1D,IAAlB,EAAwBjK,CAAxB,EAA2BwO,CAA3B,EAA8BxG,MAA9B,EAAsCyG,QAAtC,EAAgD;AAC5C,QAAI,CAACA,QAAL,EAAeA,WAAWzD,WAAW,IAAX,CAAX;AACfyD,aAASnG,IAAT,GAAgB9F,QAAhB;AACAiM,aAASlG,IAAT,GAAgB/F,QAAhB;AACAiM,aAASjG,IAAT,GAAgB,CAAChG,QAAjB;AACAiM,aAAShG,IAAT,GAAgB,CAACjG,QAAjB;;AAEA,SAAK,IAAI7L,IAAIqJ,CAAR,EAAWqK,KAAhB,EAAuB1T,IAAI6X,CAA3B,EAA8B7X,GAA9B,EAAmC;AAC/B0T,gBAAQJ,KAAKjI,QAAL,CAAcrL,CAAd,CAAR;AACAqW,eAAOyB,QAAP,EAAiBxE,KAAKM,IAAL,GAAYvC,OAAOqC,KAAP,CAAZ,GAA4BA,KAA7C;AACH;;AAED,WAAOoE,QAAP;AACH;;AAED,SAASzB,MAAT,CAAgB5U,CAAhB,EAAmBkP,CAAnB,EAAsB;AAClBlP,MAAEkQ,IAAF,GAAS7R,KAAK6S,GAAL,CAASlR,EAAEkQ,IAAX,EAAiBhB,EAAEgB,IAAnB,CAAT;AACAlQ,MAAEmQ,IAAF,GAAS9R,KAAK6S,GAAL,CAASlR,EAAEmQ,IAAX,EAAiBjB,EAAEiB,IAAnB,CAAT;AACAnQ,MAAEoQ,IAAF,GAAS/R,KAAKqM,GAAL,CAAS1K,EAAEoQ,IAAX,EAAiBlB,EAAEkB,IAAnB,CAAT;AACApQ,MAAEqQ,IAAF,GAAShS,KAAKqM,GAAL,CAAS1K,EAAEqQ,IAAX,EAAiBnB,EAAEmB,IAAnB,CAAT;AACA,WAAOrQ,CAAP;AACH;;AAED,SAASsT,eAAT,CAAyBtT,CAAzB,EAA4BkP,CAA5B,EAA+B;AAAE,WAAOlP,EAAEkQ,IAAF,GAAShB,EAAEgB,IAAlB;AAAyB;AAC1D,SAASsD,eAAT,CAAyBxT,CAAzB,EAA4BkP,CAA5B,EAA+B;AAAE,WAAOlP,EAAEmQ,IAAF,GAASjB,EAAEiB,IAAlB;AAAyB;;AAE1D,SAASqE,QAAT,CAAkBxU,CAAlB,EAAuB;AAAE,WAAO,CAACA,EAAEoQ,IAAF,GAASpQ,EAAEkQ,IAAZ,KAAqBlQ,EAAEqQ,IAAF,GAASrQ,EAAEmQ,IAAhC,CAAP;AAA+C;AACxE,SAAS6F,UAAT,CAAoBhW,CAApB,EAAuB;AAAE,WAAQA,EAAEoQ,IAAF,GAASpQ,EAAEkQ,IAAZ,IAAqBlQ,EAAEqQ,IAAF,GAASrQ,EAAEmQ,IAAhC,CAAP;AAA+C;;AAExE,SAASsE,YAAT,CAAsBzU,CAAtB,EAAyBkP,CAAzB,EAA4B;AACxB,WAAO,CAAC7Q,KAAKqM,GAAL,CAASwE,EAAEkB,IAAX,EAAiBpQ,EAAEoQ,IAAnB,IAA2B/R,KAAK6S,GAAL,CAAShC,EAAEgB,IAAX,EAAiBlQ,EAAEkQ,IAAnB,CAA5B,KACC7R,KAAKqM,GAAL,CAASwE,EAAEmB,IAAX,EAAiBrQ,EAAEqQ,IAAnB,IAA2BhS,KAAK6S,GAAL,CAAShC,EAAEiB,IAAX,EAAiBnQ,EAAEmQ,IAAnB,CAD5B,CAAP;AAEH;;AAED,SAASqF,gBAAT,CAA0BxV,CAA1B,EAA6BkP,CAA7B,EAAgC;AAC5B,QAAIgB,OAAO7R,KAAKqM,GAAL,CAAS1K,EAAEkQ,IAAX,EAAiBhB,EAAEgB,IAAnB,CAAX;AAAA,QACIC,OAAO9R,KAAKqM,GAAL,CAAS1K,EAAEmQ,IAAX,EAAiBjB,EAAEiB,IAAnB,CADX;AAAA,QAEIC,OAAO/R,KAAK6S,GAAL,CAASlR,EAAEoQ,IAAX,EAAiBlB,EAAEkB,IAAnB,CAFX;AAAA,QAGIC,OAAOhS,KAAK6S,GAAL,CAASlR,EAAEqQ,IAAX,EAAiBnB,EAAEmB,IAAnB,CAHX;;AAKA,WAAOhS,KAAKqM,GAAL,CAAS,CAAT,EAAY0F,OAAOF,IAAnB,IACA7R,KAAKqM,GAAL,CAAS,CAAT,EAAY2F,OAAOF,IAAnB,CADP;AAEH;;AAED,SAASiC,QAAT,CAAkBpS,CAAlB,EAAqBkP,CAArB,EAAwB;AACpB,WAAOlP,EAAEkQ,IAAF,IAAUhB,EAAEgB,IAAZ,IACAlQ,EAAEmQ,IAAF,IAAUjB,EAAEiB,IADZ,IAEAjB,EAAEkB,IAAF,IAAUpQ,EAAEoQ,IAFZ,IAGAlB,EAAEmB,IAAF,IAAUrQ,EAAEqQ,IAHnB;AAIH;;AAED,SAASxD,UAAT,CAAoB7M,CAApB,EAAuBkP,CAAvB,EAA0B;AACtB,WAAOA,EAAEgB,IAAF,IAAUlQ,EAAEoQ,IAAZ,IACAlB,EAAEiB,IAAF,IAAUnQ,EAAEqQ,IADZ,IAEAnB,EAAEkB,IAAF,IAAUpQ,EAAEkQ,IAFZ,IAGAhB,EAAEmB,IAAF,IAAUrQ,EAAEmQ,IAHnB;AAIH;;AAED,SAASyC,UAAT,CAAoBhJ,QAApB,EAA8B;AAC1B,WAAO;AACHA,kBAAUA,QADP;AAEH4I,gBAAQ,CAFL;AAGHL,cAAM,IAHH;AAIHjC,cAAM9F,QAJH;AAKH+F,cAAM/F,QALH;AAMHgG,cAAM,CAAChG,QANJ;AAOHiG,cAAM,CAACjG;AAPJ,KAAP;AASH;;AAKD,SAAS6J,WAAT,CAAqBlW,GAArB,EAA0Be,IAA1B,EAAgCC,KAAhC,EAAuC2R,CAAvC,EAA0CF,OAA1C,EAAmD;AAC/C,QAAI8F,QAAQ,CAACxX,IAAD,EAAOC,KAAP,CAAZ;AAAA,QACIwX,GADJ;;AAGA,WAAOD,MAAM5Y,MAAb,EAAqB;AACjBqB,gBAAQuX,MAAMjE,GAAN,EAAR;AACAvT,eAAOwX,MAAMjE,GAAN,EAAP;;AAEA,YAAItT,QAAQD,IAAR,IAAgB4R,CAApB,EAAuB;;AAEvB6F,cAAMzX,OAAOT,KAAKqT,IAAL,CAAU,CAAC3S,QAAQD,IAAT,IAAiB4R,CAAjB,GAAqB,CAA/B,IAAoCA,CAAjD;AACAY,oBAAYvT,GAAZ,EAAiBwY,GAAjB,EAAsBzX,IAAtB,EAA4BC,KAA5B,EAAmCyR,OAAnC;;AAEA8F,cAAMzN,IAAN,CAAW/J,IAAX,EAAiByX,GAAjB,EAAsBA,GAAtB,EAA2BxX,KAA3B;AACH;AACJ,C;;;;;;;;;;;AChjBA,WAAUyX,IAAV,EAAgBC,OAAhB,EAAyB;AAGxB,MAAG,gCAAOlQ,MAAP,OAAkB,QAAlB,IAA8B,QAAOA,OAAOC,OAAd,MAA0B,QAA3D,EAAqE;AACnEA,cAAUD,OAAOC,OAAP,GAAiBiQ,QAAQ,mBAAAzK,CAAQ,EAAR,CAAR,CAA3B;AACD,GAFD,MAEO,IAAG,QAAO0K,SAAP,yCAAOA,SAAP,OAAqB,QAAxB,EAAkC;AAEvC,QAAI,CAACF,KAAKG,WAAV,EAAsB;AACpB,YAAM,IAAIlY,KAAJ,CAAU,2FAAV,CAAN;AACD;AACD+X,SAAKG,WAAL,CAAiBC,GAAjB,GAAuBH,QAAQD,KAAKG,WAAb,CAAvB;AACD;AAEF,CAbA,aAaO,UAASA,WAAT,EAAsB;AAC5B,MAAInQ,UAAU,EAAd;;AAGF,MAAIqQ,SAAU,YAAU;AACxB,QAAIA,SAAS,EAACC,OAAO,SAASA,KAAT,GAAiB,CAAG,CAA5B;AACbC,UAAI,EADS;AAEbC,gBAAU,EAAC,SAAQ,CAAT,EAAW,eAAc,CAAzB,EAA2B,SAAQ,CAAnC,EAAqC,OAAM,CAA3C,EAA6C,cAAa,CAA1D,EAA4D,WAAU,CAAtE,EAAwE,cAAa,CAArF,EAAuF,mBAAkB,CAAzG,EAA2G,gBAAe,EAA1H,EAA6H,cAAa,EAA1I,EAA6I,cAAa,EAA1J,EAA6J,WAAU,EAAvK,EAA0K,SAAQ,EAAlL,EAAqL,aAAY,EAAjM,EAAoM,QAAO,EAA3M,EAA8M,KAAI,EAAlN,EAAqN,KAAI,EAAzN,EAA4N,SAAQ,EAApO,EAAuO,KAAI,EAA3O,EAA8O,MAAK,EAAnP,EAAsP,KAAI,EAA1P,EAA6P,SAAQ,EAArQ,EAAwQ,kBAAiB,EAAzR,EAA4R,gBAAe,EAA3S,EAA8S,oBAAmB,EAAjU,EAAoU,cAAa,EAAjV,EAAoV,cAAa,EAAjW,EAAoW,WAAU,EAA9W,EAAiX,cAAa,EAA9X,EAAiY,mBAAkB,EAAnZ,EAAsZ,gBAAe,EAAra,EAAwa,WAAU,CAAlb,EAAob,QAAO,CAA3b,EAFG;AAGbC,kBAAY,EAAC,GAAE,OAAH,EAAW,GAAE,KAAb,EAAmB,IAAG,YAAtB,EAAmC,IAAG,OAAtC,EAA8C,IAAG,GAAjD,EAAqD,IAAG,GAAxD,EAA4D,IAAG,OAA/D,EAAuE,IAAG,GAA1E,EAA8E,IAAG,IAAjF,EAAsF,IAAG,GAAzF,EAA6F,IAAG,OAAhG,EAAwG,IAAG,YAA3G,EAAwH,IAAG,SAA3H,EAAqI,IAAG,YAAxI,EAAqJ,IAAG,iBAAxJ,EAA0K,IAAG,cAA7K,EAHC;AAIbC,oBAAc,CAAC,CAAD,EAAG,CAAC,CAAD,EAAG,CAAH,CAAH,EAAS,CAAC,CAAD,EAAG,CAAH,CAAT,EAAe,CAAC,CAAD,EAAG,CAAH,CAAf,EAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA2B,CAAC,CAAD,EAAG,CAAH,CAA3B,EAAiC,CAAC,CAAD,EAAG,CAAH,CAAjC,EAAuC,CAAC,EAAD,EAAI,CAAJ,CAAvC,EAA8C,CAAC,EAAD,EAAI,CAAJ,CAA9C,EAAqD,CAAC,EAAD,EAAI,CAAJ,CAArD,EAA4D,CAAC,EAAD,EAAI,CAAJ,CAA5D,EAAmE,CAAC,EAAD,EAAI,CAAJ,CAAnE,EAA0E,CAAC,EAAD,EAAI,CAAJ,CAA1E,EAAiF,CAAC,EAAD,EAAI,CAAJ,CAAjF,EAAwF,CAAC,EAAD,EAAI,CAAJ,CAAxF,EAA+F,CAAC,CAAD,EAAG,CAAH,CAA/F,EAAqG,CAAC,CAAD,EAAG,CAAH,CAArG,EAA2G,CAAC,CAAD,EAAG,CAAH,CAA3G,EAAiH,CAAC,CAAD,EAAG,CAAH,CAAjH,EAAuH,CAAC,CAAD,EAAG,CAAH,CAAvH,EAA6H,CAAC,EAAD,EAAI,CAAJ,CAA7H,EAAoI,CAAC,EAAD,EAAI,CAAJ,CAApI,EAA2I,CAAC,EAAD,EAAI,CAAJ,CAA3I,EAAkJ,CAAC,EAAD,EAAI,CAAJ,CAAlJ,EAAyJ,CAAC,EAAD,EAAI,CAAJ,CAAzJ,EAAgK,CAAC,EAAD,EAAI,CAAJ,CAAhK,EAAuK,CAAC,EAAD,EAAI,CAAJ,CAAvK,EAA8K,CAAC,CAAD,EAAG,CAAH,CAA9K,EAAoL,CAAC,CAAD,EAAG,CAAH,CAApL,EAA0L,CAAC,CAAD,EAAG,CAAH,CAA1L,EAAgM,CAAC,CAAD,EAAG,CAAH,CAAhM,EAAsM,CAAC,CAAD,EAAG,CAAH,CAAtM,EAA4M,CAAC,CAAD,EAAG,CAAH,CAA5M,EAAkN,CAAC,CAAD,EAAG,CAAH,CAAlN,EAAwN,CAAC,CAAD,EAAG,CAAH,CAAxN,EAA8N,CAAC,CAAD,EAAG,CAAH,CAA9N,EAAoO,CAAC,CAAD,EAAG,CAAH,CAApO,EAA0O,CAAC,CAAD,EAAG,CAAH,CAA1O,EAAgP,CAAC,CAAD,EAAG,CAAH,CAAhP,EAAsP,CAAC,CAAD,EAAG,CAAH,CAAtP,EAA4P,CAAC,CAAD,EAAG,CAAH,CAA5P,EAAkQ,CAAC,CAAD,EAAG,CAAH,CAAlQ,EAAwQ,CAAC,CAAD,EAAG,CAAH,CAAxQ,EAA8Q,CAAC,CAAD,EAAG,CAAH,CAA9Q,EAAoR,CAAC,CAAD,EAAG,CAAH,CAApR,EAA0R,CAAC,CAAD,EAAG,CAAH,CAA1R,EAAgS,CAAC,CAAD,EAAG,CAAH,CAAhS,EAAsS,CAAC,EAAD,EAAI,CAAJ,CAAtS,EAA6S,CAAC,EAAD,EAAI,CAAJ,CAA7S,EAAoT,CAAC,EAAD,EAAI,CAAJ,CAApT,EAA2T,CAAC,EAAD,EAAI,CAAJ,CAA3T,EAAkU,CAAC,EAAD,EAAI,CAAJ,CAAlU,CAJD;AAKbC,qBAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA0BC,MAA1B,EAAiCC,QAAjC,EAA0CR,EAA1C,EAA6CS,OAA7C,EAAqDC,CAArD,EAAuDC,EAAvD,EACT;;AAEN,YAAIC,KAAKF,EAAE/Z,MAAF,GAAW,CAApB;AACA,gBAAQ8Z,OAAR;AACA,eAAK,CAAL;AAAQ,mBAAOC,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,mBAAOF,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,mBAAOF,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,mBAAOF,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,mBAAOF,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,mBAAOF,EAAEE,KAAG,CAAL,CAAP;AACR;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAIG,UAAJ,CAAe,CAAEC,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAAF,EAAmBE,OAAOJ,EAAEE,EAAF,CAAP,CAAnB,CAAf,CAAT;AACR;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAIG,UAAJ,CAAe,CAAEC,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAAF,EAAmBE,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAAnB,EAAoCE,OAAOJ,EAAEE,EAAF,CAAP,CAApC,CAAf,CAAT;AACR;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAIG,UAAJ,CAAe,CAAEC,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAAF,EAAmBE,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAAnB,EAAoCE,OAAOJ,EAAEE,KAAG,CAAL,CAAP,CAApC,EAAqDE,OAAOJ,EAAEE,EAAF,CAAP,CAArD,CAAf,CAAT;AACR;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,EAAQG,QAAR,CAAiBL,EAAEE,EAAF,CAAjB,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,EAAF,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,EAAQI,OAAR,CAAgBN,EAAEE,EAAF,CAAhB,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIO,QAAJ,CAAaP,EAAEE,EAAF,CAAb,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIQ,IAAJ,CAASR,EAAEE,KAAG,CAAL,CAAT,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,EAAE,QAAQ,OAAV,EAAmB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAAR,CAAa,CAAb,CAAlC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKqa,CAAL,GAAS,EAAE,QAAQ,OAAV,EAAmB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAAR,CAAa,CAAb,CAAlC,EAAmD,cAAc,EAAEwT,GAAG,IAAL,EAAjE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,OAAV,EAAmB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAAR,CAAa,CAAb,CAAlC,EAAmD,cAAc,EAAEwT,GAAG,IAAL,EAAWD,GAAG,IAAd,EAAjE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,OAAV,EAAmB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAAR,CAAa,CAAb,CAAlC,EAAmD,cAAc,EAAEuT,GAAG,IAAL,EAAjE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,OAAV,EAAmB,eAAe,EAAlC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAASA,EAAEE,EAAF,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,EAAQO,UAAR,CAAmBT,EAAEE,EAAF,CAAnB,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIU,WAAJ,CAAgBV,EAAEE,EAAF,CAAhB,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,KAAG,CAAL,EAAQG,QAAR,CAAiBL,EAAEE,EAAF,CAAjB,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,EAAEE,EAAF,CAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKqa,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEwT,GAAG,IAAL,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEuT,GAAG,IAAL,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEwT,GAAG,IAAL,EAAWD,GAAG,IAAd,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAe,EAAvC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS,EAAE,QAAQ,SAAV,EAAqB,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAApC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK0H,CAAL,GAAS,EAAE,QAAQ,SAAV,EAAqB,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAApC,EAAsD,cAAc,EAAEa,GAAG,IAAL,EAApE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,SAAV,EAAqB,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAApC,EAAsD,cAAc,EAAEY,GAAG,IAAL,EAApE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,SAAV,EAAqB,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAApC,EAAsD,cAAc,EAAEa,GAAG,IAAL,EAAWD,GAAG,IAAd,EAApE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,SAAV,EAAqB,eAAe,EAApC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKqa,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEwT,GAAG,IAAL,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEuT,GAAG,IAAL,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAeA,EAAEE,KAAG,CAAL,EAAQva,IAA/C,EAAqD,cAAc,EAAEwT,GAAG,IAAL,EAAWD,GAAG,IAAd,EAAnE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,YAAV,EAAwB,eAAe,EAAvC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS,EAAE,QAAQ,iBAAV,EAA6B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAA5C,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK0H,CAAL,GAAS,EAAE,QAAQ,iBAAV,EAA6B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAA5C,EAA8D,cAAc,EAAEa,GAAG,IAAL,EAA5E,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,iBAAV,EAA6B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAA5C,EAA8D,cAAc,EAAEY,GAAG,IAAL,EAA5E,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,iBAAV,EAA6B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAA5C,EAA8D,cAAc,EAAEa,GAAG,IAAL,EAAWD,GAAG,IAAd,EAA5E,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,iBAAV,EAA6B,eAAe,EAA5C,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS,EAAE,QAAQ,cAAV,EAA0B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAAzC,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK0H,CAAL,GAAS,EAAE,QAAQ,cAAV,EAA0B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAAzC,EAA2D,cAAc,EAAEa,GAAG,IAAL,EAAzE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK6G,CAAL,GAAS,EAAE,QAAQ,cAAV,EAA0B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAAzC,EAA2D,cAAc,EAAEY,GAAG,IAAL,EAAzE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,cAAV,EAA0B,eAAeA,EAAEE,KAAG,CAAL,EAAQ5H,MAAR,EAAzC,EAA2D,cAAc,EAAEa,GAAG,IAAL,EAAWD,GAAG,IAAd,EAAzE,EAAT;AACT;AACA,eAAK,EAAL;AAAS,iBAAK8G,CAAL,GAAS,EAAE,QAAQ,cAAV,EAA0B,eAAe,EAAzC,EAAT;AACT;AAtGA;AAwGC,OAjHY;AAkHbW,aAAO,CAAC,EAAC,GAAE,CAAH,EAAK,GAAE,CAAP,EAAS,GAAE,CAAX,EAAa,GAAE,CAAf,EAAiB,GAAE,CAAnB,EAAqB,GAAE,CAAvB,EAAyB,IAAG,CAA5B,EAA8B,IAAG,CAAC,CAAD,EAAG,CAAH,CAAjC,EAAuC,IAAG,CAAC,CAAD,EAAG,CAAH,CAA1C,EAAgD,IAAG,CAAC,CAAD,EAAG,EAAH,CAAnD,EAA0D,IAAG,CAAC,CAAD,EAAG,EAAH,CAA7D,EAAoE,IAAG,CAAC,CAAD,EAAG,EAAH,CAAvE,EAA8E,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjF,EAAD,EAA0F,EAAC,GAAE,CAAC,CAAD,CAAH,EAA1F,EAAkG,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAlG,EAA6G,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA7G,EAAwH,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAxH,EAAmI,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAnI,EAA8I,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA9I,EAAyJ,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAzJ,EAAoK,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAApK,EAAwN,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAAxN,EAA4Q,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAA5Q,EAAgU,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAAhU,EAAoX,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAApX,EAAwa,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAqB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxB,EAA+B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlC,EAAyC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5C,EAAxa,EAA4d,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAA5d,EAAse,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAAte,EAAgf,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAAhf,EAA0f,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAA1f,EAAogB,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAApgB,EAA8gB,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAA9gB,EAAwhB,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,EAApB,EAAxhB,EAAgjB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAhjB,EAA4jB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA5jB,EAAwkB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAxkB,EAAolB,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAplB,EAA+lB,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,EAApC,EAA/lB,EAAuoB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAvoB,EAAmpB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAnpB,EAA+pB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA/pB,EAA2qB,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA3qB,EAAsrB,EAAC,IAAG,EAAJ,EAAO,IAAG,EAAV,EAAa,IAAG,CAAC,CAAD,EAAG,EAAH,CAAhB,EAAtrB,EAA8sB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA9sB,EAA0tB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA1tB,EAAsuB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAtuB,EAAkvB,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAlvB,EAA6vB,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,EAApC,EAA7vB,EAAqyB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAryB,EAAizB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAjzB,EAA6zB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA7zB,EAAy0B,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAz0B,EAAo1B,EAAC,IAAG,EAAJ,EAAO,IAAG,EAAV,EAAa,IAAG,CAAC,CAAD,EAAG,EAAH,CAAhB,EAAp1B,EAA42B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA52B,EAAw3B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAx3B,EAAo4B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAp4B,EAAg5B,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAh5B,EAA25B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,EAAd,EAAiB,IAAG,EAApB,EAA35B,EAAm7B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAn7B,EAA+7B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA/7B,EAA28B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA38B,EAAu9B,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAv9B,EAAk+B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAl+B,EAAw/B,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAx/B,EAA8gC,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA9gC,EAA0hC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,EAApB,EAA1hC,EAAkjC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,EAApB,EAAljC,EAA0kC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,EAApB,EAA1kC,EAAkmC,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAlmC,EAAwnC,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAxnC,EAA8oC,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA9oC,EAAoqC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAApqC,EAAsrC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,EAApC,EAAtrC,EAA8tC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,EAApC,EAA9tC,EAAswC,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,EAApC,EAAtwC,EAA8yC,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA9yC,EAAo0C,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAp0C,EAA01C,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,EAApB,EAA11C,EAAk3C,EAAC,IAAG,EAAJ,EAAO,IAAG,EAAV,EAAa,IAAG,CAAC,CAAD,EAAG,EAAH,CAAhB,EAAl3C,EAA04C,EAAC,IAAG,EAAJ,EAAO,IAAG,EAAV,EAAa,IAAG,CAAC,CAAD,EAAG,EAAH,CAAhB,EAA14C,EAAk6C,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjB,EAAl6C,EAA27C,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA37C,EAAk9C,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,GAApC,EAAl9C,EAA2/C,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,GAApC,EAA3/C,EAAoiD,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,EAA9B,EAAiC,IAAG,GAApC,EAApiD,EAA6kD,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA7kD,EAAomD,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjB,EAApmD,EAA6nD,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjB,EAA7nD,EAAspD,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjB,EAAtpD,EAA+qD,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,GAAH,CAAf,EAA/qD,EAAusD,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAvsD,EAA6tD,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjB,EAA7tD,EAAsvD,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,GAAd,EAAkB,IAAG,EAArB,EAAtvD,EAA+wD,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,GAAd,EAAkB,IAAG,EAArB,EAA/wD,EAAwyD,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,GAAd,EAAkB,IAAG,EAArB,EAAxyD,EAAi0D,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAj0D,EAA40D,EAAC,IAAG,GAAJ,EAAQ,IAAG,CAAC,CAAD,EAAG,EAAH,CAAX,EAA50D,EAA+1D,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,CAAH,CAAf,EAAqB,IAAG,CAAC,CAAD,EAAG,CAAH,CAAxB,EAA/1D,EAA83D,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA93D,EAAq5D,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAr5D,EAA46D,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA56D,EAAm8D,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAn8D,EAA88D,EAAC,IAAG,EAAJ,EAAO,IAAG,CAAC,CAAD,EAAG,EAAH,CAAV,EAAiB,IAAG,CAAC,CAAD,EAAG,EAAH,CAApB,EAA2B,IAAG,GAA9B,EAA98D,EAAi/D,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAj/D,EAA8/D,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA9/D,EAAqhE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAArhE,EAA4iE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA5iE,EAAmkE,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAnkE,EAA8kE,EAAC,IAAG,GAAJ,EAAQ,IAAG,CAAC,CAAD,EAAG,EAAH,CAAX,EAA9kE,EAAimE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAjmE,EAAwnE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAxnE,EAA+oE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA/oE,EAAsqE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAtqE,EAA6rE,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA7rE,EAAwsE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAxsE,EAA+tE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA/tE,EAAsvE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAtvE,EAA6wE,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA7wE,EAAwxE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAxxE,EAA+yE,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA/yE,EAAs0E,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAAt0E,EAA61E,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA71E,EAAw2E,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,GAAd,EAAx2E,EAA23E,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,GAAH,CAAd,EAA33E,EAAk5E,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,GAAH,CAAf,EAAl5E,EAA06E,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,GAAH,CAAf,EAA16E,EAAk8E,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,GAAH,CAAf,EAAl8E,EAA09E,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA19E,EAAg/E,EAAC,IAAG,CAAC,CAAD,EAAG,GAAH,CAAJ,EAAY,IAAG,CAAC,CAAD,EAAG,CAAH,CAAf,EAAqB,IAAG,CAAC,CAAD,EAAG,CAAH,CAAxB,EAAh/E,EAA+gF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA/gF,EAA0hF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA1hF,EAAqiF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAriF,EAAgjF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAhjF,EAAskF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAtkF,EAA4lF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA5lF,EAAumF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAvmF,EAAknF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAlnF,EAA6nF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA7nF,EAAmpF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAnpF,EAAyqF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAzqF,EAAorF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAprF,EAA+rF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA/rF,EAA0sF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA1sF,EAAqtF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAArtF,EAAguF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAhuF,EAA2uF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA3uF,EAAsvF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAtvF,EAAiwF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAjwF,EAA4wF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA5wF,EAAkyF,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAAlyF,EAAwzF,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAxzF,EAAm0F,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAAn0F,EAA80F,EAAC,GAAE,CAAC,CAAD,EAAG,EAAH,CAAH,EAA90F,EAAy1F,EAAC,IAAG,CAAC,CAAD,EAAG,CAAH,CAAJ,EAAU,IAAG,CAAC,CAAD,EAAG,CAAH,CAAb,EAAz1F,CAlHM;AAmHbC,sBAAgB,EAAC,IAAG,CAAC,CAAD,EAAG,CAAH,CAAJ,EAAU,IAAG,CAAC,CAAD,EAAG,CAAH,CAAb,EAAmB,IAAG,CAAC,CAAD,EAAG,CAAH,CAAtB,EAA4B,IAAG,CAAC,CAAD,EAAG,CAAH,CAA/B,EAAqC,IAAG,CAAC,CAAD,EAAG,CAAH,CAAxC,EAA8C,IAAG,CAAC,CAAD,EAAG,CAAH,CAAjD,EAAuD,IAAG,CAAC,CAAD,EAAG,EAAH,CAA1D,EAAiE,IAAG,CAAC,CAAD,EAAG,EAAH,CAApE,EAA2E,IAAG,CAAC,CAAD,EAAG,EAAH,CAA9E,EAAqF,IAAG,CAAC,CAAD,EAAG,EAAH,CAAxF,EAA+F,IAAG,CAAC,CAAD,EAAG,EAAH,CAAlG,EAAyG,IAAG,CAAC,CAAD,EAAG,EAAH,CAA5G,EAAmH,IAAG,CAAC,CAAD,EAAG,EAAH,CAAtH,EAA6H,IAAG,CAAC,CAAD,EAAG,EAAH,CAAhI,EAAuI,IAAG,CAAC,CAAD,EAAG,EAAH,CAA1I,EAAiJ,KAAI,CAAC,CAAD,EAAG,EAAH,CAArJ,EAA4J,KAAI,CAAC,CAAD,EAAG,EAAH,CAAhK,EAAuK,KAAI,CAAC,CAAD,EAAG,EAAH,CAA3K,EAAkL,KAAI,CAAC,CAAD,EAAG,EAAH,CAAtL,EAA6L,KAAI,CAAC,CAAD,EAAG,EAAH,CAAjM,EAAwM,KAAI,CAAC,CAAD,EAAG,EAAH,CAA5M,EAAmN,KAAI,CAAC,CAAD,EAAG,EAAH,CAAvN,EAA8N,KAAI,CAAC,CAAD,EAAG,EAAH,CAAlO,EAAyO,KAAI,CAAC,CAAD,EAAG,EAAH,CAA7O,EAAoP,KAAI,CAAC,CAAD,EAAG,EAAH,CAAxP,EAA+P,KAAI,CAAC,CAAD,EAAG,EAAH,CAAnQ,EAA0Q,KAAI,CAAC,CAAD,EAAG,EAAH,CAA9Q,EAAqR,KAAI,CAAC,CAAD,EAAG,EAAH,CAAzR,EAAgS,KAAI,CAAC,CAAD,EAAG,EAAH,CAApS,EAA2S,KAAI,CAAC,CAAD,EAAG,EAAH,CAA/S,EAAsT,KAAI,CAAC,CAAD,EAAG,EAAH,CAA1T,EAAiU,KAAI,CAAC,CAAD,EAAG,EAAH,CAArU,EAA4U,KAAI,CAAC,CAAD,EAAG,EAAH,CAAhV,EAAuV,KAAI,CAAC,CAAD,EAAG,EAAH,CAA3V,EAAkW,KAAI,CAAC,CAAD,EAAG,EAAH,CAAtW,EAA6W,KAAI,CAAC,CAAD,EAAG,EAAH,CAAjX,EAnHH;AAoHbC,kBAAY,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACvC,cAAM,IAAI/Z,KAAJ,CAAU8Z,GAAV,CAAN;AACH,OAtHY;AAuHb5R,aAAO,SAASA,KAAT,CAAe8R,KAAf,EAAsB;AACzB,YAAIC,OAAO,IAAX;AAAA,YAAiBpC,QAAQ,CAAC,CAAD,CAAzB;AAAA,YAA8BqC,SAAS,CAAC,IAAD,CAAvC;AAAA,YAA+CC,SAAS,EAAxD;AAAA,YAA4DR,QAAQ,KAAKA,KAAzE;AAAA,YAAgFf,SAAS,EAAzF;AAAA,YAA6FE,WAAW,CAAxG;AAAA,YAA2GD,SAAS,CAApH;AAAA,YAAuHuB,aAAa,CAApI;AAAA,YAAuIC,SAAS,CAAhJ;AAAA,YAAmJC,MAAM,CAAzJ;AACA,aAAKC,KAAL,CAAWC,QAAX,CAAoBR,KAApB;AACA,aAAKO,KAAL,CAAWjC,EAAX,GAAgB,KAAKA,EAArB;AACA,aAAKA,EAAL,CAAQiC,KAAR,GAAgB,KAAKA,KAArB;AACA,aAAKjC,EAAL,CAAQF,MAAR,GAAiB,IAAjB;AACA,YAAI,OAAO,KAAKmC,KAAL,CAAWE,MAAlB,IAA4B,WAAhC,EACI,KAAKF,KAAL,CAAWE,MAAX,GAAoB,EAApB;AACJ,YAAIC,QAAQ,KAAKH,KAAL,CAAWE,MAAvB;AACAN,eAAO/P,IAAP,CAAYsQ,KAAZ;AACA,YAAIC,SAAS,KAAKJ,KAAL,CAAWK,OAAX,IAAsB,KAAKL,KAAL,CAAWK,OAAX,CAAmBD,MAAtD;AACA,YAAI,OAAO,KAAKrC,EAAL,CAAQuB,UAAf,KAA8B,UAAlC,EACI,KAAKA,UAAL,GAAkB,KAAKvB,EAAL,CAAQuB,UAA1B;AACJ,iBAASgB,QAAT,CAAkB5I,CAAlB,EAAqB;AACjB4F,gBAAM5Y,MAAN,GAAe4Y,MAAM5Y,MAAN,GAAe,IAAIgT,CAAlC;AACAiI,iBAAOjb,MAAP,GAAgBib,OAAOjb,MAAP,GAAgBgT,CAAhC;AACAkI,iBAAOlb,MAAP,GAAgBkb,OAAOlb,MAAP,GAAgBgT,CAAhC;AACH;AACD,iBAAS6I,GAAT,GAAe;AACX,cAAIC,KAAJ;AACAA,kBAAQd,KAAKM,KAAL,CAAWO,GAAX,MAAoB,CAA5B;AACA,cAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,oBAAQd,KAAK1B,QAAL,CAAcwC,KAAd,KAAwBA,KAAhC;AACH;AACD,iBAAOA,KAAP;AACH;AACD,YAAIC,MAAJ;AAAA,YAAYC,cAAZ;AAAA,YAA4BC,KAA5B;AAAA,YAAmCC,MAAnC;AAAA,YAA2C5Z,CAA3C;AAAA,YAA8C6Z,CAA9C;AAAA,YAAiDC,QAAQ,EAAzD;AAAA,YAA6D1D,CAA7D;AAAA,YAAgEpE,GAAhE;AAAA,YAAqE+H,QAArE;AAAA,YAA+EC,QAA/E;AACA,eAAO,IAAP,EAAa;AACTL,kBAAQrD,MAAMA,MAAM5Y,MAAN,GAAe,CAArB,CAAR;AACA,cAAI,KAAK2a,cAAL,CAAoBsB,KAApB,CAAJ,EAAgC;AAC5BC,qBAAS,KAAKvB,cAAL,CAAoBsB,KAApB,CAAT;AACH,WAFD,MAEO;AACH,gBAAIF,WAAW,IAAX,IAAmB,OAAOA,MAAP,IAAiB,WAAxC,EAAqD;AACjDA,uBAASF,KAAT;AACH;AACDK,qBAASxB,MAAMuB,KAAN,KAAgBvB,MAAMuB,KAAN,EAAaF,MAAb,CAAzB;AACH;AACD,cAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiC,CAACA,OAAOlc,MAAzC,IAAmD,CAACkc,OAAO,CAAP,CAAxD,EAAmE;AAC/D,gBAAIK,SAAS,EAAb;AACA,gBAAI,CAACpB,UAAL,EAAiB;AACbmB,yBAAW,EAAX;AACA,mBAAK5D,CAAL,IAAUgC,MAAMuB,KAAN,CAAV;AACI,oBAAI,KAAK1C,UAAL,CAAgBb,CAAhB,KAAsBA,IAAI,CAA9B,EAAiC;AAC7B4D,2BAASnR,IAAT,CAAc,MAAM,KAAKoO,UAAL,CAAgBb,CAAhB,CAAN,GAA2B,GAAzC;AACH;AAHL,eAIA,IAAI,KAAK4C,KAAL,CAAWkB,YAAf,EAA6B;AACzBD,yBAAS,0BAA0B1C,WAAW,CAArC,IAA0C,KAA1C,GAAkD,KAAKyB,KAAL,CAAWkB,YAAX,EAAlD,GAA8E,cAA9E,GAA+FF,SAAS5M,IAAT,CAAc,IAAd,CAA/F,GAAqH,SAArH,IAAkI,KAAK6J,UAAL,CAAgBwC,MAAhB,KAA2BA,MAA7J,IAAuK,GAAhL;AACH,eAFD,MAEO;AACHQ,yBAAS,0BAA0B1C,WAAW,CAArC,IAA0C,eAA1C,IAA6DkC,UAAU,CAAV,GAAY,cAAZ,GAA2B,OAAO,KAAKxC,UAAL,CAAgBwC,MAAhB,KAA2BA,MAAlC,IAA4C,GAApI,CAAT;AACH;AACD,mBAAKnB,UAAL,CAAgB2B,MAAhB,EAAwB,EAACE,MAAM,KAAKnB,KAAL,CAAW9L,KAAlB,EAAyBsM,OAAO,KAAKvC,UAAL,CAAgBwC,MAAhB,KAA2BA,MAA3D,EAAmEnP,MAAM,KAAK0O,KAAL,CAAWzB,QAApF,EAA8F6C,KAAKjB,KAAnG,EAA0Ga,UAAUA,QAApH,EAAxB;AACH;AACJ;AACD,cAAIJ,OAAO,CAAP,aAAqBpc,KAArB,IAA8Boc,OAAOlc,MAAP,GAAgB,CAAlD,EAAqD;AACjD,kBAAM,IAAIe,KAAJ,CAAU,sDAAsDkb,KAAtD,GAA8D,WAA9D,GAA4EF,MAAtF,CAAN;AACH;AACD,kBAAQG,OAAO,CAAP,CAAR;AACA,iBAAK,CAAL;AACItD,oBAAMzN,IAAN,CAAW4Q,MAAX;AACAd,qBAAO9P,IAAP,CAAY,KAAKmQ,KAAL,CAAW3B,MAAvB;AACAuB,qBAAO/P,IAAP,CAAY,KAAKmQ,KAAL,CAAWE,MAAvB;AACA5C,oBAAMzN,IAAN,CAAW+Q,OAAO,CAAP,CAAX;AACAH,uBAAS,IAAT;AACA,kBAAI,CAACC,cAAL,EAAqB;AACjBpC,yBAAS,KAAK0B,KAAL,CAAW1B,MAApB;AACAD,yBAAS,KAAK2B,KAAL,CAAW3B,MAApB;AACAE,2BAAW,KAAKyB,KAAL,CAAWzB,QAAtB;AACA4B,wBAAQ,KAAKH,KAAL,CAAWE,MAAnB;AACA,oBAAIL,aAAa,CAAjB,EACIA;AACP,eAPD,MAOO;AACHY,yBAASC,cAAT;AACAA,iCAAiB,IAAjB;AACH;AACD;AACJ,iBAAK,CAAL;AACI1H,oBAAM,KAAKkF,YAAL,CAAkB0C,OAAO,CAAP,CAAlB,EAA6B,CAA7B,CAAN;AACAE,oBAAMrC,CAAN,GAAUkB,OAAOA,OAAOjb,MAAP,GAAgBsU,GAAvB,CAAV;AACA8H,oBAAMpC,EAAN,GAAW,EAAC2C,YAAYzB,OAAOA,OAAOlb,MAAP,IAAiBsU,OAAO,CAAxB,CAAP,EAAmCqI,UAAhD,EAA4DC,WAAW1B,OAAOA,OAAOlb,MAAP,GAAgB,CAAvB,EAA0B4c,SAAjG,EAA4GC,cAAc3B,OAAOA,OAAOlb,MAAP,IAAiBsU,OAAO,CAAxB,CAAP,EAAmCuI,YAA7J,EAA2KC,aAAa5B,OAAOA,OAAOlb,MAAP,GAAgB,CAAvB,EAA0B8c,WAAlN,EAAX;AACA,kBAAIpB,MAAJ,EAAY;AACRU,sBAAMpC,EAAN,CAAS+C,KAAT,GAAiB,CAAC7B,OAAOA,OAAOlb,MAAP,IAAiBsU,OAAO,CAAxB,CAAP,EAAmCyI,KAAnC,CAAyC,CAAzC,CAAD,EAA8C7B,OAAOA,OAAOlb,MAAP,GAAgB,CAAvB,EAA0B+c,KAA1B,CAAgC,CAAhC,CAA9C,CAAjB;AACH;AACDZ,kBAAI,KAAK1C,aAAL,CAAmB1H,IAAnB,CAAwBqK,KAAxB,EAA+BzC,MAA/B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD,KAAKR,EAA9D,EAAkE6C,OAAO,CAAP,CAAlE,EAA6EjB,MAA7E,EAAqFC,MAArF,CAAJ;AACA,kBAAI,OAAOiB,CAAP,KAAa,WAAjB,EAA8B;AAC1B,uBAAOA,CAAP;AACH;AACD,kBAAI7H,GAAJ,EAAS;AACLsE,wBAAQA,MAAM/D,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAD,GAAKP,GAAL,GAAW,CAA1B,CAAR;AACA2G,yBAASA,OAAOpG,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAKP,GAArB,CAAT;AACA4G,yBAASA,OAAOrG,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAKP,GAArB,CAAT;AACH;AACDsE,oBAAMzN,IAAN,CAAW,KAAKqO,YAAL,CAAkB0C,OAAO,CAAP,CAAlB,EAA6B,CAA7B,CAAX;AACAjB,qBAAO9P,IAAP,CAAYiR,MAAMrC,CAAlB;AACAmB,qBAAO/P,IAAP,CAAYiR,MAAMpC,EAAlB;AACAqC,yBAAW3B,MAAM9B,MAAMA,MAAM5Y,MAAN,GAAe,CAArB,CAAN,EAA+B4Y,MAAMA,MAAM5Y,MAAN,GAAe,CAArB,CAA/B,CAAX;AACA4Y,oBAAMzN,IAAN,CAAWkR,QAAX;AACA;AACJ,iBAAK,CAAL;AACI,qBAAO,IAAP;AA1CJ;AA4CH;AACD,eAAO,IAAP;AACH;AA7NY,KAAb;AA+NAlZ;AACA,QAAImY,QAAS,YAAU;AACvB,UAAIA,QAAS,EAACD,KAAI,CAAL;AACbT,oBAAW,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAClC,cAAI,KAAKzB,EAAL,CAAQF,MAAZ,EAAoB;AAChB,iBAAKE,EAAL,CAAQF,MAAR,CAAeyB,UAAf,CAA0BC,GAA1B,EAA+BC,IAA/B;AACH,WAFD,MAEO;AACH,kBAAM,IAAI/Z,KAAJ,CAAU8Z,GAAV,CAAN;AACH;AACJ,SAPQ;AAQbU,kBAAS,kBAAUR,KAAV,EAAiB;AAClB,eAAKiC,MAAL,GAAcjC,KAAd;AACA,eAAKkC,KAAL,GAAa,KAAKC,KAAL,GAAa,KAAKC,IAAL,GAAY,KAAtC;AACA,eAAKtD,QAAL,GAAgB,KAAKD,MAAL,GAAc,CAA9B;AACA,eAAKD,MAAL,GAAc,KAAKyD,OAAL,GAAe,KAAK5N,KAAL,GAAa,EAA1C;AACA,eAAK6N,cAAL,GAAsB,CAAC,SAAD,CAAtB;AACA,eAAK7B,MAAL,GAAc,EAACmB,YAAW,CAAZ,EAAcE,cAAa,CAA3B,EAA6BD,WAAU,CAAvC,EAAyCE,aAAY,CAArD,EAAd;AACA,cAAI,KAAKnB,OAAL,CAAaD,MAAjB,EAAyB,KAAKF,MAAL,CAAYuB,KAAZ,GAAoB,CAAC,CAAD,EAAG,CAAH,CAApB;AACzB,eAAKO,MAAL,GAAc,CAAd;AACA,iBAAO,IAAP;AACH,SAlBQ;AAmBbvC,eAAM,iBAAY;AACV,cAAIwC,KAAK,KAAKP,MAAL,CAAY,CAAZ,CAAT;AACA,eAAKrD,MAAL,IAAe4D,EAAf;AACA,eAAK3D,MAAL;AACA,eAAK0D,MAAL;AACA,eAAK9N,KAAL,IAAc+N,EAAd;AACA,eAAKH,OAAL,IAAgBG,EAAhB;AACA,cAAI/Q,QAAQ+Q,GAAG/N,KAAH,CAAS,iBAAT,CAAZ;AACA,cAAIhD,KAAJ,EAAW;AACP,iBAAKqN,QAAL;AACA,iBAAK2B,MAAL,CAAYoB,SAAZ;AACH,WAHD,MAGO;AACH,iBAAKpB,MAAL,CAAYsB,WAAZ;AACH;AACD,cAAI,KAAKnB,OAAL,CAAaD,MAAjB,EAAyB,KAAKF,MAAL,CAAYuB,KAAZ,CAAkB,CAAlB;;AAEzB,eAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYnI,KAAZ,CAAkB,CAAlB,CAAd;AACA,iBAAO0I,EAAP;AACH,SArCQ;AAsCbC,eAAM,eAAUD,EAAV,EAAc;AACZ,cAAIjJ,MAAMiJ,GAAGvd,MAAb;AACA,cAAIwM,QAAQ+Q,GAAGE,KAAH,CAAS,eAAT,CAAZ;;AAEA,eAAKT,MAAL,GAAcO,KAAK,KAAKP,MAAxB;AACA,eAAKrD,MAAL,GAAc,KAAKA,MAAL,CAAY+D,MAAZ,CAAmB,CAAnB,EAAsB,KAAK/D,MAAL,CAAY3Z,MAAZ,GAAmBsU,GAAnB,GAAuB,CAA7C,CAAd;;AAEA,eAAKgJ,MAAL,IAAehJ,GAAf;AACA,cAAIqJ,WAAW,KAAKnO,KAAL,CAAWiO,KAAX,CAAiB,eAAjB,CAAf;AACA,eAAKjO,KAAL,GAAa,KAAKA,KAAL,CAAWkO,MAAX,CAAkB,CAAlB,EAAqB,KAAKlO,KAAL,CAAWxP,MAAX,GAAkB,CAAvC,CAAb;AACA,eAAKod,OAAL,GAAe,KAAKA,OAAL,CAAaM,MAAb,CAAoB,CAApB,EAAuB,KAAKN,OAAL,CAAapd,MAAb,GAAoB,CAA3C,CAAf;;AAEA,cAAIwM,MAAMxM,MAAN,GAAa,CAAjB,EAAoB,KAAK6Z,QAAL,IAAiBrN,MAAMxM,MAAN,GAAa,CAA9B;AACpB,cAAImc,IAAI,KAAKX,MAAL,CAAYuB,KAApB;;AAEA,eAAKvB,MAAL,GAAc,EAACmB,YAAY,KAAKnB,MAAL,CAAYmB,UAAzB;AACZC,uBAAW,KAAK/C,QAAL,GAAc,CADb;AAEZgD,0BAAc,KAAKrB,MAAL,CAAYqB,YAFd;AAGZC,yBAAatQ,QACT,CAACA,MAAMxM,MAAN,KAAiB2d,SAAS3d,MAA1B,GAAmC,KAAKwb,MAAL,CAAYqB,YAA/C,GAA8D,CAA/D,IAAoEc,SAASA,SAAS3d,MAAT,GAAkBwM,MAAMxM,MAAjC,EAAyCA,MAA7G,GAAsHwM,MAAM,CAAN,EAASxM,MADtH,GAET,KAAKwb,MAAL,CAAYqB,YAAZ,GAA2BvI;AALnB,WAAd;;AAQA,cAAI,KAAKqH,OAAL,CAAaD,MAAjB,EAAyB;AACrB,iBAAKF,MAAL,CAAYuB,KAAZ,GAAoB,CAACZ,EAAE,CAAF,CAAD,EAAOA,EAAE,CAAF,IAAO,KAAKvC,MAAZ,GAAqBtF,GAA5B,CAApB;AACH;AACD,iBAAO,IAAP;AACH,SAjEQ;AAkEbsJ,cAAK,gBAAY;AACT,eAAKX,KAAL,GAAa,IAAb;AACA,iBAAO,IAAP;AACH,SArEQ;AAsEbY,cAAK,cAAU7K,CAAV,EAAa;AACV,eAAKwK,KAAL,CAAW,KAAKhO,KAAL,CAAWqF,KAAX,CAAiB7B,CAAjB,CAAX;AACH,SAxEQ;AAyEb8K,mBAAU,qBAAY;AACd,cAAIC,OAAO,KAAKX,OAAL,CAAaM,MAAb,CAAoB,CAApB,EAAuB,KAAKN,OAAL,CAAapd,MAAb,GAAsB,KAAKwP,KAAL,CAAWxP,MAAxD,CAAX;AACA,iBAAO,CAAC+d,KAAK/d,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAAyB,EAA1B,IAAgC+d,KAAKL,MAAL,CAAY,CAAC,EAAb,EAAiBM,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAAvC;AACH,SA5EQ;AA6EbC,uBAAc,yBAAY;AAClB,cAAIC,OAAO,KAAK1O,KAAhB;AACA,cAAI0O,KAAKle,MAAL,GAAc,EAAlB,EAAsB;AAClBke,oBAAQ,KAAKlB,MAAL,CAAYU,MAAZ,CAAmB,CAAnB,EAAsB,KAAGQ,KAAKle,MAA9B,CAAR;AACH;AACD,iBAAO,CAACke,KAAKR,MAAL,CAAY,CAAZ,EAAc,EAAd,KAAmBQ,KAAKle,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAAyB,EAA5C,CAAD,EAAkDge,OAAlD,CAA0D,KAA1D,EAAiE,EAAjE,CAAP;AACH,SAnFQ;AAoFbxB,sBAAa,wBAAY;AACjB,cAAI2B,MAAM,KAAKL,SAAL,EAAV;AACA,cAAIM,IAAI,IAAIte,KAAJ,CAAUqe,IAAIne,MAAJ,GAAa,CAAvB,EAA0B0P,IAA1B,CAA+B,GAA/B,CAAR;AACA,iBAAOyO,MAAM,KAAKF,aAAL,EAAN,GAA6B,IAA7B,GAAoCG,CAApC,GAAsC,GAA7C;AACH,SAxFQ;AAyFbF,cAAK,gBAAY;AACT,cAAI,KAAKf,IAAT,EAAe;AACX,mBAAO,KAAK9B,GAAZ;AACH;AACD,cAAI,CAAC,KAAK2B,MAAV,EAAkB,KAAKG,IAAL,GAAY,IAAZ;;AAElB,cAAIrB,KAAJ,EACItM,KADJ,EAEI6O,SAFJ,EAGI9Q,KAHJ,EAII+Q,GAJJ,EAKI9R,KALJ;AAMA,cAAI,CAAC,KAAKyQ,KAAV,EAAiB;AACb,iBAAKtD,MAAL,GAAc,EAAd;AACA,iBAAKnK,KAAL,GAAa,EAAb;AACH;AACD,cAAI+O,QAAQ,KAAKC,aAAL,EAAZ;AACA,eAAK,IAAI3d,IAAE,CAAX,EAAaA,IAAI0d,MAAMve,MAAvB,EAA+Ba,GAA/B,EAAoC;AAChCwd,wBAAY,KAAKrB,MAAL,CAAYxN,KAAZ,CAAkB,KAAK+O,KAAL,CAAWA,MAAM1d,CAAN,CAAX,CAAlB,CAAZ;AACA,gBAAIwd,cAAc,CAAC7O,KAAD,IAAU6O,UAAU,CAAV,EAAare,MAAb,GAAsBwP,MAAM,CAAN,EAASxP,MAAvD,CAAJ,EAAoE;AAChEwP,sBAAQ6O,SAAR;AACA9Q,sBAAQ1M,CAAR;AACA,kBAAI,CAAC,KAAK8a,OAAL,CAAa8C,IAAlB,EAAwB;AAC3B;AACJ;AACD,cAAIjP,KAAJ,EAAW;AACPhD,oBAAQgD,MAAM,CAAN,EAASA,KAAT,CAAe,iBAAf,CAAR;AACA,gBAAIhD,KAAJ,EAAW,KAAKqN,QAAL,IAAiBrN,MAAMxM,MAAvB;AACX,iBAAKwb,MAAL,GAAc,EAACmB,YAAY,KAAKnB,MAAL,CAAYoB,SAAzB;AACCA,yBAAW,KAAK/C,QAAL,GAAc,CAD1B;AAECgD,4BAAc,KAAKrB,MAAL,CAAYsB,WAF3B;AAGCA,2BAAatQ,QAAQA,MAAMA,MAAMxM,MAAN,GAAa,CAAnB,EAAsBA,MAAtB,GAA6BwM,MAAMA,MAAMxM,MAAN,GAAa,CAAnB,EAAsBwP,KAAtB,CAA4B,QAA5B,EAAsC,CAAtC,EAAyCxP,MAA9E,GAAuF,KAAKwb,MAAL,CAAYsB,WAAZ,GAA0BtN,MAAM,CAAN,EAASxP,MAHxI,EAAd;AAIA,iBAAK2Z,MAAL,IAAenK,MAAM,CAAN,CAAf;AACA,iBAAKA,KAAL,IAAcA,MAAM,CAAN,CAAd;AACA,iBAAKkP,OAAL,GAAelP,KAAf;AACA,iBAAKoK,MAAL,GAAc,KAAKD,MAAL,CAAY3Z,MAA1B;AACA,gBAAI,KAAK2b,OAAL,CAAaD,MAAjB,EAAyB;AACrB,mBAAKF,MAAL,CAAYuB,KAAZ,GAAoB,CAAC,KAAKO,MAAN,EAAc,KAAKA,MAAL,IAAe,KAAK1D,MAAlC,CAApB;AACH;AACD,iBAAKqD,KAAL,GAAa,KAAb;AACA,iBAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYnI,KAAZ,CAAkBrF,MAAM,CAAN,EAASxP,MAA3B,CAAd;AACA,iBAAKod,OAAL,IAAgB5N,MAAM,CAAN,CAAhB;AACAsM,oBAAQ,KAAKrC,aAAL,CAAmB1H,IAAnB,CAAwB,IAAxB,EAA8B,KAAKsH,EAAnC,EAAuC,IAAvC,EAA6CkF,MAAMhR,KAAN,CAA7C,EAA0D,KAAK8P,cAAL,CAAoB,KAAKA,cAAL,CAAoBrd,MAApB,GAA2B,CAA/C,CAA1D,CAAR;AACA,gBAAI,KAAKmd,IAAL,IAAa,KAAKH,MAAtB,EAA8B,KAAKG,IAAL,GAAY,KAAZ;AAC9B,gBAAIrB,KAAJ,EAAW,OAAOA,KAAP,CAAX,KACK;AACR;AACD,cAAI,KAAKkB,MAAL,KAAgB,EAApB,EAAwB;AACpB,mBAAO,KAAK3B,GAAZ;AACH,WAFD,MAEO;AACH,mBAAO,KAAKT,UAAL,CAAgB,4BAA0B,KAAKf,QAAL,GAAc,CAAxC,IAA2C,wBAA3C,GAAoE,KAAK2C,YAAL,EAApF,EACC,EAACC,MAAM,EAAP,EAAWX,OAAO,IAAlB,EAAwBlP,MAAM,KAAKiN,QAAnC,EADD,CAAP;AAEH;AACJ,SA9IQ;AA+IbgC,aAAI,SAASA,GAAT,GAAe;AACX,cAAIM,IAAI,KAAK+B,IAAL,EAAR;AACA,cAAI,OAAO/B,CAAP,KAAa,WAAjB,EAA8B;AAC1B,mBAAOA,CAAP;AACH,WAFD,MAEO;AACH,mBAAO,KAAKN,GAAL,EAAP;AACH;AACJ,SAtJQ;AAuJb8C,eAAM,SAASA,KAAT,CAAeC,SAAf,EAA0B;AACxB,eAAKvB,cAAL,CAAoBlS,IAApB,CAAyByT,SAAzB;AACH,SAzJQ;AA0JbC,kBAAS,SAASA,QAAT,GAAoB;AACrB,iBAAO,KAAKxB,cAAL,CAAoB1I,GAApB,EAAP;AACH,SA5JQ;AA6Jb6J,uBAAc,SAASA,aAAT,GAAyB;AAC/B,iBAAO,KAAKM,UAAL,CAAgB,KAAKzB,cAAL,CAAoB,KAAKA,cAAL,CAAoBrd,MAApB,GAA2B,CAA/C,CAAhB,EAAmEue,KAA1E;AACH,SA/JQ;AAgKbQ,kBAAS,oBAAY;AACb,iBAAO,KAAK1B,cAAL,CAAoB,KAAKA,cAAL,CAAoBrd,MAApB,GAA2B,CAA/C,CAAP;AACH,SAlKQ;AAmKbgf,mBAAU,SAASL,KAAT,CAAeC,SAAf,EAA0B;AAC5B,eAAKD,KAAL,CAAWC,SAAX;AACH,SArKQ,EAAb;AAsKAtD,YAAMK,OAAN,GAAgB,EAAhB;AACAL,YAAM7B,aAAN,GAAsB,SAASC,SAAT,CAAmBL,EAAnB,EAAsB4F,GAAtB,EAA0BC,yBAA1B,EAAoDC,QAApD,EAChB;;AAEN,YAAIC,UAAQD,QAAZ;AACA,gBAAOD,yBAAP;AACA,eAAK,CAAL;AACA;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;AACA,eAAK,EAAL;AAAQ,mBAAO,SAAP;AACR;AAlCA;AAoCC,OAxCD;AAyCA5D,YAAMiD,KAAN,GAAc,CAAC,UAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,8CAAhC,EAA+E,cAA/E,EAA8F,mBAA9F,EAAkH,gBAAlH,EAAmI,mBAAnI,EAAuJ,wBAAvJ,EAAgL,qBAAhL,EAAsM,QAAtM,EAA+M,cAA/M,EAA8N,UAA9N,EAAyO,UAAzO,EAAoP,WAApP,EAAgQ,QAAhQ,EAAyQ,QAAzQ,CAAd;AACAjD,YAAMwD,UAAN,GAAmB,EAAC,WAAU,EAAC,SAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,EAA9B,EAAiC,EAAjC,EAAoC,EAApC,EAAuC,EAAvC,CAAT,EAAoD,aAAY,IAAhE,EAAX,EAAnB;AACA,aAAOxD,KAAP;AAAc,KAnNF,EAAZ;AAoNAnC,WAAOmC,KAAP,GAAeA,KAAf;AACA,aAAS+D,MAAT,GAAmB;AAAE,WAAKhG,EAAL,GAAU,EAAV;AAAe,YAAOvH,SAAP,GAAmBqH,MAAnB,CAA0BA,OAAOkG,MAAP,GAAgBA,MAAhB;AAC9D,WAAO,IAAIA,MAAJ,EAAP;AACC,GAxbY,EAAb;;AA0bE,WAASnF,UAAT,CAAqB9T,KAArB,EAA4B;AAC1B,SAAK1G,IAAL,GAAY,CAAE0G,KAAF,CAAZ;AACA,SAAK9B,IAAL,GAAY,YAAZ;AACD;;AAED4V,aAAWpI,SAAX,CAAqBsI,QAArB,GAAgC,UAAUhU,KAAV,EAAiB;AAC/C,QAAIA,MAAM9B,IAAN,KAAe,YAAnB,EAAiC;AAC/B,WAAK5E,IAAL,GAAY,KAAKA,IAAL,CAAUS,MAAV,CAAiBiG,MAAM1G,IAAvB,CAAZ;AACD,KAFD,MAEO;AACL,WAAKA,IAAL,CAAUyL,IAAV,CAAe/E,KAAf;AACD;;AAED,WAAO,IAAP;AACD,GARD;;AAUA8T,aAAWpI,SAAX,CAAqBO,MAArB,GAA8B,YAAY;AACxC,WAAO,KAAK3S,IAAZ;AACD,GAFD;;AAIA,WAAS6a,IAAT,CAAenU,KAAf,EAAsB;AACpB,SAAK1G,IAAL,GAAY0G,KAAZ;AACA,SAAK9B,IAAL,GAAY,MAAZ;AACD;;AAEDiW,OAAKzI,SAAL,CAAeO,MAAf,GAAwB,YAAY;AAClC,QAAI3S,OAAO,EAAX;;AAEA,SAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,IAAL,CAAUA,IAAV,CAAeM,MAAnC,EAA2Ca,GAA3C,EAAgD;AAC9CnB,WAAKyL,IAAL,CAAU,KAAKzL,IAAL,CAAUA,IAAV,CAAemB,CAAf,CAAV;AACD;;AAED,WAAOnB,IAAP;AACD,GARD;;AAUA,WAAS4a,QAAT,CAAmB5T,IAAnB,EAAyB;AACvB,SAAKhH,IAAL,GAAY,CAAEgH,IAAF,CAAZ;AACA,SAAKpC,IAAL,GAAY,UAAZ;AACD;;AAEDgW,WAASxI,SAAT,CAAmBuI,OAAnB,GAA6B,UAAU3T,IAAV,EAAgB;AAC3C,SAAKhH,IAAL,CAAUyL,IAAV,CAAezE,IAAf;;AAEA,WAAO,IAAP;AACD,GAJD;;AAMA4T,WAASxI,SAAT,CAAmBO,MAAnB,GAA4B,YAAY;AACtC,QAAI3S,OAAO,EAAX;;AAEA,SAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,IAAL,CAAUM,MAA9B,EAAsCa,GAAtC,EAA2C;AACzCnB,WAAKyL,IAAL,CAAU,KAAKzL,IAAL,CAAUmB,CAAV,EAAawR,MAAb,EAAV;AACD;;AAED,QAAI3S,KAAKM,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAON,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAP;AACD;AACF,GAZD;;AAcA,WAAS+a,WAAT,CAAsBnU,OAAtB,EAA+B;AAC7B,SAAK5G,IAAL,GAAY,CAAE4G,OAAF,CAAZ;AACA,SAAKhC,IAAL,GAAY,aAAZ;AACD;;AAEDmW,cAAY3I,SAAZ,CAAsB0I,UAAtB,GAAmC,UAAUlU,OAAV,EAAmB;AACpD,SAAK5G,IAAL,CAAUyL,IAAV,CAAe7E,OAAf;;AAEA,WAAO,IAAP;AACD,GAJD;;AAMAmU,cAAY3I,SAAZ,CAAsBO,MAAtB,GAA+B,YAAY;AACzC,QAAI3S,OAAO,EAAX;;AAEA,SAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,IAAL,CAAUM,MAA9B,EAAsCa,GAAtC,EAA2C;AACzCnB,aAAOA,KAAKS,MAAL,CAAa,CAAE,KAAKT,IAAL,CAAUmB,CAAV,EAAawR,MAAb,EAAF,CAAb,CAAP;AACD;;AAED,WAAO3S,IAAP;AACD,GARD;;AAUA,WAAS4f,MAAT,GAAmB;AACjB,WAAOnG,OAAOlQ,KAAP,CAAa8M,KAAb,CAAmBoD,MAAnB,EAA2BoG,SAA3B,CAAP;AACD;;AAED,WAAStW,KAAT,CAAgBuW,OAAhB,EAAyB;AACvB,QAAIC,GAAJ,EAASC,SAAT;;AAEA,QAAI;AACFD,YAAMtG,OAAOlQ,KAAP,CAAauW,OAAb,CAAN;AACD,KAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,YAAM5e,MAAM,sBAAsB4e,GAA5B,CAAN;AACD;;AAED,WAAO1G,YAAY2G,SAAZ,CAAsBH,GAAtB,CAAP;AACD;;AAED,WAASI,WAAT,CAAsBxf,GAAtB,EAA2B;AACzB,QAAIyf,QAAQ,EAAZ;AAAA,QAAiBtf,MAAM,EAAvB;;AAEA,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIR,IAAIL,MAAxB,EAAgCa,GAAhC,EAAqC;AACnCif,YAAM3U,IAAN,CAAW9K,IAAIQ,CAAJ,EAAO6O,IAAP,CAAY,GAAZ,CAAX;AACD;;AAEDlP,WAAO,MAAMsf,MAAMpQ,IAAN,CAAW,IAAX,CAAN,GAAyB,GAAhC;;AAEA,WAAOlP,GAAP;AAED;;AAED,WAASuf,eAAT,CAA0BL,SAA1B,EAAqC;AACnC,QAAIlf,MAAM,QAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAA5E,EAA+E;AAC7EQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAArC,EAAwC;AAE7C,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KAPM,MAOA,IAAIkf,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAArC,EAAwC;AAE7CQ,aAAO,KAAP;AACD;;AAGDA,WAAO,MAAMkf,UAAU5c,WAAV,CAAsB4M,IAAtB,CAA2B,GAA3B,CAAN,GAAwC,GAA/C;;AAEA,WAAOlP,GAAP;AACD;;AAED,WAASwf,yBAAT,CAAoCN,SAApC,EAA+C;AAC7C,QAAIlf,MAAM,aAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAAxE,IAA6E0f,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAArH,EAAwH;AACtHQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAAxC,EAA2C;AAChD,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAAxC,EAA2C;AAChDQ,aAAO,KAAP;AACD;;AAEDA,WAAOqf,YAAYH,UAAU5c,WAAtB,CAAP;;AAEA,WAAOtC,GAAP;AACD;;AAED,WAASyf,mBAAT,CAA8BP,SAA9B,EAAyC;AACvC,QAAIlf,MAAM,UAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAAxE,IAA6E0f,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAArH,EAAwH;AACtHQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9C,MAA5B,KAAuC,CAA3C,EAA8C;AACnD,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9C,MAA5B,KAAuC,CAA3C,EAA8C;AACnDQ,aAAO,KAAP;AACD;;AAEDA,WAAO,GAAP;AACA,QAAIsf,QAAQ,EAAZ;AACA,SAAK,IAAIjf,IAAI,CAAb,EAAgBA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAA1C,EAAkDa,GAAlD,EAAuD;AACrDif,YAAM3U,IAAN,CAAW0U,YAAYH,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAZ,CAAX;AACD;;AAEDL,WAAOsf,MAAMpQ,IAAN,CAAW,IAAX,CAAP;AACAlP,WAAO,GAAP;;AAEA,WAAOA,GAAP;AACD;;AAED,WAAS0f,yBAAT,CAAoCR,SAApC,EAA+C;AAC7C,QAAIlf,MAAM,aAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAAxE,IAA6E0f,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAArH,EAAwH;AACtHQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAAxC,EAA2C;AAChD,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAAxC,EAA2C;AAChDQ,aAAO,KAAP;AACD;;AAEDA,WAAOqf,YAAYH,UAAU5c,WAAtB,CAAP;;AAEA,WAAOtC,GAAP;AACD;;AAED,WAAS2f,mCAAT,CAA8CT,SAA9C,EAAyD;AACvD,QAAIlf,MAAM,kBAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAAxE,IAA6E0f,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAArH,EAAwH;AACtHQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9C,MAA5B,KAAuC,CAA3C,EAA8C;AACnD,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9C,MAA5B,KAAuC,CAA3C,EAA8C;AACnDQ,aAAO,KAAP;AACD;;AAEDA,WAAO,GAAP;AACA,QAAIsf,QAAQ,EAAZ;AACA,SAAK,IAAIjf,IAAI,CAAb,EAAgBA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAA1C,EAAkDa,GAAlD,EAAuD;AACrDif,YAAM3U,IAAN,CAAW0U,YAAYH,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAZ,CAAX;AACD;;AAEDL,WAAOsf,MAAMpQ,IAAN,CAAW,IAAX,CAAP;AACAlP,WAAO,GAAP;;AAEA,WAAOA,GAAP;AACD;;AAED,WAAS4f,6BAAT,CAAwCV,SAAxC,EAAmD;AACjD,QAAIlf,MAAM,eAAV;;AAEA,QAAIkf,UAAU5c,WAAV,KAA0BK,SAA1B,IAAuCuc,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,CAAxE,IAA6E0f,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB9C,MAAzB,KAAoC,CAArH,EAAwH;AACtHQ,aAAO,OAAP;;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B9C,MAA/B,KAA0C,CAA9C,EAAiD;AACtD,UAAI0f,UAAUrb,UAAV,IAAwBqb,UAAUrb,UAAV,CAAqB4O,CAArB,KAA2B,IAAvD,EAA6D;AAC3DzS,eAAO,IAAP;AACD,OAFD,MAEO;AACLA,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAIkf,UAAU5c,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B9C,MAA/B,KAA0C,CAA9C,EAAiD;AACtDQ,aAAO,KAAP;AACD;;AAEDA,WAAO,GAAP;AACA,QAAI6f,QAAQ,EAAZ;AACA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIsB,UAAU5c,WAAV,CAAsB9C,MAA1C,EAAkDoe,GAAlD,EAAuD;AACrD,UAAIkC,KAAK,GAAT;AACA,UAAIR,QAAQ,EAAZ;AACA,WAAK,IAAIjf,IAAI,CAAb,EAAgBA,IAAI6e,UAAU5c,WAAV,CAAsBsb,CAAtB,EAAyBpe,MAA7C,EAAqDa,GAArD,EAA0D;AACxDif,cAAM3U,IAAN,CAAW0U,YAAYH,UAAU5c,WAAV,CAAsBsb,CAAtB,EAAyBvd,CAAzB,CAAZ,CAAX;AACD;;AAEDyf,YAAMR,MAAMpQ,IAAN,CAAW,IAAX,CAAN;AACA4Q,YAAM,GAAN;;AAEAD,YAAMlV,IAAN,CAAWmV,EAAX;AACD;;AAED9f,WAAO6f,MAAM3Q,IAAN,CAAW,IAAX,CAAP;AACAlP,WAAO,GAAP;;AAEA,WAAOA,GAAP;AACD;;AAED,WAAS8I,OAAT,CAAkBoW,SAAlB,EAA6B;AAC3B,YAAQA,UAAUpb,IAAlB;AACE,WAAK,OAAL;AACE,eAAOyb,gBAAgBL,SAAhB,CAAP;AACF,WAAK,YAAL;AACE,eAAOM,0BAA0BN,SAA1B,CAAP;AACF,WAAK,SAAL;AACE,eAAOO,oBAAoBP,SAApB,CAAP;AACF,WAAK,YAAL;AACE,eAAOQ,0BAA0BR,SAA1B,CAAP;AACF,WAAK,iBAAL;AACE,eAAOS,oCAAoCT,SAApC,CAAP;AACF,WAAK,cAAL;AACE,eAAOU,8BAA8BV,SAA9B,CAAP;AACF;AACE,cAAM3e,MAAO,mBAAmB2e,UAAUpb,IAApC,CAAN;AAdJ;AAgBD;;AAIDwE,UAAQqQ,MAAR,GAAkBA,MAAlB;AACArQ,UAAQuW,MAAR,GAAkBlG,OAAOkG,MAAzB;AACAvW,UAAQG,KAAR,GAAkBA,KAAlB;AACAH,UAAQQ,OAAR,GAAkBA,OAAlB;;AAEA,SAAOR,OAAP;AACD,CAxvBA,CAAD,C;;;;;;;;;;;;ACAC,WAAUgQ,IAAV,EAAgBC,OAAhB,EAAyB;AAGxB,MAAG,gCAAOlQ,MAAP,OAAkB,QAAlB,IAA8B,QAAOA,OAAOC,OAAd,MAA0B,QAA3D,EAAqE;AACnEA,cAAUD,OAAOC,OAAP,GAAiBiQ,SAA3B;AACD;;AAGD,MAAG,QAAOwH,MAAP,yCAAOA,MAAP,OAAkB,QAArB,EAA+B;AAC7BzH,SAAKG,WAAL,GAAmBF,SAAnB;AACD;AAEF,CAZA,aAYO,YAAU;AAChB,MAAIjQ,UAAU,EAAd;AAAA,MACI0X,cAAc,OADlB;AAAA,MAEIC,mBAAmB,kBAFvB;AAAA,MAGIC,mBAAoB,iBAHxB;AAAA,MAIIC,cAAc;AACZ,YAAQ,MADI;AAEZ,kBAAc;AACZ,cAAQ,qDADI;AAEZ,cAAQ;AAFI;AAFF,GAJlB;AAAA,MAWIC,gBAAgB;AACd,YAAQ,MADM;AAEd,kBAAc;AACZ,cAAQ,mDADI;AAEZ,cAAQ;AAFI;AAFA,GAXpB;;AAsBA,WAAS7gB,OAAT,CAAiB8C,GAAjB,EAAsB;AACpB,WAAOqD,OAAO4L,SAAP,CAAiB+O,QAAjB,CAA0B9O,IAA1B,CAA+BlP,GAA/B,MAAwC,gBAA/C;AACD;;AAKD,WAASie,IAAT,GAAgB;AACd,QAAIC,OAAOjhB,MAAMgS,SAAN,CAAgB+C,KAAhB,CAAsBkB,KAAtB,CAA4BwJ,SAA5B,CAAX;;AAEA,QAAI,QAAOte,OAAP,yCAAOA,OAAP,OAAmBkC,SAAnB,IAAgClC,QAAQ6f,IAA5C,EAAkD;AAChD7f,cAAQ6f,IAAR,CAAa/K,KAAb,CAAmB9U,OAAnB,EAA4B8f,IAA5B;AACD;AACF;;AAKD,WAAS7J,MAAT,CAAgB7T,WAAhB,EAA6B2d,MAA7B,EAAqC;AACnC,SAAK,IAAI9W,CAAT,IAAc8W,MAAd,EAAsB;AACpB,UAAIA,OAAO5X,cAAP,CAAsBc,CAAtB,CAAJ,EAA8B;AAC5B7G,oBAAY6G,CAAZ,IAAiB8W,OAAO9W,CAAP,CAAjB;AACD;AACF;AACD,WAAO7G,WAAP;AACD;;AAKD,WAAS4d,eAAT,CAA0Bhd,OAA1B,EAAmC;AACjC,QAAGA,QAAQK,IAAX,EAAgB;AACd,cAAQL,QAAQK,IAAhB;AACE,aAAK,OAAL;AACE,iBAAO,CAAEL,QAAQnB,WAAR,CAAoB,CAApB,CAAF,EAA0BmB,QAAQnB,WAAR,CAAoB,CAApB,CAA1B,EAAkDmB,QAAQnB,WAAR,CAAoB,CAApB,CAAlD,EAA0EmB,QAAQnB,WAAR,CAAoB,CAApB,CAA1E,CAAP;;AAEF,aAAK,YAAL;AACE,iBAAOoe,yBAAyBjd,QAAQnB,WAAjC,CAAP;;AAEF,aAAK,YAAL;AACE,iBAAOoe,yBAAyBjd,QAAQnB,WAAjC,CAAP;;AAEF,aAAK,iBAAL;AACE,iBAAOqe,gCAAgCld,QAAQnB,WAAxC,CAAP;;AAEF,aAAK,SAAL;AACE,iBAAOqe,gCAAgCld,QAAQnB,WAAxC,CAAP;;AAEF,aAAK,cAAL;AACE,iBAAOse,uCAAuCnd,QAAQnB,WAA/C,CAAP;;AAEF,aAAK,SAAL;AACE,iBAAOmB,QAAQjB,QAAR,GAAkBie,gBAAgBhd,QAAQjB,QAAxB,CAAlB,GAAsD,IAA7D;;AAEF,aAAK,mBAAL;AACE,iBAAOqe,oCAAoCpd,OAApC,CAAP;;AAEF,aAAK,oBAAL;AACE,iBAAOqd,qCAAqCrd,OAArC,CAAP;;AAEF;AACE,gBAAM,IAAIlD,KAAJ,CAAU,mBAAmBkD,QAAQK,IAArC,CAAN;AA7BJ;AA+BD;AACD,WAAO,IAAP;AACD;;AAgBD,WAAS6c,+BAAT,CAA0CI,KAA1C,EAAiD;AAC/C,QAAI1R,KAAK,IAAT;AAAA,QAAeE,KAAK,IAApB;AAAA,QAA0BD,KAAK,IAA/B;AAAA,QAAqCE,KAAK,IAA1C;;AAEA,SAAK,IAAInP,IAAI,CAAb,EAAgBA,IAAI0gB,MAAMvhB,MAA1B,EAAkCa,GAAlC,EAAuC;AACrC,UAAIwf,QAAQkB,MAAM1gB,CAAN,CAAZ;;AAEA,WAAK,IAAI8D,IAAI,CAAb,EAAgBA,IAAI0b,MAAMrgB,MAA1B,EAAkC2E,GAAlC,EAAuC;AACrC,YAAI6c,SAASnB,MAAM1b,CAAN,CAAb;;AAEA,YAAI8c,MAAMD,OAAO,CAAP,CAAV;AACA,YAAIE,MAAMF,OAAO,CAAP,CAAV;;AAEA,YAAI3R,OAAO,IAAX,EAAiB;AACfA,eAAK4R,GAAL;AACD,SAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,eAAK4R,GAAL;AACD;;AAED,YAAI1R,OAAO,IAAX,EAAiB;AACfA,eAAK0R,GAAL;AACD,SAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,eAAK0R,GAAL;AACD;;AAED,YAAI3R,OAAO,IAAX,EAAiB;AACfA,eAAK4R,GAAL;AACD,SAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,eAAK4R,GAAL;AACD;;AAED,YAAI1R,OAAO,IAAX,EAAiB;AACfA,eAAK0R,GAAL;AACD,SAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,eAAK0R,GAAL;AACD;AACF;AACF;;AAED,WAAO,CAAC7R,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAP;AACD;;AAUD,WAASoR,sCAAT,CAAiDG,KAAjD,EAAwD;AACtD,QAAI1R,KAAK,IAAT;AAAA,QAAeE,KAAK,IAApB;AAAA,QAA0BD,KAAK,IAA/B;AAAA,QAAqCE,KAAK,IAA1C;;AAEA,SAAK,IAAInP,IAAI,CAAb,EAAgBA,IAAI0gB,MAAMvhB,MAA1B,EAAkCa,GAAlC,EAAuC;AACrC,UAAIwf,QAAQkB,MAAM1gB,CAAN,CAAZ;;AAEA,WAAK,IAAI8D,IAAI,CAAb,EAAgBA,IAAI0b,MAAMrgB,MAA1B,EAAkC2E,GAAlC,EAAuC;AACrC,YAAIgd,aAAatB,MAAM1b,CAAN,CAAjB;AACA,aAAK,IAAIuF,IAAI,CAAb,EAAgBA,IAAIyX,WAAW3hB,MAA/B,EAAuCkK,GAAvC,EAA4C;AAC1C,cAAIsX,SAASG,WAAWzX,CAAX,CAAb;;AAEA,cAAIuX,MAAMD,OAAO,CAAP,CAAV;AACA,cAAIE,MAAMF,OAAO,CAAP,CAAV;;AAEA,cAAI3R,OAAO,IAAX,EAAiB;AACfA,iBAAK4R,GAAL;AACD,WAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,iBAAK4R,GAAL;AACD;;AAED,cAAI1R,OAAO,IAAX,EAAiB;AACfA,iBAAK0R,GAAL;AACD,WAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,iBAAK0R,GAAL;AACD;;AAED,cAAI3R,OAAO,IAAX,EAAiB;AACfA,iBAAK4R,GAAL;AACD,WAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,iBAAK4R,GAAL;AACD;;AAED,cAAI1R,OAAO,IAAX,EAAiB;AACfA,iBAAK0R,GAAL;AACD,WAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,iBAAK0R,GAAL;AACD;AACF;AACF;AACF;;AAED,WAAO,CAAC7R,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAP;AACD;;AAQD,WAASkR,wBAAT,CAAmCK,KAAnC,EAA0C;AACxC,QAAI1R,KAAK,IAAT;AAAA,QAAeE,KAAK,IAApB;AAAA,QAA0BD,KAAK,IAA/B;AAAA,QAAqCE,KAAK,IAA1C;;AAEA,SAAK,IAAInP,IAAI,CAAb,EAAgBA,IAAI0gB,MAAMvhB,MAA1B,EAAkCa,GAAlC,EAAuC;AACrC,UAAI2gB,SAASD,MAAM1gB,CAAN,CAAb;AACA,UAAI4gB,MAAMD,OAAO,CAAP,CAAV;AACA,UAAIE,MAAMF,OAAO,CAAP,CAAV;;AAEA,UAAI3R,OAAO,IAAX,EAAiB;AACfA,aAAK4R,GAAL;AACD,OAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,aAAK4R,GAAL;AACD;;AAED,UAAI1R,OAAO,IAAX,EAAiB;AACfA,aAAK0R,GAAL;AACD,OAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,aAAK0R,GAAL;AACD;;AAED,UAAI3R,OAAO,IAAX,EAAiB;AACfA,aAAK4R,GAAL;AACD,OAFD,MAEO,IAAIA,MAAM5R,EAAV,EAAc;AACnBA,aAAK4R,GAAL;AACD;;AAED,UAAI1R,OAAO,IAAX,EAAiB;AACfA,aAAK0R,GAAL;AACD,OAFD,MAEO,IAAIA,MAAM1R,EAAV,EAAc;AACnBA,aAAK0R,GAAL;AACD;AACF;;AAED,WAAO,CAAC7R,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAP;AACD;;AAKD,WAASqR,mCAAT,CAA6C1a,iBAA7C,EAA+D;AAC7D,QAAIib,UAAU,EAAd;AAAA,QAAkBC,MAAlB;AACA,SAAK,IAAIhhB,IAAI8F,kBAAkBvB,QAAlB,CAA2BpF,MAA3B,GAAoC,CAAjD,EAAoDa,KAAK,CAAzD,EAA4DA,GAA5D,EAAiE;AAC/DghB,eAASZ,gBAAgBta,kBAAkBvB,QAAlB,CAA2BvE,CAA3B,EAA8BmC,QAA9C,CAAT;AACA4e,cAAQzW,IAAR,CAAa,CAAC0W,OAAO,CAAP,CAAD,EAAWA,OAAO,CAAP,CAAX,CAAb;AACAD,cAAQzW,IAAR,CAAa,CAAC0W,OAAO,CAAP,CAAD,EAAWA,OAAO,CAAP,CAAX,CAAb;AACD;;AAED,WAAOX,yBAAyBU,OAAzB,CAAP;AACD;;AAKD,WAASN,oCAAT,CAA8Cza,kBAA9C,EAAiE;AAC/D,QAAI+a,UAAU,EAAd;AAAA,QAAkBC,MAAlB;;AAEA,SAAK,IAAIhhB,IAAIgG,mBAAmBxB,UAAnB,CAA8BrF,MAA9B,GAAuC,CAApD,EAAuDa,KAAK,CAA5D,EAA+DA,GAA/D,EAAoE;AAClEghB,eAASZ,gBAAgBpa,mBAAmBxB,UAAnB,CAA8BxE,CAA9B,CAAhB,CAAT;AACA+gB,cAAQzW,IAAR,CAAa,CAAC0W,OAAO,CAAP,CAAD,EAAWA,OAAO,CAAP,CAAX,CAAb;AACAD,cAAQzW,IAAR,CAAa,CAAC0W,OAAO,CAAP,CAAD,EAAWA,OAAO,CAAP,CAAX,CAAb;AACD;;AAED,WAAOX,yBAAyBU,OAAzB,CAAP;AACD;;AAED,WAASE,iBAAT,CAA2B7d,OAA3B,EAAmC;AACjC,QAAI8d,SAASd,gBAAgBhd,OAAhB,CAAb;AACA,WAAO;AACLyM,SAAGqR,OAAO,CAAP,CADE;AAELpR,SAAGoR,OAAO,CAAP,CAFE;AAGLC,SAAGrhB,KAAKC,GAAL,CAASmhB,OAAO,CAAP,IAAYA,OAAO,CAAP,CAArB,CAHE;AAILE,SAAGthB,KAAKC,GAAL,CAASmhB,OAAO,CAAP,IAAYA,OAAO,CAAP,CAArB;AAJE,KAAP;AAMD;;AAKD,WAASG,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,WAAOA,MAAM1B,gBAAb;AACD;;AAKD,WAAS2B,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,WAAOA,MAAM3B,gBAAb;AACD;;AAKD,WAAS4B,YAAT,CAAsBxf,WAAtB,EAAmCyf,IAAnC,EAAyC;AACvC,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAIiC,YAAY9C,MAAhC,EAAwCa,GAAxC,EAA6C;AAE3C,UAAG,OAAOiC,YAAYjC,CAAZ,EAAe,CAAf,CAAP,KAA6B,QAAhC,EAAyC;AACvCiC,oBAAYjC,CAAZ,IAAiB0hB,KAAKzf,YAAYjC,CAAZ,CAAL,CAAjB;AACD;;AAED,UAAG,QAAOiC,YAAYjC,CAAZ,CAAP,MAA0B,QAA7B,EAAsC;AACpCiC,oBAAYjC,CAAZ,IAAiByhB,aAAaxf,YAAYjC,CAAZ,CAAb,EAA6B0hB,IAA7B,CAAjB;AACD;AACF;AACD,WAAOzf,WAAP;AACD;;AAKD,WAAS0f,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,QAAI/R,IAAI+R,SAAS,CAAT,CAAR;AACA,QAAI9R,IAAI8R,SAAS,CAAT,CAAR;AACA,WAAO,CAACP,SAASxR,IAAI8P,WAAb,IAA6B7f,KAAKY,KAAL,CAAW,CAAC2gB,SAASxR,IAAI8P,WAAb,IAA4B,GAA7B,IAAoC,GAA/C,IAAsD,GAApF,EAA0F0B,SAAUvhB,KAAKmB,EAAL,GAAU,CAAX,GAAiB,IAAInB,KAAK+hB,IAAL,CAAU/hB,KAAKyS,GAAL,CAAS,CAAC,GAAD,GAAOzC,CAAP,GAAW6P,WAApB,CAAV,CAA9B,CAA1F,CAAP;AACD;;AAKD,WAASmC,kBAAT,CAA4BF,QAA5B,EAAsC;AACpC,QAAIG,MAAMH,SAAS,CAAT,CAAV;AACA,QAAIf,MAAM/gB,KAAKqM,GAAL,CAASrM,KAAK6S,GAAL,CAASiP,SAAS,CAAT,CAAT,EAAsB,QAAtB,CAAT,EAA0C,CAAC,QAA3C,CAAV;AACA,WAAO,CAACL,SAASQ,GAAT,IAAgBpC,WAAjB,EAA8BA,cAAY,GAAZ,GAAkB7f,KAAKO,GAAL,CAAU,CAAC,MAAMP,KAAK6B,GAAL,CAAS4f,SAASV,GAAT,CAAT,CAAP,KAAmC,MAAM/gB,KAAK6B,GAAL,CAAS4f,SAASV,GAAT,CAAT,CAAzC,CAAV,CAAhD,CAAP;AACD;;AAKD,WAASmB,cAAT,CAAwB5e,OAAxB,EAAiC6e,SAAjC,EAA4CC,KAA5C,EAAkD;AAChD,QAAG9e,QAAQK,IAAR,KAAiB,OAApB,EAA6B;AAC3BL,cAAQnB,WAAR,GAAsBggB,UAAU7e,QAAQnB,WAAlB,CAAtB;AACD,KAFD,MAEO,IAAGmB,QAAQK,IAAR,KAAiB,SAApB,EAA+B;AACpCL,cAAQjB,QAAR,GAAmB6f,eAAe5e,QAAQjB,QAAvB,EAAiC8f,SAAjC,EAA4C,IAA5C,CAAnB;AACD,KAFM,MAEA,IAAG7e,QAAQK,IAAR,KAAiB,mBAApB,EAAyC;AAC9C,WAAK,IAAI0e,IAAI,CAAb,EAAgBA,IAAI/e,QAAQmB,QAAR,CAAiBpF,MAArC,EAA6CgjB,GAA7C,EAAkD;AAChD/e,gBAAQmB,QAAR,CAAiB4d,CAAjB,IAAsBH,eAAe5e,QAAQmB,QAAR,CAAiB4d,CAAjB,CAAf,EAAoCF,SAApC,EAA+C,IAA/C,CAAtB;AACD;AACF,KAJM,MAIA,IAAG7e,QAAQK,IAAR,KAAiB,oBAApB,EAA0C;AAC/C,WAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIX,QAAQoB,UAAR,CAAmBrF,MAAvC,EAA+C4E,GAA/C,EAAoD;AAClDX,gBAAQoB,UAAR,CAAmBT,CAAnB,IAAwBie,eAAe5e,QAAQoB,UAAR,CAAmBT,CAAnB,CAAf,EAAsCke,SAAtC,EAAiD,IAAjD,CAAxB;AACD;AACF,KAJM,MAIA;AACL7e,cAAQnB,WAAR,GAAsBwf,aAAare,QAAQnB,WAArB,EAAkCggB,SAAlC,CAAtB;AACD;;AAED,QAAG,CAACC,KAAJ,EAAU;AACR,UAAGD,cAAcH,kBAAjB,EAAoC;AAClC1e,gBAAQgf,GAAR,GAActC,WAAd;AACD;AACF;;AAED,QAAGmC,cAAcN,oBAAjB,EAAsC;AACpC,aAAOve,QAAQgf,GAAf;AACD;;AAED,WAAOhf,OAAP;AACD;;AAKD,WAASif,UAAT,CAAoBjf,OAApB,EAA6B;AAC3B,WAAO4e,eAAe5e,OAAf,EAAwB0e,kBAAxB,CAAP;AACD;;AAKD,WAASQ,YAAT,CAAsBlf,OAAtB,EAA+B;AAC7B,WAAO4e,eAAe5e,OAAf,EAAwBue,oBAAxB,CAAP;AACD;;AAMD,WAASY,GAAT,CAAa9gB,CAAb,EAAgBkP,CAAhB,EAAmB;AACjB,QAAGlP,IAAIkP,CAAP,EAAU;AACR,aAAO,CAAC,CAAR;AACD,KAFD,MAEO,IAAGlP,IAAIkP,CAAP,EAAU;AACf,aAAO,CAAP;AACD,KAFM,MAEA;AACL,aAAO,CAAP;AACD;AACF;;AAKD,WAAS6R,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AACxB,QAAID,GAAG,CAAH,IAAQC,GAAG,CAAH,CAAZ,EAAmB;AACjB,aAAO,CAAC,CAAR;AACD,KAFD,MAEO,IAAID,GAAG,CAAH,IAAQC,GAAG,CAAH,CAAZ,EAAmB;AACxB,aAAO,CAAP;AACD,KAFM,MAEA,IAAID,GAAG,CAAH,IAAQC,GAAG,CAAH,CAAZ,EAAmB;AACxB,aAAO,CAAC,CAAR;AACD,KAFM,MAEA,IAAID,GAAG,CAAH,IAAQC,GAAG,CAAH,CAAZ,EAAmB;AACxB,aAAO,CAAP;AACD,KAFM,MAEA;AACL,aAAO,CAAP;AACD;AACF;;AAMD,WAASC,IAAT,CAAc9K,CAAd,EAAiB+K,CAAjB,EAAoBtH,CAApB,EAAuB;AAErB,WAAOiH,IAAI,CAACK,EAAE,CAAF,IAAO/K,EAAE,CAAF,CAAR,KAAiByD,EAAE,CAAF,IAAOzD,EAAE,CAAF,CAAxB,IAAgC,CAACyD,EAAE,CAAF,IAAOzD,EAAE,CAAF,CAAR,KAAiB+K,EAAE,CAAF,IAAO/K,EAAE,CAAF,CAAxB,CAApC,EAAmE,CAAnE,CAAP;AACD;;AAKD,WAASgL,iBAAT,CAA2BhL,CAA3B,EAA8B+K,CAA9B,EAAiC;AAE/B,QAAIE,KAAKF,EAAE,CAAF,IAAO/K,EAAE,CAAF,CAAhB;AACA,QAAIkL,KAAKH,EAAE,CAAF,IAAO/K,EAAE,CAAF,CAAhB;;AAEA,WAAOiL,KAAKA,EAAL,GAAUC,KAAKA,EAAtB;AACD;;AAED,WAASC,aAAT,CAAuBC,MAAvB,EAA+BpL,CAA/B,EAAkC;AAEhC,QAAI+K,IAAI/K,CAAR;AACA,SAAI,IAAIyD,CAAR,IAAa2H,MAAb,EAAqB;AACnB,UAAIrQ,IAAI+P,KAAK9K,CAAL,EAAQ+K,CAAR,EAAWK,OAAO3H,CAAP,CAAX,CAAR;AACA,UAAG1I,MAAM,CAAC,CAAP,IAAYA,MAAM,CAAN,IAAWiQ,kBAAkBhL,CAAlB,EAAqBoL,OAAO3H,CAAP,CAArB,IAAkCuH,kBAAkBhL,CAAlB,EAAqB+K,CAArB,CAA5D,EAAqF;AACnFA,YAAIK,OAAO3H,CAAP,CAAJ;AACD;AACF;AACD,WAAOsH,CAAP;AACD;;AAED,WAASM,UAAT,CAAoBD,MAApB,EAA4B;;AAI1B,QAAGA,OAAO9jB,MAAP,KAAkB,CAArB,EAAwB;AACtB,aAAO,EAAP;AACD,KAFD,MAEO,IAAG8jB,OAAO9jB,MAAP,KAAkB,CAArB,EAAwB;AAC7B,aAAO8jB,MAAP;AACD;;AAGD,QAAIE,OAAO,CAACF,OAAO5L,IAAP,CAAYmL,QAAZ,EAAsB,CAAtB,CAAD,CAAX;;AAEA,SAAI,IAAI3K,IAAI,CAAZ,EAAeA,IAAIsL,KAAKhkB,MAAxB,EAAgC0Y,GAAhC,EAAqC;AACnC,UAAI+K,IAAII,cAAcC,MAAd,EAAsBE,KAAKtL,CAAL,CAAtB,CAAR;;AAEA,UAAG+K,MAAMO,KAAK,CAAL,CAAT,EAAkB;AAChBA,aAAK7Y,IAAL,CAAUsY,CAAV;AACD;AACF;;AAED,WAAOO,IAAP;AACD;;AAED,WAASC,QAAT,CAAkBH,MAAlB,EAA0B;AACxB,QAAII,GAAJ;;AAEA,SAAK,IAAIrjB,IAAI,CAAb,EAAgBA,IAAIijB,OAAO9jB,MAAP,GAAgB,CAApC,EAAuCa,GAAvC,EAA4C;AAC1C,UAAIyiB,KAAKQ,OAAOjjB,CAAP,CAAT;AACA,UAAI0iB,KAAKO,OAAOjjB,IAAI,CAAX,CAAT;AACA,UAAIsjB,KAAKL,OAAOjjB,IAAI,CAAX,CAAT;AACA,UAAIujB,IAAI,CAACb,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,EAAgBC,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAxB,CAAR;;AAGA,UAAI7D,MAAM0E,GAAG,CAAH,IAAQC,EAAE,CAAF,CAAR,GAAeD,GAAG,CAAH,IAAQC,EAAE,CAAF,CAAvB,GAA8BA,EAAE,CAAF,IAAOd,GAAG,CAAH,CAArC,GAA6Cc,EAAE,CAAF,IAAOd,GAAG,CAAH,CAA9D;;AAEA,UAAIziB,MAAM,CAAV,EAAa;AACX,YAAI4e,MAAM,CAAV,EAAa;AACXyE,gBAAM,IAAN;AACD,SAFD,MAEO;AACLA,gBAAM,KAAN;AACD;AACF,OAND,MAMO;AACL,YAAIA,OAAQzE,MAAM,CAAd,IAAoB,CAACyE,GAAD,IAASzE,MAAM,CAAvC,EAA2C;AACzC,iBAAO,KAAP;AACD;AACF;AACF;;AAED,WAAO,IAAP;AACD;;AAED,WAAS4E,uBAAT,CAAiCvhB,WAAjC,EAA8CsD,KAA9C,EAAqD;AACnD,QAAIsO,WAAW,KAAf;AACA,SAAI,IAAI7T,IAAI,CAAC,CAAT,EAAYsJ,IAAIrH,YAAY9C,MAA5B,EAAoC2E,IAAIwF,IAAI,CAAhD,EAAmD,EAAEtJ,CAAF,GAAMsJ,CAAzD,EAA4DxF,IAAI9D,CAAhE,EAAmE;AACjE,UAAI,CAAEiC,YAAYjC,CAAZ,EAAe,CAAf,KAAqBuF,MAAM,CAAN,CAArB,IAAiCA,MAAM,CAAN,IAAWtD,YAAY6B,CAAZ,EAAe,CAAf,CAA7C,IACC7B,YAAY6B,CAAZ,EAAe,CAAf,KAAqByB,MAAM,CAAN,CAArB,IAAiCA,MAAM,CAAN,IAAWtD,YAAYjC,CAAZ,EAAe,CAAf,CAD9C,KAECuF,MAAM,CAAN,IAAW,CAACtD,YAAY6B,CAAZ,EAAe,CAAf,IAAoB7B,YAAYjC,CAAZ,EAAe,CAAf,CAArB,KAA2CuF,MAAM,CAAN,IAAWtD,YAAYjC,CAAZ,EAAe,CAAf,CAAtD,KAA4EiC,YAAY6B,CAAZ,EAAe,CAAf,IAAoB7B,YAAYjC,CAAZ,EAAe,CAAf,CAAhG,IAAqHiC,YAAYjC,CAAZ,EAAe,CAAf,CAFrI,EAEyJ;AACvJ6T,mBAAW,CAACA,QAAZ;AACD;AACF;AACD,WAAOA,QAAP;AACD;;AAED,WAAS4P,oBAAT,CAA8Bhe,OAA9B,EAAuCF,KAAvC,EAA8C;AAC5C,QAAIE,WAAWA,QAAQtG,MAAvB,EAA+B;AAC7B,UAAIsG,QAAQtG,MAAR,KAAmB,CAAvB,EAA0B;AACxB,eAAOqkB,wBAAwB/d,QAAQ,CAAR,CAAxB,EAAoCF,KAApC,CAAP;AACD,OAFD,MAEO;AACL,YAAIie,wBAAwB/d,QAAQ,CAAR,CAAxB,EAAoCF,KAApC,CAAJ,EAAgD;AAC9C,eAAK,IAAIvF,IAAI,CAAb,EAAgBA,IAAIyF,QAAQtG,MAA5B,EAAoCa,GAApC,EAAyC;AACvC,gBAAIwjB,wBAAwB/d,QAAQzF,CAAR,CAAxB,EAAoCuF,KAApC,CAAJ,EAAgD;AAC9C,qBAAO,KAAP;AACD;AACF;;AAED,iBAAO,IAAP;AACD,SARD,MAQO;AACL,iBAAO,KAAP;AACD;AACF;AACF,KAhBD,MAgBO;AACL,aAAO,KAAP;AACD;AACF;;AAED,WAASme,kBAAT,CAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA4C;AAC1C,QAAIC,OAAO,CAACD,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBF,GAAG,CAAH,IAAQE,GAAG,CAAH,CAA3B,IAAoC,CAACC,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBF,GAAG,CAAH,IAAQE,GAAG,CAAH,CAA3B,CAA/C;AACA,QAAIG,OAAO,CAACJ,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBA,GAAG,CAAH,IAAQE,GAAG,CAAH,CAA3B,IAAoC,CAACD,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBA,GAAG,CAAH,IAAQE,GAAG,CAAH,CAA3B,CAA/C;AACA,QAAII,MAAO,CAACH,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBD,GAAG,CAAH,IAAQD,GAAG,CAAH,CAA3B,IAAoC,CAACG,GAAG,CAAH,IAAQD,GAAG,CAAH,CAAT,KAAmBD,GAAG,CAAH,IAAQD,GAAG,CAAH,CAA3B,CAA/C;;AAEA,QAAKM,QAAQ,CAAb,EAAiB;AACf,UAAIC,KAAKH,OAAOE,GAAhB;AACA,UAAIE,KAAKH,OAAOC,GAAhB;;AAEA,UAAK,KAAKC,EAAL,IAAWA,MAAM,CAAjB,IAAsB,KAAKC,EAA3B,IAAiCA,MAAM,CAA5C,EAAgD;AAC9C,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD;;AAED,WAASC,QAAT,CAAkBjS,CAAlB,EAAqB;AACnB,WAAO,CAAChL,MAAMkd,WAAWlS,CAAX,CAAN,CAAD,IAAyBmS,SAASnS,CAAT,CAAhC;AACD;;AAED,WAASoS,qBAAT,CAA+B9iB,CAA/B,EAAkCkP,CAAlC,EAAqC;AACnC,QAAIyT,SAAS3iB,EAAE,CAAF,EAAK,CAAL,CAAT,CAAJ,EAAuB;AACrB,UAAI2iB,SAASzT,EAAE,CAAF,EAAK,CAAL,CAAT,CAAJ,EAAuB;AACrB,aAAK,IAAI3Q,IAAI,CAAb,EAAgBA,IAAIyB,EAAEtC,MAAF,GAAW,CAA/B,EAAkCa,GAAlC,EAAuC;AACrC,eAAK,IAAI8D,IAAI,CAAb,EAAgBA,IAAI6M,EAAExR,MAAF,GAAW,CAA/B,EAAkC2E,GAAlC,EAAuC;AACrC,gBAAI4f,mBAAmBjiB,EAAEzB,CAAF,CAAnB,EAAyByB,EAAEzB,IAAI,CAAN,CAAzB,EAAmC2Q,EAAE7M,CAAF,CAAnC,EAAyC6M,EAAE7M,IAAI,CAAN,CAAzC,CAAJ,EAAwD;AACtD,qBAAO,IAAP;AACD;AACF;AACF;AACF,OARD,MAQO;AACL,aAAK,IAAIuF,IAAI,CAAb,EAAgBA,IAAIsH,EAAExR,MAAtB,EAA8BkK,GAA9B,EAAmC;AACjC,cAAIkb,sBAAsB9iB,CAAtB,EAAyBkP,EAAEtH,CAAF,CAAzB,CAAJ,EAAoC;AAClC,mBAAO,IAAP;AACD;AACF;AACF;AACF,KAhBD,MAgBO;AACL,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI7H,EAAEtC,MAAtB,EAA8BmK,GAA9B,EAAmC;AACjC,YAAIib,sBAAsB9iB,EAAE6H,CAAF,CAAtB,EAA4BqH,CAA5B,CAAJ,EAAoC;AAClC,iBAAO,IAAP;AACD;AACF;AACF;AACD,WAAO,KAAP;AACD;;AAKD,WAAS6T,aAAT,CAAuBviB,WAAvB,EAAoC;AAClC,QAAIwiB,QAAQ,EAAZ;;AAEA,SAAK,IAAIzkB,IAAI,CAAb,EAAgBA,IAAIiC,YAAY9C,MAAhC,EAAwCa,GAAxC,EAA6C;AAC3C,UAAIwf,QAAQvd,YAAYjC,CAAZ,EAAegU,KAAf,EAAZ;AACA,UAAI0Q,YAAYlF,MAAM,CAAN,CAAZ,EAAsBA,MAAMA,MAAMrgB,MAAN,GAAe,CAArB,CAAtB,MAAmD,KAAvD,EAA8D;AAC5DqgB,cAAMlV,IAAN,CAAWkV,MAAM,CAAN,CAAX;AACD;;AAEDiF,YAAMna,IAAN,CAAWkV,KAAX;AACD;;AAED,WAAOiF,KAAP;AACD;;AAED,WAASC,WAAT,CAAqBjjB,CAArB,EAAwBkP,CAAxB,EAA2B;AACzB,SAAK,IAAI3Q,IAAI,CAAb,EAAgBA,IAAIyB,EAAEtC,MAAtB,EAA8Ba,GAA9B,EAAmC;;AAEjC,UAAIyB,EAAEzB,CAAF,MAAS2Q,EAAE3Q,CAAF,CAAb,EAAmB;AACjB,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAED,WAAS2kB,gBAAT,CAA0BljB,CAA1B,EAA6BkP,CAA7B,EAAgC;AAC9B,QAAIlP,EAAEtC,MAAF,KAAawR,EAAExR,MAAnB,EAA2B;AACzB,aAAO,KAAP;AACD;;AAED,QAAIylB,KAAKnjB,EAAEuS,KAAF,GAAUqD,IAAV,CAAemL,QAAf,CAAT;AACA,QAAIqC,KAAKlU,EAAEqD,KAAF,GAAUqD,IAAV,CAAemL,QAAf,CAAT;;AAEA,SAAK,IAAIxiB,IAAI,CAAb,EAAgBA,IAAI4kB,GAAGzlB,MAAvB,EAA+Ba,GAA/B,EAAoC;AAClC,UAAI4kB,GAAG5kB,CAAH,EAAMb,MAAN,KAAiB0lB,GAAG7kB,CAAH,EAAMb,MAA3B,EAAmC;AACjC,eAAO,KAAP;AACD;AACD,WAAK,IAAI2E,IAAI,CAAb,EAAgBA,IAAI8gB,GAAGzlB,MAAvB,EAA+B2E,GAA/B,EAAoC;AAClC,YAAI8gB,GAAG5kB,CAAH,EAAM8D,CAAN,MAAa+gB,GAAG7kB,CAAH,EAAM8D,CAAN,CAAjB,EAA2B;AACzB,iBAAO,KAAP;AACD;AACF;AACF;;AAED,WAAO,IAAP;AACD;;AAKD,MAAIghB,kBAAkB,CAAC,QAAD,CAAtB;;AAKA,WAAS/F,SAAT,CAAmB3b,OAAnB,EAA2B;AACzB,QAAGA,OAAH,EAAW;AACT,cAAQA,QAAQK,IAAhB;AACA,aAAK,OAAL;AACE,iBAAO,IAAIshB,KAAJ,CAAU3hB,OAAV,CAAP;;AAEF,aAAK,YAAL;AACE,iBAAO,IAAI4hB,UAAJ,CAAe5hB,OAAf,CAAP;;AAEF,aAAK,YAAL;AACE,iBAAO,IAAI6hB,UAAJ,CAAe7hB,OAAf,CAAP;;AAEF,aAAK,iBAAL;AACE,iBAAO,IAAI8hB,eAAJ,CAAoB9hB,OAApB,CAAP;;AAEF,aAAK,SAAL;AACE,iBAAO,IAAI+hB,OAAJ,CAAY/hB,OAAZ,CAAP;;AAEF,aAAK,cAAL;AACE,iBAAO,IAAIgiB,YAAJ,CAAiBhiB,OAAjB,CAAP;;AAEF,aAAK,SAAL;AACE,iBAAO,IAAIiiB,OAAJ,CAAYjiB,OAAZ,CAAP;;AAEF,aAAK,mBAAL;AACE,iBAAO,IAAIkiB,iBAAJ,CAAsBliB,OAAtB,CAAP;;AAEF,aAAK,oBAAL;AACE,iBAAO,IAAImiB,kBAAJ,CAAuBniB,OAAvB,CAAP;;AAEF;AACE,gBAAM,IAAIlD,KAAJ,CAAU,mBAAmBkD,QAAQK,IAArC,CAAN;AA7BF;AA+BD;AACF;;AAEDsb,YAAU9N,SAAV,CAAoBoR,UAApB,GAAiC,YAAU;AACzC,WAAOA,WAAW,IAAX,CAAP;AACD,GAFD;;AAIAtD,YAAU9N,SAAV,CAAoBqR,YAApB,GAAmC,YAAU;AAC3C,WAAOA,aAAa,IAAb,CAAP;AACD,GAFD;;AAIAvD,YAAU9N,SAAV,CAAoBuU,QAApB,GAA+B,YAAU;AACvC,WAAOvE,kBAAkB,IAAlB,CAAP;AACD,GAFD;;AAIAlC,YAAU9N,SAAV,CAAoB/L,IAApB,GAA2B,YAAU;AACnC,WAAOkb,gBAAgB,IAAhB,CAAP;AACD,GAFD;;AAIArB,YAAU9N,SAAV,CAAoBiS,UAApB,GAAiC,YAAU;AACzC,QAAIjhB,cAAc,EAAlB;AAAA,QAAuBjC,CAAvB;AAAA,QAA0B8D,CAA1B;AACA,QAAI,KAAKL,IAAL,KAAc,OAAlB,EAA2B;AACzB,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKA,IAAL,KAAc,YAAd,IAA8B,KAAKA,IAAL,KAAc,YAAhD,EAA8D;AACnE,UAAI,KAAKxB,WAAL,IAAoB,KAAKA,WAAL,CAAiB9C,MAAjB,IAA2B,CAAnD,EAAsD;AACpD8C,sBAAc,KAAKA,WAAnB;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KANM,MAMA,IAAI,KAAKwB,IAAL,KAAc,SAAd,IAA2B,KAAKA,IAAL,KAAc,iBAA7C,EAAgE;AACrE,UAAI,KAAKxB,WAAL,IAAoB,KAAKA,WAAL,CAAiB9C,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,aAAKa,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5CiC,wBAAcA,YAAY3C,MAAZ,CAAmB,KAAK2C,WAAL,CAAiBjC,CAAjB,CAAnB,CAAd;AACD;AACD,YAAGiC,YAAY9C,MAAZ,GAAqB,CAAxB,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF,OAPD,MAOO;AACL,eAAO,IAAP;AACD;AACF,KAXM,MAWA,IAAI,KAAKsE,IAAL,KAAc,cAAlB,EAAkC;AACvC,UAAI,KAAKxB,WAAL,IAAoB,KAAKA,WAAL,CAAiB9C,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,aAAKa,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,eAAK8D,IAAI,CAAT,EAAYA,IAAI,KAAK7B,WAAL,CAAiBjC,CAAjB,EAAoBb,MAApC,EAA4C2E,GAA5C,EAAiD;AAC/C7B,0BAAcA,YAAY3C,MAAZ,CAAmB,KAAK2C,WAAL,CAAiBjC,CAAjB,EAAoB8D,CAApB,CAAnB,CAAd;AACD;AACF;AACD,YAAG7B,YAAY9C,MAAZ,GAAqB,CAAxB,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF,OATD,MASO;AACL,eAAO,IAAP;AACD;AACF,KAbM,MAaA,IAAG,KAAKsE,IAAL,KAAc,SAAjB,EAA2B;AAChC,UAAIob,YAAY,IAAIE,SAAJ,CAAc,KAAK5c,QAAnB,CAAhB;AACA,aAAO0c,UAAUqE,UAAV,EAAP;AACD;;AAED,WAAO,IAAIiC,OAAJ,CAAY;AACjB1hB,YAAM,SADW;AAEjBxB,mBAAauiB,cAAc,CAACtB,WAAWjhB,WAAX,CAAD,CAAd;AAFI,KAAZ,CAAP;AAID,GA3CD;;AA6CA8c,YAAU9N,SAAV,CAAoBO,MAApB,GAA6B,YAAU;AACrC,QAAIxP,MAAM,EAAV;AACA,SAAK,IAAI4M,GAAT,IAAgB,IAAhB,EAAsB;AACpB,UAAI,KAAKrG,cAAL,CAAoBqG,GAApB,KAA4BkW,gBAAgB3X,OAAhB,CAAwByB,GAAxB,MAAiC,CAAC,CAAlE,EAAqE;AACnE5M,YAAI4M,GAAJ,IAAW,KAAKA,GAAL,CAAX;AACD;AACF;AACD5M,QAAIkD,IAAJ,GAAWkb,gBAAgB,IAAhB,CAAX;AACA,WAAOpe,GAAP;AACD,GATD;;AAWA+c,YAAU9N,SAAV,CAAoB4C,QAApB,GAA+B,UAASgL,SAAT,EAAmB;AAChD,WAAO,IAAIE,SAAJ,CAAcF,SAAd,EAAyB4G,MAAzB,CAAgC,IAAhC,CAAP;AACD,GAFD;;AAIA1G,YAAU9N,SAAV,CAAoBwU,MAApB,GAA6B,UAAS5G,SAAT,EAAoB;AAC/C,QAAI5c,WAAJ,EAAiBjC,CAAjB,EAAoB6T,QAApB;;AAGA,QAAIgL,UAAUpb,IAAV,KAAmB,SAAvB,EAAkC;AAChCob,kBAAYA,UAAU1c,QAAtB;AACD;;AAGD,QAAI0c,UAAUpb,IAAV,KAAmB,OAAvB,EAAgC;AAC9B,UAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AACzB,eAAOihB,YAAY,KAAKziB,WAAjB,EAA8B4c,UAAU5c,WAAxC,CAAP;AAED;AACF;;AAGD,QAAI4c,UAAUpb,IAAV,KAAmB,iBAAvB,EAA0C;AACxC,UAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AACzB,aAAKzD,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjD,cAAI0lB,aAAa,EAAEjiB,MAAM,YAAR,EAAsBxB,aAAa4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAnC,EAAjB;;AAEA,cAAI,KAAKylB,MAAL,CAAYC,UAAZ,CAAJ,EAA6B;AAC3B,mBAAO,IAAP;AACD;AACF;AACF;AACF;;AAGD,QAAI7G,UAAUpb,IAAV,KAAmB,YAAnB,IAAmCob,UAAUpb,IAAV,KAAmB,YAA1D,EAAwE;AACtE,UAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AACzB,aAAKzD,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjD,cAAI,KAAKiC,WAAL,CAAiB9C,MAAjB,KAA4B0f,UAAU5c,WAAV,CAAsBjC,CAAtB,EAAyBb,MAAzD,EAAiE;AAC/D,mBAAO,KAAP;AACD;;AAED,cAAIulB,YAAY,KAAKziB,WAAjB,EAA8B4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAA9B,CAAJ,EAA6D;AAC3D,mBAAO,IAAP;AACD;AACF;AACF;AACF;;AAED,QAAI6e,UAAUpb,IAAV,KAAmB,SAAvB,EAAkC;AAEhC,UAAI,KAAKA,IAAL,KAAc,SAAlB,EAA6B;AAE3B,YAAIob,UAAU5c,WAAV,CAAsB9C,MAAtB,KAAiC,KAAK8C,WAAL,CAAiB9C,MAAtD,EAA8D;AAC5D,eAAKa,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,gBAAI2kB,iBAAiB,KAAK1iB,WAAL,CAAiBjC,CAAjB,CAAjB,EAAsC6e,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAtC,CAAJ,EAAqE;AACnE,qBAAO,IAAP;AACD;AACF;AACF;;AAED,YAAI,KAAKiC,WAAL,CAAiB9C,MAAjB,IAA2BskB,qBAAqB5E,UAAU5c,WAA/B,EAA4C,KAAKA,WAAL,CAAiB,CAAjB,EAAoB,CAApB,CAA5C,CAA/B,EAAoG;AAClG,iBAAO,CAACsiB,sBAAsBC,cAAc,KAAKviB,WAAnB,CAAtB,EAAuDuiB,cAAc3F,UAAU5c,WAAxB,CAAvD,CAAR;AACD,SAFD,MAEO;AACL,iBAAO,KAAP;AACD;AAGF,OAjBD,MAiBO,IAAI,KAAKwB,IAAL,KAAc,OAAlB,EAA2B;AAChC,eAAOggB,qBAAqB5E,UAAU5c,WAA/B,EAA4C,KAAKA,WAAjD,CAAP;AAGD,OAJM,MAIA,IAAI,KAAKwB,IAAL,KAAc,YAAd,IAA8B,KAAKA,IAAL,KAAc,YAAhD,EAA8D;AACnE,YAAI,CAAC,KAAKxB,WAAN,IAAqB,KAAKA,WAAL,CAAiB9C,MAAjB,KAA4B,CAArD,EAAwD;AACtD,iBAAO,KAAP;AACD;;AAED,aAAKa,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,cAAIyjB,qBAAqB5E,UAAU5c,WAA/B,EAA4C,KAAKA,WAAL,CAAiBjC,CAAjB,CAA5C,MAAqE,KAAzE,EAAgF;AAC9E,mBAAO,KAAP;AACD;AACF;;AAED,eAAO,IAAP;AAGD,OAdM,MAcA,IAAI,KAAKyD,IAAL,KAAc,iBAAlB,EAAqC;AAC1C,aAAKzD,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,cAAI2lB,KAAK,IAAIV,UAAJ,CAAe,KAAKhjB,WAAL,CAAiBjC,CAAjB,CAAf,CAAT;;AAEA,cAAI2lB,GAAGF,MAAH,CAAU5G,SAAV,MAAyB,KAA7B,EAAoC;AAClChL;AACA,mBAAO,KAAP;AACD;AACF;;AAED,eAAO,IAAP;AAGD,OAbM,MAaA,IAAI,KAAKpQ,IAAL,KAAc,cAAlB,EAAkC;AACvC,aAAKzD,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,cAAIyiB,KAAK,IAAI1D,SAAJ,CAAc,EAAEtb,MAAM,SAAR,EAAmBxB,aAAa,KAAKA,WAAL,CAAiBjC,CAAjB,CAAhC,EAAd,CAAT;;AAEA,cAAIyiB,GAAGgD,MAAH,CAAU5G,SAAV,MAAyB,KAA7B,EAAoC;AAClC,mBAAO,KAAP;AACD;AACF;;AAED,eAAO,IAAP;AACD;AAEF;;AAED,QAAIA,UAAUpb,IAAV,KAAmB,cAAvB,EAAuC;AAErC,UAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AACzB,YAAIob,UAAU5c,WAAV,CAAsB9C,MAA1B,EAAkC;AAChC,eAAKa,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjDiC,0BAAc4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAd;AACA,gBAAIyjB,qBAAqBxhB,WAArB,EAAkC,KAAKA,WAAvC,KAAuDsiB,sBAAsB,CAAC,KAAKtiB,WAAN,CAAtB,EAA0C4c,UAAU5c,WAApD,MAAqE,KAAhI,EAAuI;AACrI,qBAAO,IAAP;AACD;AACF;AACF;;AAED,eAAO,KAAP;AAED,OAZD,MAYO,IAAI,KAAKwB,IAAL,KAAc,SAAlB,EAA6B;AAClC,aAAKzD,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,cAAI6e,UAAU5c,WAAV,CAAsBjC,CAAtB,EAAyBb,MAAzB,KAAoC,KAAK8C,WAAL,CAAiB9C,MAAzD,EAAiE;AAC/D,iBAAK2E,IAAI,CAAT,EAAYA,IAAI,KAAK7B,WAAL,CAAiB9C,MAAjC,EAAyC2E,GAAzC,EAA8C;AAC5C,kBAAI6gB,iBAAiB,KAAK1iB,WAAL,CAAiB6B,CAAjB,CAAjB,EAAsC+a,UAAU5c,WAAV,CAAsBjC,CAAtB,EAAyB8D,CAAzB,CAAtC,CAAJ,EAAwE;AACtE,uBAAO,IAAP;AACD;AACF;AACF;AACF;;AAED,YAAIygB,sBAAsB,KAAKtiB,WAA3B,EAAwC4c,UAAU5c,WAAlD,MAAmE,KAAvE,EAA8E;AAC5E,cAAI4c,UAAU5c,WAAV,CAAsB9C,MAA1B,EAAkC;AAChC,iBAAKa,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjDiC,4BAAc4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAd;AACA,kBAAIyjB,qBAAqBxhB,WAArB,EAAkC,KAAKA,WAAL,CAAiB,CAAjB,EAAoB,CAApB,CAAlC,MAA8D,KAAlE,EAAyE;AACvE4R,2BAAW,KAAX;AACD,eAFD,MAEO;AACLA,2BAAW,IAAX;AACD;AACF;;AAED,mBAAOA,QAAP;AACD;AACF;AAGF,OA3BM,MA2BA,IAAI,KAAKpQ,IAAL,KAAc,YAAd,IAA8B,KAAKA,IAAL,KAAc,YAAhD,EAA8D;AACnE,aAAKzD,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjD,cAAI6X,IAAI,EAAEpU,MAAM,SAAR,EAAmBxB,aAAa4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAhC,EAAR;;AAEA,cAAI,KAAKylB,MAAL,CAAY5N,CAAZ,CAAJ,EAAoB;AAClB,mBAAO,IAAP;AACD;;AAED,iBAAO,KAAP;AACD;AAGF,OAZM,MAYA,IAAI,KAAKpU,IAAL,KAAc,iBAAlB,EAAqC;AAC1C,aAAKzD,IAAI,CAAT,EAAYA,IAAI,KAAKiC,WAAL,CAAiB9C,MAAjC,EAAyCa,GAAzC,EAA8C;AAC5C,cAAI2L,QAAQ,IAAIsZ,UAAJ,CAAe,KAAKhjB,WAAL,CAAiBjC,CAAjB,CAAf,CAAZ;;AAEA,cAAI2L,MAAM8Z,MAAN,CAAa5G,SAAb,MAA4B,KAAhC,EAAuC;AACrC,mBAAO,KAAP;AACD;AACF;;AAED,eAAO,IAAP;AAGD,OAZM,MAYA,IAAI,KAAKpb,IAAL,KAAc,cAAlB,EAAkC;AACvC,aAAKzD,IAAI,CAAT,EAAYA,IAAI6e,UAAU5c,WAAV,CAAsB9C,MAAtC,EAA8Ca,GAA9C,EAAmD;AACjD,cAAI4lB,QAAQ,EAAEniB,MAAM,SAAR,EAAmBxB,aAAa4c,UAAU5c,WAAV,CAAsBjC,CAAtB,CAAhC,EAAZ;;AAEA,cAAI,KAAKylB,MAAL,CAAYG,KAAZ,MAAuB,KAA3B,EAAkC;AAChC,mBAAO,KAAP;AACD;AACF;;AAED,eAAO,IAAP;AACD;AACF;;AAGD,WAAO,KAAP;AACD,GA5LD;;AA8LA7G,YAAU9N,SAAV,CAAoB3C,UAApB,GAAiC,UAASuQ,SAAT,EAAoB;AAEnD,QAAIA,UAAUpb,IAAV,KAAmB,SAAvB,EAAkC;AAChCob,kBAAYA,UAAU1c,QAAtB;AACD;;AAED,QAAI0V,IAAI,IAAIkH,SAAJ,CAAcF,SAAd,CAAR;AACA,QAAI,KAAK4G,MAAL,CAAY5G,SAAZ,KAA0BhH,EAAE4N,MAAF,CAAS,IAAT,CAA9B,EAA8C;AAC5C,aAAO,IAAP;AACD;;AAGD,QAAI,KAAKhiB,IAAL,KAAc,OAAd,IAAyB,KAAKA,IAAL,KAAc,YAAvC,IACAob,UAAUpb,IAAV,KAAmB,OADnB,IAC8Bob,UAAUpb,IAAV,KAAmB,YADrD,EACmE;AACjE,aAAO8gB,sBAAsB,KAAKtiB,WAA3B,EAAwC4c,UAAU5c,WAAlD,CAAP;AACD,KAHD,MAGO,IAAI,KAAKwB,IAAL,KAAc,SAAlB,EAA6B;AAElC,UAAI+b,QAAQ,IAAIT,SAAJ,CAAc,KAAK5c,QAAnB,CAAZ;AACA,aAAOqd,MAAMlR,UAAN,CAAiBuQ,SAAjB,CAAP;AACD;;AAEDoB,SAAK,UAAU,KAAKxc,IAAf,GAAsB,MAAtB,GAA+Bob,UAAUpb,IAAzC,GAAgD,8CAArD;AACA,WAAO,KAAP;AACD,GAvBD;;AAqCA,WAASshB,KAAT,CAAe7K,KAAf,EAAqB;AACnB,QAAIgG,OAAOjhB,MAAMgS,SAAN,CAAgB+C,KAAhB,CAAsB9C,IAAtB,CAA2BwN,SAA3B,CAAX;;AAEA,QAAGxE,SAASA,MAAMzW,IAAN,KAAe,OAAxB,IAAmCyW,MAAMjY,WAA5C,EAAwD;AACtDoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGA,SAAShb,QAAQgb,KAAR,CAAZ,EAA4B;AACjC,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA,IAAGgG,KAAK/gB,MAAL,IAAe,CAAlB,EAAqB;AAC1B,WAAK8C,WAAL,GAAmBie,IAAnB;AACD,KAFM,MAEA;AACL,YAAM,kDAAN;AACD;;AAED,SAAKzc,IAAL,GAAY,OAAZ;AACD;;AAEDshB,QAAM9T,SAAN,GAAkB,IAAI8N,SAAJ,EAAlB;AACAgG,QAAM9T,SAAN,CAAgB7L,WAAhB,GAA8B2f,KAA9B;;AAWA,WAASC,UAAT,CAAoB9K,KAApB,EAA0B;AACxB,QAAGA,SAASA,MAAMzW,IAAN,KAAe,YAAxB,IAAwCyW,MAAMjY,WAAjD,EAA6D;AAC3DoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA;AACL,YAAM,uDAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,YAAZ;AACD;;AAEDuhB,aAAW/T,SAAX,GAAuB,IAAI8N,SAAJ,EAAvB;AACAiG,aAAW/T,SAAX,CAAqB7L,WAArB,GAAmC4f,UAAnC;AACAA,aAAW/T,SAAX,CAAqB7R,OAArB,GAA+B,UAASsiB,IAAT,EAAc;AAC3C,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAI,KAAKiC,WAAL,CAAiB9C,MAArC,EAA6Ca,GAA7C,EAAkD;AAChD0hB,WAAKxM,KAAL,CAAW,IAAX,EAAiB,CAAC,KAAKjT,WAAL,CAAiBjC,CAAjB,CAAD,EAAsBA,CAAtB,EAAyB,KAAKiC,WAA9B,CAAjB;AACD;AACD,WAAO,IAAP;AACD,GALD;AAMA+iB,aAAW/T,SAAX,CAAqBsI,QAArB,GAAgC,UAAShU,KAAT,EAAe;AAC7C,SAAKtD,WAAL,CAAiBqI,IAAjB,CAAsB/E,KAAtB;AACA,WAAO,IAAP;AACD,GAHD;AAIAyf,aAAW/T,SAAX,CAAqB4U,WAArB,GAAmC,UAAStgB,KAAT,EAAgBmH,KAAhB,EAAsB;AACvD,SAAKzK,WAAL,CAAiB2S,MAAjB,CAAwBlI,KAAxB,EAA+B,CAA/B,EAAkCnH,KAAlC;AACA,WAAO,IAAP;AACD,GAHD;AAIAyf,aAAW/T,SAAX,CAAqB6U,WAArB,GAAmC,UAAS3U,MAAT,EAAgB;AACjD,QAAG,OAAOA,MAAP,KAAkB,QAArB,EAA8B;AAC5B,WAAKlP,WAAL,CAAiB2S,MAAjB,CAAwBzD,MAAxB,EAAgC,CAAhC;AACD,KAFD,MAEO;AACL,WAAKlP,WAAL,CAAiB2S,MAAjB,CAAwB,KAAK3S,WAAL,CAAiBkL,OAAjB,CAAyBgE,MAAzB,CAAxB,EAA0D,CAA1D;AACD;AACD,WAAO,IAAP;AACD,GAPD;AAQA6T,aAAW/T,SAAX,CAAqBzF,GAArB,GAA2B,UAASxL,CAAT,EAAW;AACpC,WAAO,IAAI+kB,KAAJ,CAAU,KAAK9iB,WAAL,CAAiBjC,CAAjB,CAAV,CAAP;AACD,GAFD;;AAaA,WAASilB,UAAT,CAAoB/K,KAApB,EAA0B;AACxB,QAAGA,SAASA,MAAMzW,IAAN,KAAe,YAAxB,IAAwCyW,MAAMjY,WAAjD,EAA6D;AAC3DoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA;AACL,YAAM,uDAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,YAAZ;AACD;;AAEDwhB,aAAWhU,SAAX,GAAuB,IAAI8N,SAAJ,EAAvB;AACAkG,aAAWhU,SAAX,CAAqB7L,WAArB,GAAmC6f,UAAnC;AACAA,aAAWhU,SAAX,CAAqB8U,SAArB,GAAiC,UAASxgB,KAAT,EAAe;AAC9C,SAAKtD,WAAL,CAAiBqI,IAAjB,CAAsB/E,KAAtB;AACA,WAAO,IAAP;AACD,GAHD;AAIA0f,aAAWhU,SAAX,CAAqB+U,YAArB,GAAoC,UAASzgB,KAAT,EAAgBmH,KAAhB,EAAsB;AACxD,SAAKzK,WAAL,CAAiB2S,MAAjB,CAAwBlI,KAAxB,EAA+B,CAA/B,EAAkCnH,KAAlC;AACA,WAAO,IAAP;AACD,GAHD;AAIA0f,aAAWhU,SAAX,CAAqBgV,YAArB,GAAoC,UAAS9U,MAAT,EAAgB;AAClD,SAAKlP,WAAL,CAAiB2S,MAAjB,CAAwBzD,MAAxB,EAAgC,CAAhC;AACA,WAAO,IAAP;AACD,GAHD;;AAcA,WAAS+T,eAAT,CAAyBhL,KAAzB,EAA+B;AAC7B,QAAGA,SAASA,MAAMzW,IAAN,KAAe,iBAAxB,IAA6CyW,MAAMjY,WAAtD,EAAkE;AAChEoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA;AACL,YAAM,4DAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,iBAAZ;AACD;;AAEDyhB,kBAAgBjU,SAAhB,GAA4B,IAAI8N,SAAJ,EAA5B;AACAmG,kBAAgBjU,SAAhB,CAA0B7L,WAA1B,GAAwC8f,eAAxC;AACAA,kBAAgBjU,SAAhB,CAA0B7R,OAA1B,GAAoC,UAASsiB,IAAT,EAAc;AAChD,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAI,KAAKiC,WAAL,CAAiB9C,MAArC,EAA6Ca,GAA7C,EAAkD;AAChD0hB,WAAKxM,KAAL,CAAW,IAAX,EAAiB,CAAC,KAAKjT,WAAL,CAAiBjC,CAAjB,CAAD,EAAsBA,CAAtB,EAAyB,KAAKiC,WAA9B,CAAjB;AACD;AACF,GAJD;AAKAijB,kBAAgBjU,SAAhB,CAA0BzF,GAA1B,GAAgC,UAASxL,CAAT,EAAW;AACzC,WAAO,IAAIilB,UAAJ,CAAe,KAAKhjB,WAAL,CAAiBjC,CAAjB,CAAf,CAAP;AACD,GAFD;;AAaA,WAASmlB,OAAT,CAAiBjL,KAAjB,EAAuB;AACrB,QAAGA,SAASA,MAAMzW,IAAN,KAAe,SAAxB,IAAqCyW,MAAMjY,WAA9C,EAA0D;AACxDoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA;AACL,YAAM,oDAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,SAAZ;AACD;;AAED0hB,UAAQlU,SAAR,GAAoB,IAAI8N,SAAJ,EAApB;AACAoG,UAAQlU,SAAR,CAAkB7L,WAAlB,GAAgC+f,OAAhC;AACAA,UAAQlU,SAAR,CAAkB8U,SAAlB,GAA8B,UAASxgB,KAAT,EAAe;AAC3C,SAAKygB,YAAL,CAAkBzgB,KAAlB,EAAyB,KAAKtD,WAAL,CAAiB,CAAjB,EAAoB9C,MAApB,GAA6B,CAAtD;AACA,WAAO,IAAP;AACD,GAHD;AAIAgmB,UAAQlU,SAAR,CAAkB+U,YAAlB,GAAiC,UAASzgB,KAAT,EAAgBmH,KAAhB,EAAsB;AACrD,SAAKzK,WAAL,CAAiB,CAAjB,EAAoB2S,MAApB,CAA2BlI,KAA3B,EAAkC,CAAlC,EAAqCnH,KAArC;AACA,WAAO,IAAP;AACD,GAHD;AAIA4f,UAAQlU,SAAR,CAAkBgV,YAAlB,GAAiC,UAAS9U,MAAT,EAAgB;AAC/C,SAAKlP,WAAL,CAAiB,CAAjB,EAAoB2S,MAApB,CAA2BzD,MAA3B,EAAmC,CAAnC;AACA,WAAO,IAAP;AACD,GAHD;AAIAgU,UAAQlU,SAAR,CAAkBiV,KAAlB,GAA0B,YAAW;AACnC,SAAKjkB,WAAL,GAAmBuiB,cAAc,KAAKviB,WAAnB,CAAnB;AACD,GAFD;AAGAkjB,UAAQlU,SAAR,CAAkBkV,QAAlB,GAA6B,YAAW;AACtC,WAAO,KAAKlkB,WAAL,CAAiB9C,MAAjB,GAA0B,CAAjC;AACD,GAFD;AAGAgmB,UAAQlU,SAAR,CAAkBmV,KAAlB,GAA0B,YAAW;AACnCA,YAAQ,EAAR;AACA,QAAI,KAAKD,QAAL,EAAJ,EAAqB;AACnB,WAAK,IAAInmB,IAAI,CAAb,EAAgBA,IAAI,KAAKiC,WAAL,CAAiB9C,MAArC,EAA6Ca,GAA7C,EAAkD;AAChDomB,cAAM9b,IAAN,CAAW,IAAI6a,OAAJ,CAAY,CAAC,KAAKljB,WAAL,CAAiBjC,CAAjB,CAAD,CAAZ,CAAX;AACD;AACF;AACD,WAAOomB,KAAP;AACD,GARD;;AAmBA,WAAShB,YAAT,CAAsBlL,KAAtB,EAA4B;AAC1B,QAAGA,SAASA,MAAMzW,IAAN,KAAe,cAAxB,IAA0CyW,MAAMjY,WAAnD,EAA+D;AAC7DoU,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAKjY,WAAL,GAAmBiY,KAAnB;AACD,KAFM,MAEA;AACL,YAAM,yDAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,cAAZ;AACD;;AAED2hB,eAAanU,SAAb,GAAyB,IAAI8N,SAAJ,EAAzB;AACAqG,eAAanU,SAAb,CAAuB7L,WAAvB,GAAqCggB,YAArC;AACAA,eAAanU,SAAb,CAAuB7R,OAAvB,GAAiC,UAASsiB,IAAT,EAAc;AAC7C,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAI,KAAKiC,WAAL,CAAiB9C,MAArC,EAA6Ca,GAA7C,EAAkD;AAChD0hB,WAAKxM,KAAL,CAAW,IAAX,EAAiB,CAAC,KAAKjT,WAAL,CAAiBjC,CAAjB,CAAD,EAAsBA,CAAtB,EAAyB,KAAKiC,WAA9B,CAAjB;AACD;AACF,GAJD;AAKAmjB,eAAanU,SAAb,CAAuBzF,GAAvB,GAA6B,UAASxL,CAAT,EAAW;AACtC,WAAO,IAAImlB,OAAJ,CAAY,KAAKljB,WAAL,CAAiBjC,CAAjB,CAAZ,CAAP;AACD,GAFD;AAGAolB,eAAanU,SAAb,CAAuBiV,KAAvB,GAA+B,YAAU;AACvC,QAAIzB,QAAQ,EAAZ;AACA,SAAKrlB,OAAL,CAAa,UAASqG,OAAT,EAAiB;AAC5Bgf,YAAMna,IAAN,CAAWka,cAAc/e,OAAd,CAAX;AACD,KAFD;AAGA,SAAKxD,WAAL,GAAmBwiB,KAAnB;AACA,WAAO,IAAP;AACD,GAPD;;AAwBA,WAASY,OAAT,CAAiBnL,KAAjB,EAAuB;AACrB,QAAGA,SAASA,MAAMzW,IAAN,KAAe,SAA3B,EAAqC;AACnC4S,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGA,SAASA,MAAMzW,IAAf,IAAuByW,MAAMjY,WAAhC,EAA6C;AAClD,WAAKE,QAAL,GAAgB+X,KAAhB;AACD,KAFM,MAEA;AACL,YAAM,oDAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,SAAZ;AACD;;AAED4hB,UAAQpU,SAAR,GAAoB,IAAI8N,SAAJ,EAApB;AACAsG,UAAQpU,SAAR,CAAkB7L,WAAlB,GAAgCigB,OAAhC;;AAWA,WAASC,iBAAT,CAA2BpL,KAA3B,EAAiC;AAC/B,QAAGA,SAASA,MAAMzW,IAAN,KAAe,mBAAxB,IAA+CyW,MAAM3V,QAAxD,EAAiE;AAC/D8R,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAK3V,QAAL,GAAgB2V,KAAhB;AACD,KAFM,MAEA;AACL,YAAM,8DAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,mBAAZ;AACD;;AAED6hB,oBAAkBrU,SAAlB,GAA8B,IAAI8N,SAAJ,EAA9B;AACAuG,oBAAkBrU,SAAlB,CAA4B7L,WAA5B,GAA0CkgB,iBAA1C;AACAA,oBAAkBrU,SAAlB,CAA4B7R,OAA5B,GAAsC,UAASsiB,IAAT,EAAc;AAClD,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAI,KAAKuE,QAAL,CAAcpF,MAAlC,EAA0Ca,GAA1C,EAA+C;AAC7C0hB,WAAKxM,KAAL,CAAW,IAAX,EAAiB,CAAC,KAAK3Q,QAAL,CAAcvE,CAAd,CAAD,EAAmBA,CAAnB,EAAsB,KAAKuE,QAA3B,CAAjB;AACD;AACF,GAJD;AAKA+gB,oBAAkBrU,SAAlB,CAA4BzF,GAA5B,GAAkC,UAASrG,EAAT,EAAY;AAC5C,QAAIkhB,KAAJ;AACA,SAAKjnB,OAAL,CAAa,UAAS6F,OAAT,EAAiB;AAC5B,UAAGA,QAAQE,EAAR,KAAeA,EAAlB,EAAqB;AACnBkhB,gBAAQphB,OAAR;AACD;AACF,KAJD;AAKA,WAAO,IAAIogB,OAAJ,CAAYgB,KAAZ,CAAP;AACD,GARD;;AAmBA,WAASd,kBAAT,CAA4BrL,KAA5B,EAAkC;AAChC,QAAGA,SAASA,MAAMzW,IAAN,KAAe,oBAAxB,IAAgDyW,MAAM1V,UAAzD,EAAoE;AAClE6R,aAAO,IAAP,EAAa6D,KAAb;AACD,KAFD,MAEO,IAAGhb,QAAQgb,KAAR,CAAH,EAAmB;AACxB,WAAK1V,UAAL,GAAkB0V,KAAlB;AACD,KAFM,MAEA,IAAGA,MAAMjY,WAAN,IAAqBiY,MAAMzW,IAA9B,EAAmC;AACxC,WAAKA,IAAL,GAAY,oBAAZ;AACA,WAAKe,UAAL,GAAkB,CAAC0V,KAAD,CAAlB;AACD,KAHM,MAGA;AACL,YAAM,+DAAN;AACD;;AAED,SAAKzW,IAAL,GAAY,oBAAZ;AACD;;AAED8hB,qBAAmBtU,SAAnB,GAA+B,IAAI8N,SAAJ,EAA/B;AACAwG,qBAAmBtU,SAAnB,CAA6B7L,WAA7B,GAA2CmgB,kBAA3C;AACAA,qBAAmBtU,SAAnB,CAA6B7R,OAA7B,GAAuC,UAASsiB,IAAT,EAAc;AACnD,SAAK,IAAI1hB,IAAI,CAAb,EAAgBA,IAAI,KAAKwE,UAAL,CAAgBrF,MAApC,EAA4Ca,GAA5C,EAAiD;AAC/C0hB,WAAKxM,KAAL,CAAW,IAAX,EAAiB,CAAC,KAAK1Q,UAAL,CAAgBxE,CAAhB,CAAD,EAAqBA,CAArB,EAAwB,KAAKwE,UAA7B,CAAjB;AACD;AACF,GAJD;AAKA+gB,qBAAmBtU,SAAnB,CAA6BzF,GAA7B,GAAmC,UAASxL,CAAT,EAAW;AAC5C,WAAO,IAAI+e,SAAJ,CAAc,KAAKva,UAAL,CAAgBxE,CAAhB,CAAd,CAAP;AACD,GAFD;;AAIA,WAASsmB,YAAT,CAAsBC,MAAtB,EAA8BzhB,MAA9B,EAAsC0hB,WAAtC,EAAkD;AAChD,QAAIC,mBAAmB3E,mBAAmByE,MAAnB,CAAvB;AACA,QAAIG,QAAQF,eAAe,EAA3B;AACA,QAAI/gB,UAAU;AACZhC,YAAM,SADM;AAEZxB,mBAAa,CAAC,EAAD;AAFD,KAAd;AAIA,SAAI,IAAIjC,IAAE,CAAV,EAAaA,KAAG0mB,KAAhB,EAAuB1mB,GAAvB,EAA4B;AAC1B,UAAIqC,UAAUrC,KAAK,MAAI0mB,KAAT,IAAkB5mB,KAAKmB,EAAvB,GAA4B,GAA1C;AACAwE,cAAQxD,WAAR,CAAoB,CAApB,EAAuBqI,IAAvB,CAA4B,CAACmc,iBAAiB,CAAjB,IAAsB3hB,SAAShF,KAAK8B,GAAL,CAASS,OAAT,CAAhC,EAAmDokB,iBAAiB,CAAjB,IAAsB3hB,SAAShF,KAAK6B,GAAL,CAASU,OAAT,CAAlF,CAA5B;AACD;AACDoD,YAAQxD,WAAR,GAAsBuiB,cAAc/e,QAAQxD,WAAtB,CAAtB;;AAEA,WAAOqgB,aAAa7c,OAAb,CAAP;AACD;;AAED,WAASkhB,MAAT,CAAiBJ,MAAjB,EAAyBzhB,MAAzB,EAAiC0hB,WAAjC,EAA8C;AAC5C,QAAIE,QAAQF,eAAe,EAA3B;AACA,QAAIlF,MAAMxc,UAAU,GAApB;;AAEA,QAAG,CAACyhB,MAAD,IAAWA,OAAOpnB,MAAP,GAAgB,CAA3B,IAAgC,CAACmiB,GAAjC,IAAwC,CAACoF,KAA5C,EAAmD;AACjD,YAAM,IAAIxmB,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAEDmW,WAAO,IAAP,EAAa,IAAIgP,OAAJ,CAAY;AACvB5hB,YAAM,SADiB;AAEvBtB,gBAAUmkB,aAAaC,MAAb,EAAqBjF,GAArB,EAA0BoF,KAA1B,CAFa;AAGvBljB,kBAAY;AACVsB,gBAAQwc,GADE;AAEViF,gBAAQA,MAFE;AAGVG,eAAOA;AAHG;AAHW,KAAZ,CAAb;AASD;;AAEDC,SAAO1V,SAAP,GAAmB,IAAI8N,SAAJ,EAAnB;AACA4H,SAAO1V,SAAP,CAAiB7L,WAAjB,GAA+BuhB,MAA/B;AACAA,SAAO1V,SAAP,CAAiB2V,WAAjB,GAA+B,YAAU;AACvC,SAAKzkB,QAAL,GAAgBmkB,aAAa,KAAK9iB,UAAL,CAAgB+iB,MAA7B,EAAqC,KAAK/iB,UAAL,CAAgBsB,MAArD,EAA6D,KAAKtB,UAAL,CAAgBkjB,KAA7E,CAAhB;AACA,WAAO,IAAP;AACD,GAHD;AAIAC,SAAO1V,SAAP,CAAiBsV,MAAjB,GAA0B,UAAStkB,WAAT,EAAqB;AAC7C,QAAGA,WAAH,EAAe;AACb,WAAKuB,UAAL,CAAgB+iB,MAAhB,GAAyBtkB,WAAzB;AACA,WAAK2kB,WAAL;AACD;AACD,WAAO,KAAKpjB,UAAL,CAAgB+iB,MAAvB;AACD,GAND;AAOAI,SAAO1V,SAAP,CAAiBnM,MAAjB,GAA0B,UAASA,MAAT,EAAgB;AACxC,QAAGA,MAAH,EAAU;AACR,WAAKtB,UAAL,CAAgBsB,MAAhB,GAAyBA,MAAzB;AACA,WAAK8hB,WAAL;AACD;AACD,WAAO,KAAKpjB,UAAL,CAAgBsB,MAAvB;AACD,GAND;AAOA6hB,SAAO1V,SAAP,CAAiByV,KAAjB,GAAyB,UAASA,KAAT,EAAe;AACtC,QAAGA,KAAH,EAAS;AACP,WAAKljB,UAAL,CAAgBkjB,KAAhB,GAAwBA,KAAxB;AACA,WAAKE,WAAL;AACD;AACD,WAAO,KAAKpjB,UAAL,CAAgBkjB,KAAvB;AACD,GAND;;AAQAC,SAAO1V,SAAP,CAAiBO,MAAjB,GAA0B,YAAW;AACnC,QAAIqV,SAAS9H,UAAU9N,SAAV,CAAoBO,MAApB,CAA2BN,IAA3B,CAAgC,IAAhC,CAAb;AACA,WAAO2V,MAAP;AACD,GAHD;;AAKA5e,UAAQ8W,SAAR,GAAoBA,SAApB;AACA9W,UAAQ8c,KAAR,GAAgBA,KAAhB;AACA9c,UAAQ+c,UAAR,GAAqBA,UAArB;AACA/c,UAAQgd,UAAR,GAAqBA,UAArB;AACAhd,UAAQid,eAAR,GAA0BA,eAA1B;AACAjd,UAAQkd,OAAR,GAAkBA,OAAlB;AACAld,UAAQmd,YAAR,GAAuBA,YAAvB;AACAnd,UAAQod,OAAR,GAAkBA,OAAlB;AACApd,UAAQqd,iBAAR,GAA4BA,iBAA5B;AACArd,UAAQsd,kBAAR,GAA6BA,kBAA7B;AACAtd,UAAQ0e,MAAR,GAAiBA,MAAjB;;AAEA1e,UAAQoa,UAAR,GAAqBA,UAArB;AACApa,UAAQqa,YAAR,GAAuBA,YAAvB;;AAEAra,UAAQ6e,KAAR,GAAgB,EAAhB;AACA7e,UAAQ6e,KAAR,CAAchF,kBAAd,GAAmCA,kBAAnC;AACA7Z,UAAQ6e,KAAR,CAAcnF,oBAAd,GAAqCA,oBAArC;AACA1Z,UAAQ6e,KAAR,CAAc9E,cAAd,GAA+BA,cAA/B;AACA/Z,UAAQ6e,KAAR,CAAczE,UAAd,GAA2BA,UAA3B;AACApa,UAAQ6e,KAAR,CAAcxE,YAAd,GAA6BA,YAA7B;AACAra,UAAQ6e,KAAR,CAAcR,YAAd,GAA6BA,YAA7B;;AAEAre,UAAQ6e,KAAR,CAAc1G,eAAd,GAAgCA,eAAhC;AACAnY,UAAQ6e,KAAR,CAAc7F,iBAAd,GAAkCA,iBAAlC;;AAEAhZ,UAAQ6e,KAAR,CAActD,uBAAd,GAAwCA,uBAAxC;AACAvb,UAAQ6e,KAAR,CAAcrD,oBAAd,GAAqCA,oBAArC;AACAxb,UAAQ6e,KAAR,CAAcvC,qBAAd,GAAsCA,qBAAtC;AACAtc,UAAQ6e,KAAR,CAActD,uBAAd,GAAwCA,uBAAxC;AACAvb,UAAQ6e,KAAR,CAAcnC,gBAAd,GAAiCA,gBAAjC;AACA1c,UAAQ6e,KAAR,CAAc5D,UAAd,GAA2BA,UAA3B;AACAjb,UAAQ6e,KAAR,CAAc1D,QAAd,GAAyBA,QAAzB;;AAEAnb,UAAQ6X,WAAR,GAAsBA,WAAtB;AACA7X,UAAQ8X,aAAR,GAAwBA,aAAxB;;AAEA,SAAO9X,OAAP;AACD,CAz4CA,CAAD,C","file":"GeomTools.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"GeomTools\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GeomTools\"] = factory();\n\telse\n\t\troot[\"GeomTools\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f55464791a9ddf8b3ba5","/**\n * Created by FDD on 2017/8/4.\n */\nimport factors from '../constants'\nimport { feature, point } from './geometry'\n/**\n * 递归（注意防止内存溢出，多层数据）\n * @param data\n * @returns {Array}\n */\nexport const corverRecurrence = (data) => {\n  let _data = []\n  function recurrence (items) {\n    if (items && Array.isArray(items) && items.length > 0) {\n      items.forEach(function (item) {\n        if (item && Array.isArray(item) && item.length > 0) {\n          _data = _data.concat(item)\n        } else {\n          recurrence(item)\n        }\n      })\n    }\n  }\n  recurrence(data)\n  return _data\n}\n\n/**\n * 无序数组查找最近成员\n * @param arr\n * @param num\n * @param params\n * @returns {null}\n */\nexport const closeDisorderArray = (arr, num, params) => {\n  try {\n    if (arr && Array.isArray(arr) && arr.length > 0 && typeof num === 'number') {\n      let [ret, res_] = ['', null]\n      if (Array.isArray(arr[0]) && typeof params === 'number') {\n        ret = arr[0][params]\n        let distance = Math.abs(ret - num)\n        for (let i = 1; i < arr.length; i++) {\n          let newDistance = Math.abs(arr[i][params] - num)\n          if (newDistance < distance) {\n            distance = newDistance\n            ret = arr[i][params]\n            res_ = arr[i]\n          }\n        }\n      } else if (typeof arr[0] === 'object' && typeof params === 'string') {\n        ret = arr[0][params]\n        let distance = Math.abs(ret - num)\n        for (let i = 1; i < arr.length; i++) {\n          let newDistance = Math.abs(arr[i][params] - num)\n          if (newDistance < distance) {\n            distance = newDistance\n            ret = arr[i][params]\n            res_ = arr[i]\n          }\n        }\n      } else if (typeof arr[0] === 'number') {\n        ret = arr[0]\n        let distance = Math.abs(ret - num)\n        for (let i = 1; i < arr.length; i++) {\n          let newDistance = Math.abs(arr[i] - num)\n          if (newDistance < distance) {\n            distance = newDistance\n            ret = arr[i]\n            res_ = arr[i]\n          }\n        }\n      }\n      return res_\n    } else {\n      throw Error('传入数据有误！')\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n/**\n * 有序列表查\n * @param arr\n * @param num\n * @param params\n * @returns {*}\n */\nexport const closeOrderArray = (arr, num, params) => {\n  try {\n    let [left, right] = [0, (arr.length - 1)]\n    while (left <= right) {\n      let middle = Math.floor((right + left) / 2)\n      if (right - left <= 1) {\n        break\n      }\n      if (Array.isArray(arr[middle]) && typeof params === 'number') {\n        if (arr[middle][params] === num) {\n          return middle\n        } else if (arr[middle][params] > num) {\n          right = middle\n        } else {\n          left = middle\n        }\n        let leftValue = arr[left][params]\n        let rightValue = arr[right][params]\n        return rightValue - num > num - leftValue ? leftValue : rightValue\n      } else if (typeof arr[middle] === 'object' && typeof params === 'string') {\n        if (arr[middle][params] === num) {\n          return middle\n        } else if (arr[middle][params] > num) {\n          right = middle\n        } else {\n          left = middle\n        }\n        let leftValue = arr[left][params]\n        let rightValue = arr[right][params]\n        return rightValue - num > num - leftValue ? leftValue : rightValue\n      } else if (typeof arr[middle] === 'number') {\n        if (arr[middle] === num) {\n          return middle\n        } else if (arr[middle] > num) {\n          right = middle\n        } else {\n          left = middle\n        }\n        let leftValue = arr[left]\n        let rightValue = arr[right]\n        return rightValue - num > num - leftValue ? leftValue : rightValue\n      }\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n/**\n * 计算距离\n * @param from\n * @param to\n * @param units\n * @returns {number}\n */\nexport const distance = (from, to, units) => {\n  var degrees2radians = Math.PI / 180\n  var coordinates1 = getCoord(from)\n  var coordinates2 = getCoord(to)\n  var dLat = degrees2radians * (coordinates2[1] - coordinates1[1])\n  var dLon = degrees2radians * (coordinates2[0] - coordinates1[0])\n  var lat1 = degrees2radians * coordinates1[1]\n  var lat2 = degrees2radians * coordinates2[1]\n  var a = Math.pow(Math.sin(dLat / 2), 2) +\n    Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2)\n  return radiansToDistance(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units)\n}\n\n/**\n * 获取坐标\n * @param obj\n */\nexport const getCoord = (obj) => {\n  if (!obj) throw new Error('obj is required')\n  let coordinates = getCoords(obj)\n  if (coordinates.length > 1 &&\n    typeof coordinates[0] === 'number' &&\n    typeof coordinates[1] === 'number') {\n    return coordinates\n  } else {\n    throw new Error('Coordinate is not a valid Point')\n  }\n}\n\n/**\n * 获取坐标列表\n * @param obj\n * @returns {*}\n */\nexport const getCoords = (obj) => {\n  if (!obj) throw new Error('obj is required')\n  let coordinates\n  // Array of numbers\n  if (obj.length) {\n    coordinates = obj\n    // Geometry Object\n  } else if (obj.coordinates) {\n    coordinates = obj.coordinates\n    // Feature\n  } else if (obj.geometry && obj.geometry.coordinates) {\n    coordinates = obj.geometry.coordinates\n  }\n  // Checks if coordinates contains a number\n  if (coordinates) {\n    containsNumber(coordinates)\n    return coordinates\n  }\n  throw new Error('No valid coordinates')\n}\n\n/**\n * contains\n * @param coordinates\n * @returns {boolean}\n */\nexport const containsNumber = (coordinates) => {\n  if (coordinates.length > 1 &&\n    typeof coordinates[0] === 'number' &&\n    typeof coordinates[1] === 'number') {\n    return true\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0])\n  }\n  throw new Error('coordinates must only contain numbers')\n}\n\n/**\n * 弧度转距离\n * @param radians\n * @param units\n * @returns {number}\n */\nexport const radiansToDistance = (radians, units) => {\n  if (radians === undefined || radians === null) throw new Error('参数错误')\n  let factor = factors[units || 'kilometers']\n  if (!factor) throw new Error('单位错误！')\n  return radians * factor\n}\n\n/**\n * destination\n * @param origin\n * @param distance\n * @param bearing\n * @param units\n * @returns {*}\n */\nexport const destination = (origin, distance, bearing, units) => {\n  let [degrees2radians, radians2degrees] = [(Math.PI / 180), (180 / Math.PI)]\n  let coordinates1 = getCoord(origin)\n  let [longitude1, latitude1] = [(degrees2radians * coordinates1[0]),\n    (degrees2radians * coordinates1[1])]\n  let bearingRad = degrees2radians * bearing\n  let radians = distanceToRadians(distance, units)\n  let latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n    Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad))\n  let longitude2 = longitude1 +\n    Math.atan2(Math.sin(bearingRad) *\n      Math.sin(radians) * Math.cos(latitude1),\n      Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2))\n  return point([radians2degrees * longitude2, radians2degrees * latitude2])\n}\n\n/**\n * 距离转弧度\n * @param distance\n * @param units\n * @returns {number}\n */\nexport const distanceToRadians = (distance, units) => {\n  if (distance === undefined || distance === null) {\n    throw new Error('距离必须传入！')\n  }\n  let factor = factors[units || 'kilometers']\n  if (!factor) {\n    throw new Error('单位错误！')\n  }\n  return distance / factor\n}\n\n/**\n * flattenEach<@turf/meta>\n * @param geojson\n * @param callback\n */\nexport const flattenEach = (geojson, callback) => {\n  geomEach(geojson, function (geometry, featureIndex, properties) {\n    // Callback for single geometry\n    var type = (geometry === null) ? null : geometry.type\n    switch (type) {\n      case null:\n      case 'Point':\n      case 'LineString':\n      case 'Polygon':\n        callback(feature(geometry, properties), featureIndex, 0)\n        return\n    }\n    var geomType\n    // Callback for multi-geometry\n    switch (type) {\n      case 'MultiPoint':\n        geomType = 'Point'\n        break\n      case 'MultiLineString':\n        geomType = 'LineString'\n        break\n      case 'MultiPolygon':\n        geomType = 'Polygon'\n        break\n    }\n    geometry.coordinates.forEach(function (coordinate, featureSubIndex) {\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      }\n      callback(feature(geom, properties), featureIndex, featureSubIndex)\n    })\n  })\n}\n\n/**\n * geomEach<@turf/meta>\n * @param geojson\n * @param callback\n */\nexport const geomEach = (geojson, callback) => {\n  /* eslint one-var: 0 */\n  var i, j, g, geometry, stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    geometryProperties,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === 'FeatureCollection',\n    isFeature = geojson.type === 'Feature',\n    stop = isFeatureCollection ? geojson.features.length : 1\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry : (isFeature ? geojson.geometry : geojson))\n    geometryProperties = (isFeatureCollection ? geojson.features[i].properties : (isFeature ? geojson.properties : {}))\n    isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection\n      // Handle null Geometry\n      if (geometry === null) {\n        callback(null, featureIndex, geometryProperties)\n        featureIndex++\n        continue\n      }\n      switch (geometry.type) {\n        case 'Point':\n        case 'LineString':\n        case 'MultiPoint':\n        case 'Polygon':\n        case 'MultiLineString':\n        case 'MultiPolygon': {\n          callback(geometry, featureIndex, geometryProperties)\n          featureIndex++\n          break\n        }\n        case 'GeometryCollection': {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            callback(geometry.geometries[j], featureIndex, geometryProperties)\n            featureIndex++\n          }\n          break\n        }\n        default:\n          throw new Error('Unknown Geometry Type')\n      }\n    }\n  }\n}\n\n/**\n * 转换为弧度\n * @param angleInDegrees\n * @returns {number}\n */\nexport const toRadians = (angleInDegrees) => {\n  return angleInDegrees * Math.PI / 180\n}\n\n/**\n * 获取两个坐标之间距离\n * @param c1\n * @param c2\n * @param radius\n * @returns {number}\n * @private\n */\nexport const getDistance_ = (c1, c2, radius) => {\n  let lat1 = toRadians(c1[1])\n  let lat2 = toRadians(c2[1])\n  let deltaLatBy2 = (lat2 - lat1) / 2\n  let deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2\n  let a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n    Math.cos(lat1) * Math.cos(lat2)\n  return (2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","export const feature = (geometry, properties, bbox, id) => {\n  if (geometry === undefined) throw new Error('geometry is required')\n  if (properties && properties.constructor !== Object) throw new Error('properties must be an Object')\n  var feat = {\n    type: 'Feature',\n    properties: properties || {},\n    geometry: geometry\n  }\n  if (bbox) {\n    if (bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers')\n    feat.bbox = bbox\n  }\n  if (id) feat.id = id\n  return feat\n}\n\nexport const geometry = (type, coordinates, bbox) => {\n  // Validation\n  if (!type) throw new Error('type is required')\n  if (!coordinates) throw new Error('coordinates is required')\n  if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array')\n  var geom\n  switch (type) {\n    case 'Point':\n      geom = point(coordinates).geometry\n      break\n    case 'LineString':\n      geom = lineString(coordinates).geometry\n      break\n    case 'Polygon':\n      geom = polygon(coordinates).geometry\n      break\n    case 'MultiPoint':\n      geom = multiPoint(coordinates).geometry\n      break\n    case 'MultiLineString':\n      geom = multiLineString(coordinates).geometry\n      break\n    case 'MultiPolygon':\n      geom = multiPolygon(coordinates).geometry\n      break\n    default:\n      throw new Error(type + ' is invalid')\n  }\n  if (bbox) {\n    if (bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers')\n    geom.bbox = bbox\n  }\n  return geom\n}\n\nexport const point = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  if (coordinates.length === undefined) throw new Error('Coordinates must be an array')\n  if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long')\n  if (typeof coordinates[0] !== 'number' || typeof coordinates[1] !== 'number') throw new Error('Coordinates must contain numbers')\n  return feature({\n    type: 'Point',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const polygon = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  for (var i = 0; i < coordinates.length; i++) {\n    var ring = coordinates[i]\n    if (ring.length < 4) {\n      throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.')\n    }\n    for (var j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error('First and last Position are not equivalent.')\n      }\n    }\n  }\n  return feature({\n    type: 'Polygon',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const lineString = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  if (coordinates.length < 2) throw new Error('Coordinates must be an array of two or more positions')\n  return feature({\n    type: 'LineString',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const featureCollection = (features, bbox) => {\n  if (!features) throw new Error('No features passed')\n  if (!Array.isArray(features)) throw new Error('features must be an Array')\n  var fc = {\n    type: 'FeatureCollection',\n    features: features\n  }\n  if (bbox) fc.bbox = bbox\n  return fc\n}\n\nexport const multiLineString = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  return feature({\n    type: 'MultiLineString',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const multiPoint = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  return feature({\n    type: 'MultiPoint',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const multiPolygon = (coordinates, properties, bbox, id) => {\n  if (!coordinates) throw new Error('No coordinates passed')\n  return feature({\n    type: 'MultiPolygon',\n    coordinates: coordinates\n  }, properties, bbox, id)\n}\n\nexport const geometryCollection = (geometries, properties, bbox, id) => {\n  if (!geometries) throw new Error('geometries is required')\n  if (!Array.isArray(geometries)) throw new Error('geometries must be an Array')\n  return feature({\n    type: 'GeometryCollection',\n    geometries: geometries\n  }, properties, bbox, id)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geometry.js","/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, bbox, id) {\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n\n    var feat = {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: geometry\n    };\n    if (bbox) {\n        if (bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers');\n        feat.bbox = bbox;\n    }\n    if (id) feat.id = id;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, bbox) {\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) {\n        if (bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers');\n        geom.bbox = bbox;\n    }\n    return geom;\n}\n\n/**\n * Takes coordinates and properties (optional) and returns a new {@link Point} feature.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length === undefined) throw new Error('Coordinates must be an array');\n    if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n    if (typeof coordinates[0] !== 'number' || typeof coordinates[1] !== 'number') throw new Error('Coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Takes an array of LinearRings and optionally an {@link Object} with properties and returns a {@link Polygon} feature.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<Polygon>} a Polygon feature\n * @throws {Error} throw an error if a LinearRing of the polygon has too few positions\n * or if a LinearRing of the Polygon does not have matching Positions at the beginning & end.\n * @example\n * var polygon = turf.polygon([[\n *   [-2.275543, 53.464547],\n *   [-2.275543, 53.489271],\n *   [-2.215118, 53.489271],\n *   [-2.215118, 53.464547],\n *   [-2.275543, 53.464547]\n * ]], { name: 'poly1', population: 400});\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Creates a {@link LineString} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<LineString>} a LineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var linestring1 = turf.lineString([\n *   [-21.964416, 64.148203],\n *   [-21.956176, 64.141316],\n *   [-21.93901, 64.135924],\n *   [-21.927337, 64.136673]\n * ]);\n * var linestring2 = turf.lineString([\n *   [-21.929054, 64.127985],\n *   [-21.912918, 64.134726],\n *   [-21.916007, 64.141016],\n *   [-21.930084, 64.14446]\n * ], {name: 'line 1', distance: 145});\n *\n * //=linestring1\n *\n * //=linestring2\n */\nfunction lineString(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length < 2) throw new Error('Coordinates must be an array of two or more positions');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var features = [\n *  turf.point([-75.343, 39.984], {name: 'Location A'}),\n *  turf.point([-75.833, 39.284], {name: 'Location B'}),\n *  turf.point([-75.534, 39.123], {name: 'Location C'})\n * ];\n *\n * var collection = turf.featureCollection(features);\n *\n * //=collection\n */\nfunction featureCollection(features, bbox) {\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n\n    var fc = {\n        type: 'FeatureCollection',\n        features: features\n    };\n    if (bbox) fc.bbox = bbox;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Array<number>} [bbox] BBox [west, south, east, north]\n * @param {string|number} [id] Identifier\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, bbox, id) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, bbox, id);\n}\n\n// https://en.wikipedia.org/wiki/Great-circle_distance#Radius_for_spherical_Earth\nvar factors = {\n    miles: 3960,\n    nauticalmiles: 3441.145,\n    degrees: 57.2957795,\n    radians: 1,\n    inches: 250905600,\n    yards: 6969600,\n    meters: 6373000,\n    metres: 6373000,\n    centimeters: 6.373e+8,\n    centimetres: 6.373e+8,\n    kilometers: 6373,\n    kilometres: 6373,\n    feet: 20908792.65\n};\n\nvar areaFactors = {\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    centimetres: 10000,\n    millimeter: 1000000,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToDistance\n * @param {number} radians in radians across the sphere\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToDistance(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error('units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction distanceToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error('units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name distanceToDegrees\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction distanceToDegrees(distance, units) {\n    return radians2degrees(distanceToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAngle\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAngle(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radians2degrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radians2degrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degrees2radians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degrees2radians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n\n/**\n * Converts a distance to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} distance to be converted\n * @param {string} originalUnit of the distance\n * @param {string} [finalUnit=kilometers] returned unit\n * @returns {number} the converted distance\n */\nfunction convertDistance(distance, originalUnit, finalUnit) {\n    if (distance === null || distance === undefined) throw new Error('distance is required');\n    if (!(distance >= 0)) throw new Error('distance must be a positive number');\n\n    var convertedDistance = radiansToDistance(distanceToRadians(distance, originalUnit), finalUnit || 'kilometers');\n    return convertedDistance;\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeter, acre, mile, yard, foot, inch\n * @param {number} area to be converted\n * @param {string} [originalUnit=meters] of the distance\n * @param {string} [finalUnit=kilometers] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\nmodule.exports = {\n    feature: feature,\n    geometry: geometry,\n    featureCollection: featureCollection,\n    geometryCollection: geometryCollection,\n    point: point,\n    multiPoint: multiPoint,\n    lineString: lineString,\n    multiLineString: multiLineString,\n    polygon: polygon,\n    multiPolygon: multiPolygon,\n    radiansToDistance: radiansToDistance,\n    distanceToRadians: distanceToRadians,\n    distanceToDegrees: distanceToDegrees,\n    radians2degrees: radians2degrees,\n    degrees2radians: degrees2radians,\n    bearingToAngle: bearingToAngle,\n    convertDistance: convertDistance,\n    convertArea: convertArea,\n    round: round\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/helpers/index.js","/**\n * Created by FDD on 2017/8/4.\n * @desc 控件数据转换\n */\nimport terraformerWktParser from 'terraformer-wkt-parser'\nimport * as utils from '../utils/utils'\nclass GeomParser {\n  /**\n   * wkt转换为geojson\n   * @param geometry\n   * @returns {*}\n   */\n  wkt2GeoJSON (geometry) {\n    try {\n      return terraformerWktParser.parse(geometry)\n    } catch (e) {\n      console.info(e)\n    }\n  }\n\n  /**\n   * wkt 转换空间数据数组（保持结构不变）\n   * @param geometry\n   * @returns {*}\n   */\n  wkt2ArraySource (geometry) {\n    try {\n      let geom = terraformerWktParser.parse(geometry)\n      if (geom.hasOwnProperty('coordinates') && geom['coordinates'] && Array.isArray(geom['coordinates'])) {\n        return geom['coordinates']\n      } else {\n        throw Error('转换出错！')\n      }\n    } catch (error) {\n      console.info(error)\n    }\n  }\n\n  /**\n   * 合并后的多点多线多面数据\n   * @param geometry\n   */\n  wkt2ArrayFix (geometry) {\n    try {\n      let coordinates = this.wkt2ArraySource(geometry)\n      return (utils.corverRecurrence(coordinates))\n    } catch (error) {\n      console.info(error)\n    }\n  }\n\n  /**\n   * GeoJSON转换为WKT\n   * @param geometry\n   * @returns {*}\n   */\n  geoJSON2Wkt (geometry) {\n    try {\n      return terraformerWktParser.convert(geometry)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  /**\n   * 转换空间数据数组（保持结构不变）\n   * @param geometry\n   * @returns {*}\n   */\n  geoJSON2ArraySource (geometry) {\n    try {\n      if (geometry.hasOwnProperty('coordinates') && geometry['coordinates'] && Array.isArray(geometry['coordinates'])) {\n        return geometry['coordinates']\n      } else {\n        throw Error('转换出错！')\n      }\n    } catch (e) {\n      console.info(e)\n    }\n  }\n\n  /**\n   * 合并后的多点多线多面数据\n   * @param geometry\n   */\n  geoJSON2ArrayFix (geometry) {\n    try {\n      let coordinates = this.geoJSON2ArraySource(geometry)\n      return (utils.corverRecurrence(coordinates))\n    } catch (error) {\n      console.info(error)\n    }\n  }\n}\n\nexport default GeomParser\n\n\n\n// WEBPACK FOOTER //\n// ./src/geomUtils/GeomParser.js","/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(obj) {\n    if (!obj) throw new Error('obj is required');\n\n    var coordinates = getCoords(obj);\n\n    // getCoord() must contain at least two numbers (Point)\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\n *\n * @name getCoords\n * @param {Array<number>|Geometry|Feature} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coord = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates;\n\n    // Array of numbers\n    if (obj.length) {\n        coordinates = obj;\n\n    // Geometry Object\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n\n    // Feature\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    // Checks if coordinates contains a number\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {string} GeoJSON Geometry Type\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //=\"Point\"\n */\nfunction getGeomType(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    var geom = getGeom(geojson);\n    if (geom) return geom.type;\n}\n\nmodule.exports = {\n    geojsonType: geojsonType,\n    collectionOf: collectionOf,\n    featureOf: featureOf,\n    getCoord: getCoord,\n    getCoords: getCoords,\n    containsNumber: containsNumber,\n    getGeom: getGeom,\n    getGeomType: getGeomType\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/invariant/index.js","/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0.\n * @param {number} featureIndex The current index of the feature being processed.\n * @param {number} featureSubIndex The current subIndex of the feature being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, featureSubIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, featureSubIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=featureSubIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var featureIndex, geometryIndex, j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (featureIndex = 0; featureIndex < stop; featureIndex++) {\n        var featureSubIndex = 0;\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n        (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (geometryIndex = 0; geometryIndex < stopG; geometryIndex++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[geometryIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                callback(coords, coordIndex, featureIndex, featureSubIndex);\n                coordIndex++;\n                featureSubIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], coordIndex, featureIndex, featureSubIndex);\n                    coordIndex++;\n                    featureSubIndex++;\n                }\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], coordIndex, featureIndex, featureSubIndex);\n                        coordIndex++;\n                        featureSubIndex++;\n                    }\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length; k++)\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], coordIndex, featureIndex, featureSubIndex);\n                            coordIndex++;\n                            featureSubIndex++;\n                        }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    coordEach(geometry.geometries[j], callback, excludeWrapCoord);\n                break;\n            default: throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the feature being processed.\n * @param {number} featureSubIndex The current subIndex of the feature being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, featureSubIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=featureSubIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, featureSubIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, featureSubIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current properties being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current properties being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current feature being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i], i);\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current geometry being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} currentProperties The current feature properties being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, currentProperties)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, currentProperties) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=currentProperties\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        geometryProperties,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n        (isFeature ? geojson.geometry : geojson));\n        geometryProperties = (isFeatureCollection ? geojson.features[i].properties :\n                              (isFeature ? geojson.properties : {}));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                callback(null, featureIndex, geometryProperties);\n                featureIndex++;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                callback(geometry, featureIndex, geometryProperties);\n                featureIndex++;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    callback(geometry.geometries[j], featureIndex, geometryProperties);\n                    featureIndex++;\n                }\n                break;\n            }\n            default: throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {Object} currentProperties The current feature properties being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, currentProperties)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, currentProperties) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=currentProperties\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, currentIndex, currentProperties) {\n        if (currentIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, currentIndex, currentProperties);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureSubIndex The subindex of the current element being processed in the\n * array. Starts at index 0 and increases if the flattened feature was a multi-geometry.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, featureSubIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, featureSubIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=featureSubIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            callback(feature(geometry, properties), featureIndex, 0);\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        geometry.coordinates.forEach(function (coordinate, featureSubIndex) {\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            callback(feature(geom, properties), featureIndex, featureSubIndex);\n        });\n\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureSubIndex The subindex of the current element being processed in the\n * array. Starts at index 0 and increases if the flattened feature was a multi-geometry.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {Geometry|FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, featureSubIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, featureSubIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=featureSubIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, featureSubIndex) {\n        if (featureIndex === 0 && featureSubIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, featureSubIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current segment being processed.\n * @param {number} featureIndex The index of the current element being processed in the array, starts at index 0.\n * @param {number} featureSubIndex The subindex of the current element being processed in the\n * array. Starts at index 0 and increases for each iterating line segment.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, featureSubIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, featureSubIndex) {\n *   //= currentSegment\n *   //= featureIndex\n *   //= featureSubIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * var initialValue = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * }, initialValue);\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature, featureIndex) {\n        var featureSubIndex = 0;\n        // Exclude null Geometries\n        if (!feature.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        coordReduce(feature, function (previousCoords, currentCoord) {\n            var currentSegment = lineString([previousCoords, currentCoord], feature.properties);\n            callback(currentSegment, featureIndex, featureSubIndex);\n            featureSubIndex++;\n            return currentCoord;\n        });\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} [previousValue] The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} [currentSegment] The current segment being processed.\n * @param {number} [currentIndex] The index of the current element being processed in the\n * array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} [currentSubIndex] The subindex of the current element being processed in the\n * array. Starts at index 0 and increases for each iterating line segment.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, currentIndex, currentSubIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= currentIndex\n *   //= currentSubIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    segmentEach(geojson, function (currentSegment, currentIndex, currentSubIndex) {\n        if (currentIndex === 0 && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, currentIndex, currentSubIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Create Feature\n *\n * @private\n * @param {Geometry} geometry GeoJSON Geometry\n * @param {Object} properties Properties\n * @returns {Feature} GeoJSON Feature\n */\nfunction feature(geometry, properties) {\n    if (geometry === undefined) throw new Error('No geometry passed');\n\n    return {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: geometry\n    };\n}\n\n/**\n * Create LineString\n *\n * @private\n * @param {Array<Array<number>>} coordinates Line Coordinates\n * @param {Object} properties Properties\n * @returns {Feature<LineString>} GeoJSON LineString Feature\n */\nfunction lineString(coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length < 2) throw new Error('Coordinates must be an array of two or more positions');\n\n    return {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: {\n            type: 'LineString',\n            coordinates: coordinates\n        }\n    };\n}\n\nmodule.exports = {\n    coordEach: coordEach,\n    coordReduce: coordReduce,\n    propEach: propEach,\n    propReduce: propReduce,\n    featureEach: featureEach,\n    featureReduce: featureReduce,\n    coordAll: coordAll,\n    geomEach: geomEach,\n    geomReduce: geomReduce,\n    flattenEach: flattenEach,\n    flattenReduce: flattenReduce,\n    segmentEach: segmentEach,\n    segmentReduce: segmentReduce\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/meta/index.js","/**\n * Created by FDD on 2017/2/22.\n * @desc 静态常量\n */\nmodule.exports = {\n  miles: 3960,\n  nauticalmiles: 3441.145,\n  degrees: 57.2957795,\n  radians: 1,\n  inches: 250905600,\n  yards: 6969600,\n  meters: 6373000,\n  metres: 6373000,\n  radius: 6378137,\n  centimeters: 6.373e+8,\n  centimetres: 6.373e+8,\n  kilometers: 6373,\n  kilometres: 6373,\n  feet: 20908792.65\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","/**\n * Callback for coordEach\n *\n * @private\n * @callback coordEachCallback\n * @param {[number, number]} currentCoords The current coordinates being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentCoords, currentIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.coordEach(features, function (currentCoords, currentIndex) {\n *   //=currentCoords\n *   //=currentIndex\n * });\n */\nfunction coordEach(layer, callback, excludeWrapCoord) {\n    var i, j, k, g, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        currentIndex = 0,\n        isGeometryCollection,\n        isFeatureCollection = layer.type === 'FeatureCollection',\n        isFeature = layer.type === 'Feature',\n        stop = isFeatureCollection ? layer.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? layer.features[i].geometry :\n        (isFeature ? layer.geometry : layer));\n        isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n            coords = geometry.coordinates;\n\n            wrapShrink = (excludeWrapCoord &&\n                (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon')) ?\n                1 : 0;\n\n            if (geometry.type === 'Point') {\n                callback(coords, currentIndex);\n                currentIndex++;\n            } else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], currentIndex);\n                    currentIndex++;\n                }\n            } else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], currentIndex);\n                        currentIndex++;\n                    }\n            } else if (geometry.type === 'MultiPolygon') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length; k++)\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], currentIndex);\n                            currentIndex++;\n                        }\n            } else if (geometry.type === 'GeometryCollection') {\n                for (j = 0; j < geometry.geometries.length; j++)\n                    coordEach(geometry.geometries[j], callback, excludeWrapCoord);\n            } else {\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\nmodule.exports.coordEach = coordEach;\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {[number, number]} currentCoords The current coordinate being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoords, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.coordReduce(features, function (previousValue, currentCoords, currentIndex) {\n *   //=previousValue\n *   //=currentCoords\n *   //=currentIndex\n *   return currentCoords;\n * });\n */\nfunction coordReduce(layer, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(layer, function (currentCoords, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentCoords;\n        } else {\n            previousValue = callback(previousValue, currentCoords, currentIndex);\n        }\n    }, excludeWrapCoord);\n    return previousValue;\n}\nmodule.exports.coordReduce = coordReduce;\n\n/**\n * Callback for propEach\n *\n * @private\n * @callback propEachCallback\n * @param {*} currentProperties The current properties being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.propEach(features, function (currentProperties, currentIndex) {\n *   //=currentProperties\n *   //=currentIndex\n * });\n */\nfunction propEach(layer, callback) {\n    var i;\n    switch (layer.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(layer.properties, 0);\n        break;\n    }\n}\nmodule.exports.propEach = propEach;\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current properties being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.propReduce(features, function (previousValue, currentProperties, currentIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=currentIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(layer, function (currentProperties, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentProperties;\n        } else {\n            previousValue = callback(previousValue, currentProperties, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.propReduce = propReduce;\n\n/**\n * Callback for featureEach\n *\n * @private\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.featureEach(features, function (currentFeature, currentIndex) {\n *   //=currentFeature\n *   //=currentIndex\n * });\n */\nfunction featureEach(layer, callback) {\n    if (layer.type === 'Feature') {\n        callback(layer, 0);\n    } else if (layer.type === 'FeatureCollection') {\n        for (var i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i], i);\n        }\n    }\n}\nmodule.exports.featureEach = featureEach;\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.featureReduce(features, function (previousValue, currentFeature, currentIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=currentIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(layer, function (currentFeature, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentFeature;\n        } else {\n            previousValue = callback(previousValue, currentFeature, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.featureReduce = featureReduce;\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {Object} layer any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * var coords = turf.coordAll(features);\n * //=coords\n */\nfunction coordAll(layer) {\n    var coords = [];\n    coordEach(layer, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\nmodule.exports.coordAll = coordAll;\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.geomEach(features, function (currentGeometry, currentIndex) {\n *   //=currentGeometry\n *   //=currentIndex\n * });\n */\nfunction geomEach(layer, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        currentIndex = 0,\n        isFeatureCollection = layer.type === 'FeatureCollection',\n        isFeature = layer.type === 'Feature',\n        stop = isFeatureCollection ? layer.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? layer.features[i].geometry :\n        (isFeature ? layer.geometry : layer));\n        isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            if (geometry.type === 'Point' ||\n                geometry.type === 'LineString' ||\n                geometry.type === 'MultiPoint' ||\n                geometry.type === 'Polygon' ||\n                geometry.type === 'MultiLineString' ||\n                geometry.type === 'MultiPolygon') {\n                callback(geometry, currentIndex);\n                currentIndex++;\n            } else if (geometry.type === 'GeometryCollection') {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    callback(geometry.geometries[j], currentIndex);\n                    currentIndex++;\n                }\n            } else {\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\nmodule.exports.geomEach = geomEach;\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentGeometry The current Feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.geomReduce(features, function (previousValue, currentGeometry, currentIndex) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=currentIndex\n *   return currentGeometry\n * });\n */\nfunction geomReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(layer, function (currentGeometry, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentGeometry;\n        } else {\n            previousValue = callback(previousValue, currentGeometry, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.geomReduce = geomReduce;\n\n\n\n// WEBPACK FOOTER //\n// ./~/geojson-rbush/~/@turf/meta/index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","/**\n * Created by FDD on 2017/8/14.\n * @desc 线性参考，包含坐标转桩号和桩号转坐标\n */\nimport * as utils from '../utils/utils'\nimport {bearing} from '../utils/bearing'\nimport lineIntersects from '@turf/line-intersect'\nimport constants from '../constants'\nimport * as geometryUtils from '../utils/geometry'\nimport GeomParser from './GeomParser'\nclass LrsUtils {\n  /**\n   * 从线中获取最近的点\n   * @param lines（GeoJSON）\n   * @param point\n   * @param units\n   * @returns {*}\n   */\n  getClosePointFromLines (lines, point, units) {\n    try {\n      // 判断数据是否标准\n      let type = (lines.geometry) ? lines.geometry.type : lines.type\n      if (type !== 'LineString' && type !== 'MultiLineString') {\n        throw new Error('lines must be LineString or MultiLineString')\n      }\n      let closestPoint = geometryUtils.point([Infinity, Infinity], {\n        dist: Infinity\n      })\n      let length = 0.0\n      utils.flattenEach(lines, function (line) {\n        let coords = utils.getCoords(line)\n        for (let i = 0; i < coords.length - 1; i++) {\n          if (coords[i].length < 3) {\n            continue\n          } else {\n            // start\n            let start = geometryUtils.point(coords[i])\n            start.properties.dist = utils.distance(point, start, units)\n            // stop\n            let stop = geometryUtils.point(coords[i + 1])\n            stop.properties.dist = utils.distance(point, stop, units)\n            // sectionLength\n            let sectionLength = utils.distance(start, stop, units)\n            // perpendicular\n            let heightDistance = Math.max(start.properties.dist, stop.properties.dist)\n            let direction = bearing(start, stop)\n            let perpendicularPt1 = utils.destination(point, heightDistance, direction + 90, units)\n            let perpendicularPt2 = utils.destination(point, heightDistance, direction - 90, units)\n            let intersect = lineIntersects(geometryUtils.lineString([perpendicularPt1.geometry.coordinates,\n              perpendicularPt2.geometry.coordinates]), geometryUtils.lineString([start.geometry.coordinates, stop.geometry.coordinates]))\n            let intersectPt = null\n            if (intersect.features.length > 0) {\n              intersectPt = intersect.features[0]\n              intersectPt.properties.dist = utils.distance(point, intersectPt, units)\n              intersectPt.properties.location = length + utils.distance(start, intersectPt, units)\n            }\n            if (start.properties.dist < closestPoint.properties.dist) {\n              closestPoint = start\n              closestPoint.properties.index = i\n              closestPoint.properties.location = length\n            }\n            if (stop.properties.dist < closestPoint.properties.dist) {\n              closestPoint = stop\n              closestPoint.properties.index = i + 1\n              closestPoint.properties.location = length + sectionLength\n            }\n            if (intersectPt && intersectPt.properties.dist < closestPoint.properties.dist) {\n              closestPoint = intersectPt\n              closestPoint.properties.index = i\n            }\n            // update length\n            length += sectionLength\n          }\n        }\n      })\n      return closestPoint\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  /**\n   * 处理单独带M值的路线\n   * @param lines\n   * @param point\n   * @param epsg\n   * @returns {*}\n   */\n  getClosePointFromLinesHasM (lines, point, epsg) {\n    try {\n      let pointSnap = null\n      if (Array.isArray(lines) && lines.length > 0) {\n        // start\n        let [start, stop] = [{\n          dist: Infinity,\n          index: Infinity\n        }, {}]\n        for (let i = 0; i < lines.length - 1; i++) {\n          if (lines[i].length < 3) {\n            continue\n          } else {\n            let dist = utils.getDistance_(point, lines[i], constants['radius'])\n            stop['dist'] = dist\n            stop['coords'] = lines[i]\n            stop['index'] = i\n            let corver_ = function (_start, _stop) {\n              if (_start['dist'] < _stop['dist']) {\n                _start = JSON.stringify(_start)\n              } else {\n                _start = JSON.stringify(_stop)\n              }\n              return JSON.parse(_start)\n            }\n            start = corver_(start, stop)\n            pointSnap = start\n          }\n        }\n      }\n      return pointSnap\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  /**\n   * 桩号获取坐标\n   * @param lines\n   * @param mile\n   * @returns {null}\n   */\n  getPointByMileage (lines, mile) {\n    try {\n      if (typeof lines === 'string' &&\n        (lines.indexOf('LINESTRING') >= 0 ||\n        lines.indexOf('MULTILINESTRING')) >= 0) {\n        let _coords = (new GeomParser()).wkt2ArrayFix(lines)\n        return (utils.closeDisorderArray(_coords, mile, 2))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  /**\n   * 坐标转桩号\n   * @param lines\n   * @param coordinates\n   * @returns {*}\n   */\n  getMileageByPoint (lines, coordinates) {\n    try {\n      if (typeof lines === 'string' &&\n        (lines.indexOf('LINESTRING') >= 0 ||\n        lines.indexOf('MULTILINESTRING')) >= 0) {\n        let _gLines = (new GeomParser()).wkt2GeoJSON(lines)\n        return (this.getClosePointFromLines(_gLines, geometryUtils.point(coordinates), 'miles'))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default LrsUtils\n\n\n\n// WEBPACK FOOTER //\n// ./src/geomUtils/LrsUtils.js","var polygon = require('@turf/helpers').polygon;\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nmodule.exports = function (bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n\n    return polygon([[\n        lowLeft,\n        lowRight,\n        topRight,\n        topLeft,\n        lowLeft\n    ]]);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/bbox-polygon/index.js","var meta = require('@turf/meta');\nvar rbush = require('geojson-rbush');\nvar helpers = require('@turf/helpers');\nvar getCoords = require('@turf/invariant').getCoords;\nvar lineSegment = require('@turf/line-segment');\nvar point = helpers.point;\nvar featureEach = meta.featureEach;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nmodule.exports = function (line1, line2) {\n    var unique = {};\n    var results = [];\n\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === 'LineString') line1 = helpers.feature(line1);\n    if (line2.type === 'LineString') line2 = helpers.feature(line2);\n    if (line1.type === 'Feature' &&\n        line2.type === 'Feature' &&\n        line1.geometry.type === 'LineString' &&\n        line2.geometry.type === 'LineString' &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) results.push(intersect);\n        return featureCollection(results);\n    }\n\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(',');\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n};\n\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error('<intersects> line1 must only contain 2 coordinates');\n    }\n    if (coords2.length !== 2) {\n        throw new Error('<intersects> line2 must only contain 2 coordinates');\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    var numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    var numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + (uA * (x2 - x1));\n        var y = y1 + (uA * (y2 - y1));\n        return point([x, y]);\n    }\n    return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/line-intersect/index.js","var helpers = require('@turf/helpers');\nvar getCoords = require('@turf/invariant').getCoords;\nvar flattenEach = require('@turf/meta').flattenEach;\nvar lineString = helpers.lineString;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|MultiPolygon|Polygon>} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nmodule.exports = function (geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegment(feature, results);\n    });\n    return featureCollection(results);\n};\n\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegment(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    switch (geometry.type) {\n    case 'Polygon':\n        coords = getCoords(geometry);\n        break;\n    case 'LineString':\n        coords = [getCoords(geometry)];\n    }\n    coords.forEach(function (coord) {\n        var segments = createSegments(coord, geojson.properties);\n        segments.forEach(function (segment) {\n            segment.id = results.length;\n            results.push(segment);\n        });\n    });\n}\n\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {LineString} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {[number, number]} coords1 Point coordinate\n * @param {[number, number]} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = (x1 < x2) ? x1 : x2;\n    var south = (y1 < y2) ? y1 : y2;\n    var east = (x1 > x2) ? x1 : x2;\n    var north = (y1 > y2) ? y1 : y2;\n    return [west, south, east, north];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/@turf/line-segment/index.js","/**\n * Created by FDD on 2017/8/4.\n */\nimport GeomParser from './geomUtils/GeomParser'\nimport LrsUtils from './geomUtils/LrsUtils'\nimport * as utils from './utils/utils'\nimport * as geometry from './utils/geometry'\nexport default {\n  GeomParser,\n  LrsUtils,\n  utils,\n  geometry\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {getCoord} from './utils'\r\n\r\n/**\r\n * bearing\r\n * @param start\r\n * @param end\r\n * @param final\r\n * @returns {number}\r\n */\r\nexport const bearing = (start, end, final) => {\r\n  if (final === true) {\r\n    return calculateFinalBearing(start, end)\r\n  } else {\r\n    let [degrees2radians, radians2degrees] = [(Math.PI / 180), (180 / Math.PI)]\r\n    let coordinates1 = getCoord(start)\r\n    let coordinates2 = getCoord(end)\r\n    let [lon1, lon2, lat1, lat2] = [(degrees2radians * coordinates1[0]),\r\n      (degrees2radians * coordinates2[0]), (degrees2radians * coordinates1[1]),\r\n      (degrees2radians * coordinates2[1])]\r\n    let [a, b] = [(Math.sin(lon2 - lon1) * Math.cos(lat2)), (Math.cos(lat1) * Math.sin(lat2) -\r\n      Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1))]\r\n    return (radians2degrees * Math.atan2(a, b))\r\n  }\r\n}\r\n\r\n/**\r\n * 计算最终逼近\r\n * @param start\r\n * @param end\r\n */\r\nexport const calculateFinalBearing = (start, end) => {\r\n  // Swap start & end\r\n  let bear = bearing(end, start)\r\n  bear = (bear + 180) % 360\r\n  return bear\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/bearing.js","var turfBBox = require('@turf/bbox');\nvar featureCollection = require('@turf/helpers').featureCollection;\nvar featureEach = require('@turf/meta').featureEach;\nvar bboxPolygon = require('@turf/bbox-polygon');\nvar rbush = require('rbush');\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var rbush = require('geojson-rbush')\n * var tree = rbush()\n */\nmodule.exports = function (maxEntries) {\n    var tree = rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature<any>} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.insert(polygon)\n     */\n    tree.insert = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        } else {\n            feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        }\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {BBox[]|FeatureCollection<any>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygons = {\n     *   \"type\": \"FeatureCollection\",\n     *   \"features\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *       }\n     *     },\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     *       }\n     *     }\n     *   ]\n     * }\n     * tree.load(polygons)\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of BBox\n        if (Array.isArray(features)) {\n            features.forEach(function (bbox) {\n                var feature = bboxPolygon(bbox);\n                feature.bbox = bbox;\n                load.push(feature);\n            });\n        } else {\n            // Load FeatureCollection\n            featureEach(features, function (feature) {\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {BBox|Feature<any>} feature remove single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.remove(polygon)\n     */\n    tree.remove = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        }\n        return rbush.prototype.remove.call(this, feature);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson search with GeoJSON\n     * @returns {FeatureCollection<any>} all features that intersects with the given GeoJSON.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.search(polygon)\n     */\n    tree.search = function (geojson) {\n        var search = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(search);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.collides(polygon)\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection<any>} all the features in RBush\n     * @example\n     * tree.all()\n     * //=FeatureCollection\n     */\n    tree.all = function () {\n        var all = rbush.prototype.all.call(this);\n        return featureCollection(all);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     * //=JSON object\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollectio|Feature<any>} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else bbox = turfBBox(geojson);\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/geojson-rbush/index.js","var each = require('@turf/meta').coordEach;\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {(Feature|FeatureCollection)} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @addToMap features, bboxPolygon\n * @example\n * var pt1 = turf.point([114.175329, 22.2524])\n * var pt2 = turf.point([114.170007, 22.267969])\n * var pt3 = turf.point([114.200649, 22.274641])\n * var pt4 = turf.point([114.200649, 22.274641])\n * var pt5 = turf.point([114.186744, 22.265745])\n * var features = turf.featureCollection([pt1, pt2, pt3, pt4, pt5])\n *\n * var bbox = turf.bbox(features);\n *\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //=bbox\n *\n * //=bboxPolygon\n */\nmodule.exports = function (geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    each(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/geojson-rbush/~/@turf/bbox/index.js","/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} properties properties\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var geometry = {\n *      \"type\": \"Point\",\n *      \"coordinates\": [\n *        67.5,\n *        32.84267363195431\n *      ]\n *    }\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties) {\n    if (!geometry) throw new Error('No geometry passed');\n\n    return {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: geometry\n    };\n}\nmodule.exports.feature = feature;\n\n/**\n * Takes coordinates and properties (optional) and returns a new {@link Point} feature.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object=} properties an Object that is used as the {@link Feature}'s\n * properties\n * @returns {Feature<Point>} a Point feature\n * @example\n * var pt1 = turf.point([-75.343, 39.984]);\n *\n * //=pt1\n */\nmodule.exports.point = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length === undefined) throw new Error('Coordinates must be an array');\n    if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n    if (typeof coordinates[0] !== 'number' || typeof coordinates[1] !== 'number') throw new Error('Coordinates must numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Takes an array of LinearRings and optionally an {@link Object} with properties and returns a {@link Polygon} feature.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object=} properties a properties object\n * @returns {Feature<Polygon>} a Polygon feature\n * @throws {Error} throw an error if a LinearRing of the polygon has too few positions\n * or if a LinearRing of the Polygon does not have matching Positions at the\n * beginning & end.\n * @example\n * var polygon = turf.polygon([[\n *  [-2.275543, 53.464547],\n *  [-2.275543, 53.489271],\n *  [-2.215118, 53.489271],\n *  [-2.215118, 53.464547],\n *  [-2.275543, 53.464547]\n * ]], { name: 'poly1', population: 400});\n *\n * //=polygon\n */\nmodule.exports.polygon = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link LineString} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<LineString>} a LineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var linestring1 = turf.lineString([\n *   [-21.964416, 64.148203],\n *   [-21.956176, 64.141316],\n *   [-21.93901, 64.135924],\n *   [-21.927337, 64.136673]\n * ]);\n * var linestring2 = turf.lineString([\n *   [-21.929054, 64.127985],\n *   [-21.912918, 64.134726],\n *   [-21.916007, 64.141016],\n *   [-21.930084, 64.14446]\n * ], {name: 'line 1', distance: 145});\n *\n * //=linestring1\n *\n * //=linestring2\n */\nmodule.exports.lineString = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var features = [\n *  turf.point([-75.343, 39.984], {name: 'Location A'}),\n *  turf.point([-75.833, 39.284], {name: 'Location B'}),\n *  turf.point([-75.534, 39.123], {name: 'Location C'})\n * ];\n *\n * var fc = turf.featureCollection(features);\n *\n * //=fc\n */\nmodule.exports.featureCollection = function (features) {\n    if (!features) throw new Error('No features passed');\n\n    return {\n        type: 'FeatureCollection',\n        features: features\n    };\n};\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n *\n */\nmodule.exports.multiLineString = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n *\n */\nmodule.exports.multiPoint = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties);\n};\n\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nmodule.exports.multiPolygon = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<{Geometry}>} geometries an array of GeoJSON Geometries\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nmodule.exports.geometryCollection = function (geometries, properties) {\n    if (!geometries) throw new Error('No geometries passed');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties);\n};\n\nvar factors = {\n    miles: 3960,\n    nauticalmiles: 3441.145,\n    degrees: 57.2957795,\n    radians: 1,\n    inches: 250905600,\n    yards: 6969600,\n    meters: 6373000,\n    metres: 6373000,\n    kilometers: 6373,\n    kilometres: 6373,\n    feet: 20908792.65\n};\n\n/*\n * Convert a distance measurement from radians to a more friendly unit.\n *\n * @name radiansToDistance\n * @param {number} distance in radians across the sphere\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nmodule.exports.radiansToDistance = function (radians, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return radians * factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into radians\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nmodule.exports.distanceToRadians = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return distance / factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into degrees\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nmodule.exports.distanceToDegrees = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return (distance / factor) * 57.2958;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/geojson-rbush/~/@turf/helpers/index.js","'use strict';\n\nmodule.exports = partialSort;\n\n// Floyd-Rivest selection algorithm:\n// Rearrange items so that all items in the [left, k] range are smaller than all items in (k, right];\n// The k-th element will have the (k - left + 1)th smallest value in [left, right]\n\nfunction partialSort(arr, k, left, right, compare) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n    compare = compare || defaultCompare;\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            partialSort(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/quickselect/index.js","'use strict';\n\nmodule.exports = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rbush/index.js","(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory(require(\"terraformer\"));\n  } else if(typeof navigator === \"object\") {\n    // Browser Global.\n    if (!root.Terraformer){\n      throw new Error(\"Terraformer.WKT requires the core Terraformer library. http://github.com/esri/terraformer\")\n    }\n    root.Terraformer.WKT = factory(root.Terraformer);\n  }\n\n}(this, function(Terraformer) {\n  var exports = { };\n\n  /* Jison generated parser */\nvar parser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"expressions\":3,\"point\":4,\"EOF\":5,\"linestring\":6,\"polygon\":7,\"multipoint\":8,\"multilinestring\":9,\"multipolygon\":10,\"coordinate\":11,\"DOUBLE_TOK\":12,\"ptarray\":13,\"COMMA\":14,\"ring_list\":15,\"ring\":16,\"(\":17,\")\":18,\"POINT\":19,\"Z\":20,\"ZM\":21,\"M\":22,\"EMPTY\":23,\"point_untagged\":24,\"polygon_list\":25,\"polygon_untagged\":26,\"point_list\":27,\"LINESTRING\":28,\"POLYGON\":29,\"MULTIPOINT\":30,\"MULTILINESTRING\":31,\"MULTIPOLYGON\":32,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",12:\"DOUBLE_TOK\",14:\"COMMA\",17:\"(\",18:\")\",19:\"POINT\",20:\"Z\",21:\"ZM\",22:\"M\",23:\"EMPTY\",28:\"LINESTRING\",29:\"POLYGON\",30:\"MULTIPOINT\",31:\"MULTILINESTRING\",32:\"MULTIPOLYGON\"},\nproductions_: [0,[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[11,2],[11,3],[11,4],[13,3],[13,1],[15,3],[15,1],[16,3],[4,4],[4,5],[4,5],[4,5],[4,2],[24,1],[24,3],[25,3],[25,1],[26,3],[27,3],[27,1],[6,4],[6,5],[6,5],[6,5],[6,2],[7,4],[7,5],[7,5],[7,5],[7,2],[8,4],[8,5],[8,5],[8,5],[8,2],[9,4],[9,5],[9,5],[9,5],[9,2],[10,4],[10,5],[10,5],[10,5],[10,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$,_$\n/**/) {\n\nvar $0 = $.length - 1;\nswitch (yystate) {\ncase 1: return $[$0-1]; \nbreak;\ncase 2: return $[$0-1]; \nbreak;\ncase 3: return $[$0-1]; \nbreak;\ncase 4: return $[$0-1]; \nbreak;\ncase 5: return $[$0-1]; \nbreak;\ncase 6: return $[$0-1]; \nbreak;\ncase 7: this.$ = new PointArray([ Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 8: this.$ = new PointArray([ Number($[$0-2]), Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 9: this.$ = new PointArray([ Number($[$0-3]), Number($[$0-2]), Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 10: this.$ = $[$0-2].addPoint($[$0]); \nbreak;\ncase 11: this.$ = $[$0]; \nbreak;\ncase 12: this.$ = $[$0-2].addRing($[$0]); \nbreak;\ncase 13: this.$ = new RingList($[$0]); \nbreak;\ncase 14: this.$ = new Ring($[$0-1]); \nbreak;\ncase 15: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0] }; \nbreak;\ncase 16: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { z: true } }; \nbreak;\ncase 17: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { z: true, m: true } }; \nbreak;\ncase 18: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { m: true } }; \nbreak;\ncase 19: this.$ = { \"type\": \"Point\", \"coordinates\": [ ] }; \nbreak;\ncase 20: this.$ = $[$0]; \nbreak;\ncase 21: this.$ = $[$0-1]; \nbreak;\ncase 22: this.$ = $[$0-2].addPolygon($[$0]); \nbreak;\ncase 23: this.$ = new PolygonList($[$0]); \nbreak;\ncase 24: this.$ = $[$0-1]; \nbreak;\ncase 25: this.$ = $[$0-2].addPoint($[$0]); \nbreak;\ncase 26: this.$ = $[$0]; \nbreak;\ncase 27: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data }; \nbreak;\ncase 28: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { z: true } }; \nbreak;\ncase 29: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { m: true } }; \nbreak;\ncase 30: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { z: true, m: true } }; \nbreak;\ncase 31: this.$ = { \"type\": \"LineString\", \"coordinates\": [ ] }; \nbreak;\ncase 32: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 33: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 34: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 35: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 36: this.$ = { \"type\": \"Polygon\", \"coordinates\": [ ] }; \nbreak;\ncase 37: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data }; \nbreak;\ncase 38: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { z: true } }; \nbreak;\ncase 39: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { m: true } }; \nbreak;\ncase 40: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { z: true, m: true } }; \nbreak;\ncase 41: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": [ ] } \nbreak;\ncase 42: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 43: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 44: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 45: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 46: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": [ ] }; \nbreak;\ncase 47: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 48: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 49: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 50: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 51: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": [ ] }; \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:4,8:5,9:6,10:7,19:[1,8],28:[1,9],29:[1,10],30:[1,11],31:[1,12],32:[1,13]},{1:[3]},{5:[1,14]},{5:[1,15]},{5:[1,16]},{5:[1,17]},{5:[1,18]},{5:[1,19]},{17:[1,20],20:[1,21],21:[1,22],22:[1,23],23:[1,24]},{17:[1,25],20:[1,26],21:[1,28],22:[1,27],23:[1,29]},{17:[1,30],20:[1,31],21:[1,33],22:[1,32],23:[1,34]},{17:[1,35],20:[1,36],21:[1,38],22:[1,37],23:[1,39]},{17:[1,40],20:[1,41],21:[1,43],22:[1,42],23:[1,44]},{17:[1,45],20:[1,46],21:[1,48],22:[1,47],23:[1,49]},{1:[2,1]},{1:[2,2]},{1:[2,3]},{1:[2,4]},{1:[2,5]},{1:[2,6]},{11:51,12:[1,52],13:50},{17:[1,53]},{17:[1,54]},{17:[1,55]},{5:[2,19]},{11:58,12:[1,52],17:[1,59],24:57,27:56},{17:[1,60]},{17:[1,61]},{17:[1,62]},{5:[2,31]},{15:63,16:64,17:[1,65]},{17:[1,66]},{17:[1,67]},{17:[1,68]},{5:[2,36]},{11:58,12:[1,52],17:[1,59],24:57,27:69},{17:[1,70]},{17:[1,71]},{17:[1,72]},{5:[2,41]},{15:73,16:64,17:[1,65]},{17:[1,74]},{17:[1,75]},{17:[1,76]},{5:[2,46]},{17:[1,79],25:77,26:78},{17:[1,80]},{17:[1,81]},{17:[1,82]},{5:[2,51]},{14:[1,84],18:[1,83]},{14:[2,11],18:[2,11]},{12:[1,85]},{11:51,12:[1,52],13:86},{11:51,12:[1,52],13:87},{11:51,12:[1,52],13:88},{14:[1,90],18:[1,89]},{14:[2,26],18:[2,26]},{14:[2,20],18:[2,20]},{11:91,12:[1,52]},{11:58,12:[1,52],17:[1,59],24:57,27:92},{11:58,12:[1,52],17:[1,59],24:57,27:93},{11:58,12:[1,52],17:[1,59],24:57,27:94},{14:[1,96],18:[1,95]},{14:[2,13],18:[2,13]},{11:51,12:[1,52],13:97},{15:98,16:64,17:[1,65]},{15:99,16:64,17:[1,65]},{15:100,16:64,17:[1,65]},{14:[1,90],18:[1,101]},{11:58,12:[1,52],17:[1,59],24:57,27:102},{11:58,12:[1,52],17:[1,59],24:57,27:103},{11:58,12:[1,52],17:[1,59],24:57,27:104},{14:[1,96],18:[1,105]},{15:106,16:64,17:[1,65]},{15:107,16:64,17:[1,65]},{15:108,16:64,17:[1,65]},{14:[1,110],18:[1,109]},{14:[2,23],18:[2,23]},{15:111,16:64,17:[1,65]},{17:[1,79],25:112,26:78},{17:[1,79],25:113,26:78},{17:[1,79],25:114,26:78},{5:[2,15]},{11:115,12:[1,52]},{12:[1,116],14:[2,7],18:[2,7]},{14:[1,84],18:[1,117]},{14:[1,84],18:[1,118]},{14:[1,84],18:[1,119]},{5:[2,27]},{11:58,12:[1,52],17:[1,59],24:120},{18:[1,121]},{14:[1,90],18:[1,122]},{14:[1,90],18:[1,123]},{14:[1,90],18:[1,124]},{5:[2,32]},{16:125,17:[1,65]},{14:[1,84],18:[1,126]},{14:[1,96],18:[1,127]},{14:[1,96],18:[1,128]},{14:[1,96],18:[1,129]},{5:[2,37]},{14:[1,90],18:[1,130]},{14:[1,90],18:[1,131]},{14:[1,90],18:[1,132]},{5:[2,42]},{14:[1,96],18:[1,133]},{14:[1,96],18:[1,134]},{14:[1,96],18:[1,135]},{5:[2,47]},{17:[1,79],26:136},{14:[1,96],18:[1,137]},{14:[1,110],18:[1,138]},{14:[1,110],18:[1,139]},{14:[1,110],18:[1,140]},{14:[2,10],18:[2,10]},{12:[1,141],14:[2,8],18:[2,8]},{5:[2,16]},{5:[2,17]},{5:[2,18]},{14:[2,25],18:[2,25]},{14:[2,21],18:[2,21]},{5:[2,28]},{5:[2,29]},{5:[2,30]},{14:[2,12],18:[2,12]},{14:[2,14],18:[2,14]},{5:[2,33]},{5:[2,34]},{5:[2,35]},{5:[2,38]},{5:[2,39]},{5:[2,40]},{5:[2,43]},{5:[2,44]},{5:[2,45]},{14:[2,22],18:[2,22]},{14:[2,24],18:[2,24]},{5:[2,48]},{5:[2,49]},{5:[2,50]},{14:[2,9],18:[2,9]}],\ndefaultActions: {14:[2,1],15:[2,2],16:[2,3],17:[2,4],18:[2,5],19:[2,6],24:[2,19],29:[2,31],34:[2,36],39:[2,41],44:[2,46],49:[2,51],83:[2,15],89:[2,27],95:[2,32],101:[2,37],105:[2,42],109:[2,47],117:[2,16],118:[2,17],119:[2,18],122:[2,28],123:[2,29],124:[2,30],127:[2,33],128:[2,34],129:[2,35],130:[2,38],131:[2,39],132:[2,40],133:[2,43],134:[2,44],135:[2,45],138:[2,48],139:[2,49],140:[2,50]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\nundefined/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex() {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState() {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules() {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin(condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n/**/) {\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:// ignore\nbreak;\ncase 1:return 17\nbreak;\ncase 2:return 18\nbreak;\ncase 3:return 12\nbreak;\ncase 4:return 19\nbreak;\ncase 5:return 28\nbreak;\ncase 6:return 29\nbreak;\ncase 7:return 30\nbreak;\ncase 8:return 31\nbreak;\ncase 9:return 32\nbreak;\ncase 10:return 14\nbreak;\ncase 11:return 23\nbreak;\ncase 12:return 22\nbreak;\ncase 13:return 20\nbreak;\ncase 14:return 21\nbreak;\ncase 15:return 5\nbreak;\ncase 16:return \"INVALID\"\nbreak;\n}\n};\nlexer.rules = [/^(?:\\s+)/,/^(?:\\()/,/^(?:\\))/,/^(?:-?[0-9]+(\\.[0-9]+)?([eE][\\-\\+]?[0-9]+)?)/,/^(?:POINT\\b)/,/^(?:LINESTRING\\b)/,/^(?:POLYGON\\b)/,/^(?:MULTIPOINT\\b)/,/^(?:MULTILINESTRING\\b)/,/^(?:MULTIPOLYGON\\b)/,/^(?:,)/,/^(?:EMPTY\\b)/,/^(?:M\\b)/,/^(?:Z\\b)/,/^(?:ZM\\b)/,/^(?:$)/,/^(?:.)/];\nlexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n  function PointArray (point) {\n    this.data = [ point ];\n    this.type = 'PointArray';\n  }\n\n  PointArray.prototype.addPoint = function (point) {\n    if (point.type === 'PointArray') {\n      this.data = this.data.concat(point.data);\n    } else {\n      this.data.push(point);\n    }\n\n    return this;\n  };\n\n  PointArray.prototype.toJSON = function () {\n    return this.data;\n  };\n\n  function Ring (point) {\n    this.data = point;\n    this.type = 'Ring';\n  }\n\n  Ring.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.data.length; i++) {\n      data.push(this.data.data[i]);\n    }\n\n    return data;\n  };\n\n  function RingList (ring) {\n    this.data = [ ring ];\n    this.type = 'RingList';\n  }\n\n  RingList.prototype.addRing = function (ring) {\n    this.data.push(ring);\n\n    return this;\n  };\n\n  RingList.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data.push(this.data[i].toJSON());\n    }\n\n    if (data.length === 1) {\n      return data;\n    } else {\n      return data;\n    }\n  };\n\n  function PolygonList (polygon) {\n    this.data = [ polygon ];\n    this.type = 'PolygonList';\n  }\n\n  PolygonList.prototype.addPolygon = function (polygon) {\n    this.data.push(polygon);\n\n    return this;\n  };\n\n  PolygonList.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data = data.concat( [ this.data[i].toJSON() ] );\n    }\n\n    return data;\n  };\n\n  function _parse () {\n    return parser.parse.apply(parser, arguments);\n  }\n\n  function parse (element) {\n    var res, primitive;\n\n    try {\n      res = parser.parse(element);\n    } catch (err) {\n      throw Error(\"Unable to parse: \" + err);\n    }\n\n    return Terraformer.Primitive(res);\n  }\n\n  function arrayToRing (arr) {\n    var parts = [ ], ret = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      parts.push(arr[i].join(' '));\n    }\n\n    ret += '(' + parts.join(', ') + ')';\n\n    return ret;\n\n  }\n\n  function pointToWKTPoint (primitive) {\n    var ret = 'POINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates.length === 3) {\n      // 3d or time? default to 3d\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates.length === 4) {\n      // 3d and time\n      ret += 'ZM ';\n    }\n\n    // include coordinates\n    ret += '(' + primitive.coordinates.join(' ') + ')';\n\n    return ret;\n  }\n\n  function lineStringToWKTLineString (primitive) {\n    var ret = 'LINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n\n    return ret;\n  }\n\n  function polygonToWKTPolygon (primitive) {\n    var ret = 'POLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [ ];\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function multiPointToWKTMultiPoint (primitive) {\n    var ret = 'MULTIPOINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n\n    return ret;\n  }\n\n  function multiLineStringToWKTMultiLineString (primitive) {\n    var ret = 'MULTILINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [ ];\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function multiPolygonToWKTMultiPolygon (primitive) {\n    var ret = 'MULTIPOLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var inner = [ ];\n    for (var c = 0; c < primitive.coordinates.length; c++) {\n      var it = '(';\n      var parts = [ ];\n      for (var i = 0; i < primitive.coordinates[c].length; i++) {\n        parts.push(arrayToRing(primitive.coordinates[c][i]));\n      }\n\n      it += parts.join(', ');\n      it += ')';\n\n      inner.push(it);\n    }\n\n    ret += inner.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function convert (primitive) {\n    switch (primitive.type) {\n      case 'Point':\n        return pointToWKTPoint(primitive);\n      case 'LineString':\n        return lineStringToWKTLineString(primitive);\n      case 'Polygon':\n        return polygonToWKTPolygon(primitive);\n      case 'MultiPoint':\n        return multiPointToWKTMultiPoint(primitive);\n      case 'MultiLineString':\n        return multiLineStringToWKTMultiLineString(primitive);\n      case 'MultiPolygon':\n        return multiPolygonToWKTMultiPolygon(primitive);\n      default:\n        throw Error (\"Unknown Type: \" + primitive.type);\n    }\n  }\n\n\n\n  exports.parser  = parser;\n  exports.Parser  = parser.Parser;\n  exports.parse   = parse;\n  exports.convert = convert;\n\n  return exports;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./~/terraformer-wkt-parser/terraformer-wkt-parser.js","(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory();\n  }\n\n  // Browser Global.\n  if(typeof window === \"object\") {\n    root.Terraformer = factory();\n  }\n\n}(this, function(){\n  var exports = {},\n      EarthRadius = 6378137,\n      DegreesPerRadian = 57.295779513082320,\n      RadiansPerDegree =  0.017453292519943,\n      MercatorCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/sr-org/6928/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      },\n      GeographicCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/epsg/4326/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      };\n\n  /*\n  Internal: isArray function\n  */\n  function isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  }\n\n  /*\n  Internal: safe warning\n  */\n  function warn() {\n    var args = Array.prototype.slice.apply(arguments);\n\n    if (typeof console !== undefined && console.warn) {\n      console.warn.apply(console, args);\n    }\n  }\n\n  /*\n  Internal: Extend one object with another.\n  */\n  function extend(destination, source) {\n    for (var k in source) {\n      if (source.hasOwnProperty(k)) {\n        destination[k] = source[k];\n      }\n    }\n    return destination;\n  }\n\n  /*\n  Public: Calculate an bounding box for a geojson object\n  */\n  function calculateBounds (geojson) {\n    if(geojson.type){\n      switch (geojson.type) {\n        case 'Point':\n          return [ geojson.coordinates[0], geojson.coordinates[1], geojson.coordinates[0], geojson.coordinates[1]];\n\n        case 'MultiPoint':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'LineString':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'MultiLineString':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'Polygon':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'MultiPolygon':\n          return calculateBoundsFromNestedArrayOfArrays(geojson.coordinates);\n\n        case 'Feature':\n          return geojson.geometry? calculateBounds(geojson.geometry) : null;\n\n        case 'FeatureCollection':\n          return calculateBoundsForFeatureCollection(geojson);\n\n        case 'GeometryCollection':\n          return calculateBoundsForGeometryCollection(geojson);\n\n        default:\n          throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n    return null;\n  }\n\n  /*\n  Internal: Calculate an bounding box from an nested array of positions\n  [\n    [\n      [ [lng, lat],[lng, lat],[lng, lat] ]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n  ]\n  */\n  function calculateBoundsFromNestedArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var lonlat = inner[j];\n\n        var lon = lonlat[0];\n        var lat = lonlat[1];\n\n        if (x1 === null) {\n          x1 = lon;\n        } else if (lon < x1) {\n          x1 = lon;\n        }\n\n        if (x2 === null) {\n          x2 = lon;\n        } else if (lon > x2) {\n          x2 = lon;\n        }\n\n        if (y1 === null) {\n          y1 = lat;\n        } else if (lat < y1) {\n          y1 = lat;\n        }\n\n        if (y2 === null) {\n          y2 = lat;\n        } else if (lat > y2) {\n          y2 = lat;\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of arrays of arrays\n  [\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n  ]\n  */\n  function calculateBoundsFromNestedArrayOfArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var innerinner = inner[j];\n        for (var k = 0; k < innerinner.length; k++) {\n          var lonlat = innerinner[k];\n\n          var lon = lonlat[0];\n          var lat = lonlat[1];\n\n          if (x1 === null) {\n            x1 = lon;\n          } else if (lon < x1) {\n            x1 = lon;\n          }\n\n          if (x2 === null) {\n            x2 = lon;\n          } else if (lon > x2) {\n            x2 = lon;\n          }\n\n          if (y1 === null) {\n            y1 = lat;\n          } else if (lat < y1) {\n            y1 = lat;\n          }\n\n          if (y2 === null) {\n            y2 = lat;\n          } else if (lat > y2) {\n            y2 = lat;\n          }\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of positions\n  [\n    [lng, lat],[lng, lat],[lng, lat]\n  ]\n  */\n  function calculateBoundsFromArray (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var lonlat = array[i];\n      var lon = lonlat[0];\n      var lat = lonlat[1];\n\n      if (x1 === null) {\n        x1 = lon;\n      } else if (lon < x1) {\n        x1 = lon;\n      }\n\n      if (x2 === null) {\n        x2 = lon;\n      } else if (lon > x2) {\n        x2 = lon;\n      }\n\n      if (y1 === null) {\n        y1 = lat;\n      } else if (lat < y1) {\n        y1 = lat;\n      }\n\n      if (y2 === null) {\n        y2 = lat;\n      } else if (lat > y2) {\n        y2 = lat;\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate an bounding box for a feature collection\n  */\n  function calculateBoundsForFeatureCollection(featureCollection){\n    var extents = [], extent;\n    for (var i = featureCollection.features.length - 1; i >= 0; i--) {\n      extent = calculateBounds(featureCollection.features[i].geometry);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  /*\n  Internal: Calculate an bounding box for a geometry collection\n  */\n  function calculateBoundsForGeometryCollection(geometryCollection){\n    var extents = [], extent;\n\n    for (var i = geometryCollection.geometries.length - 1; i >= 0; i--) {\n      extent = calculateBounds(geometryCollection.geometries[i]);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  function calculateEnvelope(geojson){\n    var bounds = calculateBounds(geojson);\n    return {\n      x: bounds[0],\n      y: bounds[1],\n      w: Math.abs(bounds[0] - bounds[2]),\n      h: Math.abs(bounds[1] - bounds[3])\n    };\n  }\n\n  /*\n  Internal: Convert radians to degrees. Used by spatial reference converters.\n  */\n  function radToDeg(rad) {\n    return rad * DegreesPerRadian;\n  }\n\n  /*\n  Internal: Convert degrees to radians. Used by spatial reference converters.\n  */\n  function degToRad(deg) {\n    return deg * RadiansPerDegree;\n  }\n\n  /*\n  Internal: Loop over each array in a geojson object and apply a function to it. Used by spatial reference converters.\n  */\n  function eachPosition(coordinates, func) {\n    for (var i = 0; i < coordinates.length; i++) {\n      // we found a number so lets convert this pair\n      if(typeof coordinates[i][0] === \"number\"){\n        coordinates[i] = func(coordinates[i]);\n      }\n      // we found an coordinates array it again and run THIS function against it\n      if(typeof coordinates[i] === \"object\"){\n        coordinates[i] = eachPosition(coordinates[i], func);\n      }\n    }\n    return coordinates;\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Geographic (4326)\n  */\n  function positionToGeographic(position) {\n    var x = position[0];\n    var y = position[1];\n    return [radToDeg(x / EarthRadius) - (Math.floor((radToDeg(x / EarthRadius) + 180) / 360) * 360), radToDeg((Math.PI / 2) - (2 * Math.atan(Math.exp(-1.0 * y / EarthRadius))))];\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Web Mercator (102100)\n  */\n  function positionToMercator(position) {\n    var lng = position[0];\n    var lat = Math.max(Math.min(position[1], 89.99999), -89.99999);\n    return [degToRad(lng) * EarthRadius, EarthRadius/2.0 * Math.log( (1.0 + Math.sin(degToRad(lat))) / (1.0 - Math.sin(degToRad(lat))) )];\n  }\n\n  /*\n  Public: Apply a function agaist all positions in a geojson object. Used by spatial reference converters.\n  */\n  function applyConverter(geojson, converter, noCrs){\n    if(geojson.type === \"Point\") {\n      geojson.coordinates = converter(geojson.coordinates);\n    } else if(geojson.type === \"Feature\") {\n      geojson.geometry = applyConverter(geojson.geometry, converter, true);\n    } else if(geojson.type === \"FeatureCollection\") {\n      for (var f = 0; f < geojson.features.length; f++) {\n        geojson.features[f] = applyConverter(geojson.features[f], converter, true);\n      }\n    } else if(geojson.type === \"GeometryCollection\") {\n      for (var g = 0; g < geojson.geometries.length; g++) {\n        geojson.geometries[g] = applyConverter(geojson.geometries[g], converter, true);\n      }\n    } else {\n      geojson.coordinates = eachPosition(geojson.coordinates, converter);\n    }\n\n    if(!noCrs){\n      if(converter === positionToMercator){\n        geojson.crs = MercatorCRS;\n      }\n    }\n\n    if(converter === positionToGeographic){\n      delete geojson.crs;\n    }\n\n    return geojson;\n  }\n\n  /*\n  Public: Convert a GeoJSON object to ESRI Web Mercator (102100)\n  */\n  function toMercator(geojson) {\n    return applyConverter(geojson, positionToMercator);\n  }\n\n  /*\n  Convert a GeoJSON object to Geographic coordinates (WSG84, 4326)\n  */\n  function toGeographic(geojson) {\n    return applyConverter(geojson, positionToGeographic);\n  }\n\n\n  /*\n  Internal: -1,0,1 comparison function\n  */\n  function cmp(a, b) {\n    if(a < b) {\n      return -1;\n    } else if(a > b) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n  Internal: used for sorting\n  */\n  function compSort(p1, p2) {\n    if (p1[0] > p2[0]) {\n      return -1;\n    } else if (p1[0] < p2[0]) {\n      return 1;\n    } else if (p1[1] > p2[1]) {\n      return -1;\n    } else if (p1[1] < p2[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n\n  /*\n  Internal: used to determine turn\n  */\n  function turn(p, q, r) {\n    // Returns -1, 0, 1 if p,q,r forms a right, straight, or left turn.\n    return cmp((q[0] - p[0]) * (r[1] - p[1]) - (r[0] - p[0]) * (q[1] - p[1]), 0);\n  }\n\n  /*\n  Internal: used to determine euclidean distance between two points\n  */\n  function euclideanDistance(p, q) {\n    // Returns the squared Euclidean distance between p and q.\n    var dx = q[0] - p[0];\n    var dy = q[1] - p[1];\n\n    return dx * dx + dy * dy;\n  }\n\n  function nextHullPoint(points, p) {\n    // Returns the next point on the convex hull in CCW from p.\n    var q = p;\n    for(var r in points) {\n      var t = turn(p, q, points[r]);\n      if(t === -1 || t === 0 && euclideanDistance(p, points[r]) > euclideanDistance(p, q)) {\n        q = points[r];\n      }\n    }\n    return q;\n  }\n\n  function convexHull(points) {\n    // implementation of the Jarvis March algorithm\n    // adapted from http://tixxit.wordpress.com/2009/12/09/jarvis-march/\n\n    if(points.length === 0) {\n      return [];\n    } else if(points.length === 1) {\n      return points;\n    }\n\n    // Returns the points on the convex hull of points in CCW order.\n    var hull = [points.sort(compSort)[0]];\n\n    for(var p = 0; p < hull.length; p++) {\n      var q = nextHullPoint(points, hull[p]);\n\n      if(q !== hull[0]) {\n        hull.push(q);\n      }\n    }\n\n    return hull;\n  }\n\n  function isConvex(points) {\n    var ltz;\n\n    for (var i = 0; i < points.length - 3; i++) {\n      var p1 = points[i];\n      var p2 = points[i + 1];\n      var p3 = points[i + 2];\n      var v = [p2[0] - p1[0], p2[1] - p1[1]];\n\n      // p3.x * v.y - p3.y * v.x + v.x * p1.y - v.y * p1.x\n      var res = p3[0] * v[1] - p3[1] * v[0] + v[0] * p1[1] - v[1] * p1[0];\n\n      if (i === 0) {\n        if (res < 0) {\n          ltz = true;\n        } else {\n          ltz = false;\n        }\n      } else {\n        if (ltz && (res > 0) || !ltz && (res < 0)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesContainPoint(coordinates, point) {\n    var contains = false;\n    for(var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n      if (((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1]) ||\n           (coordinates[j][1] <= point[1] && point[1] < coordinates[i][1])) &&\n          (point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0])) {\n        contains = !contains;\n      }\n    }\n    return contains;\n  }\n\n  function polygonContainsPoint(polygon, point) {\n    if (polygon && polygon.length) {\n      if (polygon.length === 1) { // polygon with no holes\n        return coordinatesContainPoint(polygon[0], point);\n      } else { // polygon with holes\n        if (coordinatesContainPoint(polygon[0], point)) {\n          for (var i = 1; i < polygon.length; i++) {\n            if (coordinatesContainPoint(polygon[i], point)) {\n              return false; // found in hole\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  }\n\n  function edgeIntersectsEdge(a1, a2, b1, b2) {\n    var ua_t = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n    var ub_t = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n    var u_b  = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n    if ( u_b !== 0 ) {\n      var ua = ua_t / u_b;\n      var ub = ub_t / u_b;\n\n      if ( 0 <= ua && ua <= 1 && 0 <= ub && ub <= 1 ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function arraysIntersectArrays(a, b) {\n    if (isNumber(a[0][0])) {\n      if (isNumber(b[0][0])) {\n        for (var i = 0; i < a.length - 1; i++) {\n          for (var j = 0; j < b.length - 1; j++) {\n            if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n              return true;\n            }\n          }\n        }\n      } else {\n        for (var k = 0; k < b.length; k++) {\n          if (arraysIntersectArrays(a, b[k])) {\n            return true;\n          }\n        }\n      }\n    } else {\n      for (var l = 0; l < a.length; l++) {\n        if (arraysIntersectArrays(a[l], b)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n  Internal: Returns a copy of coordinates for s closed polygon\n  */\n  function closedPolygon(coordinates) {\n    var outer = [ ];\n\n    for (var i = 0; i < coordinates.length; i++) {\n      var inner = coordinates[i].slice();\n      if (pointsEqual(inner[0], inner[inner.length - 1]) === false) {\n        inner.push(inner[0]);\n      }\n\n      outer.push(inner);\n    }\n\n    return outer;\n  }\n\n  function pointsEqual(a, b) {\n    for (var i = 0; i < a.length; i++) {\n\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    var na = a.slice().sort(compSort);\n    var nb = b.slice().sort(compSort);\n\n    for (var i = 0; i < na.length; i++) {\n      if (na[i].length !== nb[i].length) {\n        return false;\n      }\n      for (var j = 0; j < na.length; j++) {\n        if (na[i][j] !== nb[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /*\n  Internal: An array of variables that will be excluded form JSON objects.\n  */\n  var excludeFromJSON = [\"length\"];\n\n  /*\n  Internal: Base GeoJSON Primitive\n  */\n  function Primitive(geojson){\n    if(geojson){\n      switch (geojson.type) {\n      case 'Point':\n        return new Point(geojson);\n\n      case 'MultiPoint':\n        return new MultiPoint(geojson);\n\n      case 'LineString':\n        return new LineString(geojson);\n\n      case 'MultiLineString':\n        return new MultiLineString(geojson);\n\n      case 'Polygon':\n        return new Polygon(geojson);\n\n      case 'MultiPolygon':\n        return new MultiPolygon(geojson);\n\n      case 'Feature':\n        return new Feature(geojson);\n\n      case 'FeatureCollection':\n        return new FeatureCollection(geojson);\n\n      case 'GeometryCollection':\n        return new GeometryCollection(geojson);\n\n      default:\n        throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n  }\n\n  Primitive.prototype.toMercator = function(){\n    return toMercator(this);\n  };\n\n  Primitive.prototype.toGeographic = function(){\n    return toGeographic(this);\n  };\n\n  Primitive.prototype.envelope = function(){\n    return calculateEnvelope(this);\n  };\n\n  Primitive.prototype.bbox = function(){\n    return calculateBounds(this);\n  };\n\n  Primitive.prototype.convexHull = function(){\n    var coordinates = [ ], i, j;\n    if (this.type === 'Point') {\n      return null;\n    } else if (this.type === 'LineString' || this.type === 'MultiPoint') {\n      if (this.coordinates && this.coordinates.length >= 3) {\n        coordinates = this.coordinates;\n      } else {\n        return null;\n      }\n    } else if (this.type === 'Polygon' || this.type === 'MultiLineString') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          coordinates = coordinates.concat(this.coordinates[i]);\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if (this.type === 'MultiPolygon') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          for (j = 0; j < this.coordinates[i].length; j++) {\n            coordinates = coordinates.concat(this.coordinates[i][j]);\n          }\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if(this.type === \"Feature\"){\n      var primitive = new Primitive(this.geometry);\n      return primitive.convexHull();\n    }\n\n    return new Polygon({\n      type: 'Polygon',\n      coordinates: closedPolygon([convexHull(coordinates)])\n    });\n  };\n\n  Primitive.prototype.toJSON = function(){\n    var obj = {};\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && excludeFromJSON.indexOf(key) === -1) {\n        obj[key] = this[key];\n      }\n    }\n    obj.bbox = calculateBounds(this);\n    return obj;\n  };\n\n  Primitive.prototype.contains = function(primitive){\n    return new Primitive(primitive).within(this);\n  };\n\n  Primitive.prototype.within = function(primitive) {\n    var coordinates, i, contains;\n\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    // point.within(point) :: equality\n    if (primitive.type === \"Point\") {\n      if (this.type === \"Point\") {\n        return pointsEqual(this.coordinates, primitive.coordinates);\n\n      }\n    }\n\n    // point.within(multilinestring)\n    if (primitive.type === \"MultiLineString\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var linestring = { type: \"LineString\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(linestring)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // point.within(linestring), point.within(multipoint)\n    if (primitive.type === \"LineString\" || primitive.type === \"MultiPoint\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          if (this.coordinates.length !== primitive.coordinates[i].length) {\n            return false;\n          }\n\n          if (pointsEqual(this.coordinates, primitive.coordinates[i])) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (primitive.type === \"Polygon\") {\n      // polygon.within(polygon)\n      if (this.type === \"Polygon\") {\n        // check for equal polygons\n        if (primitive.coordinates.length === this.coordinates.length) {\n          for (i = 0; i < this.coordinates.length; i++) {\n            if (coordinatesEqual(this.coordinates[i], primitive.coordinates[i])) {\n              return true;\n            }\n          }\n        }\n\n        if (this.coordinates.length && polygonContainsPoint(primitive.coordinates, this.coordinates[0][0])) {\n          return !arraysIntersectArrays(closedPolygon(this.coordinates), closedPolygon(primitive.coordinates));\n        } else {\n          return false;\n        }\n\n      // point.within(polygon)\n      } else if (this.type === \"Point\") {\n        return polygonContainsPoint(primitive.coordinates, this.coordinates);\n\n      // linestring/multipoint withing polygon\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        if (!this.coordinates || this.coordinates.length === 0) {\n          return false;\n        }\n\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (polygonContainsPoint(primitive.coordinates, this.coordinates[i]) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multilinestring.within(polygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var ls = new LineString(this.coordinates[i]);\n\n          if (ls.within(primitive) === false) {\n            contains++;\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(polygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var p1 = new Primitive({ type: \"Polygon\", coordinates: this.coordinates[i] });\n\n          if (p1.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n    }\n\n    if (primitive.type === \"MultiPolygon\") {\n      // point.within(multipolygon)\n      if (this.type === \"Point\") {\n        if (primitive.coordinates.length) {\n          for (i = 0; i < primitive.coordinates.length; i++) {\n            coordinates = primitive.coordinates[i];\n            if (polygonContainsPoint(coordinates, this.coordinates) && arraysIntersectArrays([this.coordinates], primitive.coordinates) === false) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      // polygon.within(multipolygon)\n      } else if (this.type === \"Polygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (primitive.coordinates[i].length === this.coordinates.length) {\n            for (j = 0; j < this.coordinates.length; j++) {\n              if (coordinatesEqual(this.coordinates[j], primitive.coordinates[i][j])) {\n                return true;\n              }\n            }\n          }\n        }\n\n        if (arraysIntersectArrays(this.coordinates, primitive.coordinates) === false) {\n          if (primitive.coordinates.length) {\n            for (i = 0; i < primitive.coordinates.length; i++) {\n              coordinates = primitive.coordinates[i];\n              if (polygonContainsPoint(coordinates, this.coordinates[0][0]) === false) {\n                contains = false;\n              } else {\n                contains = true;\n              }\n            }\n\n            return contains;\n          }\n        }\n\n      // linestring.within(multipolygon), multipoint.within(multipolygon)\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var p = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(p)) {\n            return true;\n          }\n\n          return false;\n        }\n\n      // multilinestring.within(multipolygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var lines = new LineString(this.coordinates[i]);\n\n          if (lines.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(multipolygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var mpoly = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(mpoly) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    // default to false\n    return false;\n  };\n\n  Primitive.prototype.intersects = function(primitive) {\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    var p = new Primitive(primitive);\n    if (this.within(primitive) || p.within(this)) {\n      return true;\n    }\n\n\n    if (this.type !== 'Point' && this.type !== 'MultiPoint' &&\n        primitive.type !== 'Point' && primitive.type !== 'MultiPoint') {\n      return arraysIntersectArrays(this.coordinates, primitive.coordinates);\n    } else if (this.type === 'Feature') {\n      // in the case of a Feature, use the internal primitive for intersection\n      var inner = new Primitive(this.geometry);\n      return inner.intersects(primitive);\n    }\n\n    warn(\"Type \" + this.type + \" to \" + primitive.type + \" intersection is not supported by intersects\");\n    return false;\n  };\n\n\n  /*\n  GeoJSON Point Class\n    new Point();\n    new Point(x,y,z,wtf);\n    new Point([x,y,z,wtf]);\n    new Point([x,y]);\n    new Point({\n      type: \"Point\",\n      coordinates: [x,y]\n    });\n  */\n  function Point(input){\n    var args = Array.prototype.slice.call(arguments);\n\n    if(input && input.type === \"Point\" && input.coordinates){\n      extend(this, input);\n    } else if(input && isArray(input)) {\n      this.coordinates = input;\n    } else if(args.length >= 2) {\n      this.coordinates = args;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Point\";\n    }\n\n    this.type = \"Point\";\n  }\n\n  Point.prototype = new Primitive();\n  Point.prototype.constructor = Point;\n\n  /*\n  GeoJSON MultiPoint Class\n      new MultiPoint();\n      new MultiPoint([[x,y], [x1,y1]]);\n      new MultiPoint({\n        type: \"MultiPoint\",\n        coordinates: [x,y]\n      });\n  */\n  function MultiPoint(input){\n    if(input && input.type === \"MultiPoint\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPoint\";\n    }\n\n    this.type = \"MultiPoint\";\n  }\n\n  MultiPoint.prototype = new Primitive();\n  MultiPoint.prototype.constructor = MultiPoint;\n  MultiPoint.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates]);\n    }\n    return this;\n  };\n  MultiPoint.prototype.addPoint = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  MultiPoint.prototype.insertPoint = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  MultiPoint.prototype.removePoint = function(remove){\n    if(typeof remove === \"number\"){\n      this.coordinates.splice(remove, 1);\n    } else {\n      this.coordinates.splice(this.coordinates.indexOf(remove), 1);\n    }\n    return this;\n  };\n  MultiPoint.prototype.get = function(i){\n    return new Point(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON LineString Class\n      new LineString();\n      new LineString([[x,y], [x1,y1]]);\n      new LineString({\n        type: \"LineString\",\n        coordinates: [x,y]\n      });\n  */\n  function LineString(input){\n    if(input && input.type === \"LineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.LineString\";\n    }\n\n    this.type = \"LineString\";\n  }\n\n  LineString.prototype = new Primitive();\n  LineString.prototype.constructor = LineString;\n  LineString.prototype.addVertex = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  LineString.prototype.insertVertex = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  LineString.prototype.removeVertex = function(remove){\n    this.coordinates.splice(remove, 1);\n    return this;\n  };\n\n  /*\n  GeoJSON MultiLineString Class\n      new MultiLineString();\n      new MultiLineString([ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]);\n      new MultiLineString({\n        type: \"MultiLineString\",\n        coordinates: [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]\n      });\n  */\n  function MultiLineString(input){\n    if(input && input.type === \"MultiLineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiLineString\";\n    }\n\n    this.type = \"MultiLineString\";\n  }\n\n  MultiLineString.prototype = new Primitive();\n  MultiLineString.prototype.constructor = MultiLineString;\n  MultiLineString.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiLineString.prototype.get = function(i){\n    return new LineString(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON Polygon Class\n      new Polygon();\n      new Polygon([ [[x,y], [x1,y1], [x2,y2]] ]);\n      new Polygon({\n        type: \"Polygon\",\n        coordinates: [ [[x,y], [x1,y1], [x2,y2]] ]\n      });\n  */\n  function Polygon(input){\n    if(input && input.type === \"Polygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Polygon\";\n    }\n\n    this.type = \"Polygon\";\n  }\n\n  Polygon.prototype = new Primitive();\n  Polygon.prototype.constructor = Polygon;\n  Polygon.prototype.addVertex = function(point){\n    this.insertVertex(point, this.coordinates[0].length - 1);\n    return this;\n  };\n  Polygon.prototype.insertVertex = function(point, index){\n    this.coordinates[0].splice(index, 0, point);\n    return this;\n  };\n  Polygon.prototype.removeVertex = function(remove){\n    this.coordinates[0].splice(remove, 1);\n    return this;\n  };\n  Polygon.prototype.close = function() {\n    this.coordinates = closedPolygon(this.coordinates);\n  };\n  Polygon.prototype.hasHoles = function() {\n    return this.coordinates.length > 1;\n  };\n  Polygon.prototype.holes = function() {\n    holes = [];\n    if (this.hasHoles()) {\n      for (var i = 1; i < this.coordinates.length; i++) {\n        holes.push(new Polygon([this.coordinates[i]]));\n      }\n    }\n    return holes;\n  };\n\n  /*\n  GeoJSON MultiPolygon Class\n      new MultiPolygon();\n      new MultiPolygon([ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]);\n      new MultiPolygon({\n        type: \"MultiPolygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function MultiPolygon(input){\n    if(input && input.type === \"MultiPolygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPolygon\";\n    }\n\n    this.type = \"MultiPolygon\";\n  }\n\n  MultiPolygon.prototype = new Primitive();\n  MultiPolygon.prototype.constructor = MultiPolygon;\n  MultiPolygon.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiPolygon.prototype.get = function(i){\n    return new Polygon(this.coordinates[i]);\n  };\n  MultiPolygon.prototype.close = function(){\n    var outer = [];\n    this.forEach(function(polygon){\n      outer.push(closedPolygon(polygon));\n    });\n    this.coordinates = outer;\n    return this;\n  };\n\n  /*\n  GeoJSON Feature Class\n      new Feature();\n      new Feature({\n        type: \"Feature\",\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n        }\n      });\n      new Feature({\n        type: \"Polygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function Feature(input){\n    if(input && input.type === \"Feature\"){\n      extend(this, input);\n    } else if(input && input.type && input.coordinates) {\n      this.geometry = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Feature\";\n    }\n\n    this.type = \"Feature\";\n  }\n\n  Feature.prototype = new Primitive();\n  Feature.prototype.constructor = Feature;\n\n  /*\n  GeoJSON FeatureCollection Class\n      new FeatureCollection();\n      new FeatureCollection([feature, feature1]);\n      new FeatureCollection({\n        type: \"FeatureCollection\",\n        coordinates: [feature, feature1]\n      });\n  */\n  function FeatureCollection(input){\n    if(input && input.type === \"FeatureCollection\" && input.features){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.features = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.FeatureCollection\";\n    }\n\n    this.type = \"FeatureCollection\";\n  }\n\n  FeatureCollection.prototype = new Primitive();\n  FeatureCollection.prototype.constructor = FeatureCollection;\n  FeatureCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.features.length; i++) {\n      func.apply(this, [this.features[i], i, this.features]);\n    }\n  };\n  FeatureCollection.prototype.get = function(id){\n    var found;\n    this.forEach(function(feature){\n      if(feature.id === id){\n        found = feature;\n      }\n    });\n    return new Feature(found);\n  };\n\n  /*\n  GeoJSON GeometryCollection Class\n      new GeometryCollection();\n      new GeometryCollection([geometry, geometry1]);\n      new GeometryCollection({\n        type: \"GeometryCollection\",\n        coordinates: [geometry, geometry1]\n      });\n  */\n  function GeometryCollection(input){\n    if(input && input.type === \"GeometryCollection\" && input.geometries){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.geometries = input;\n    } else if(input.coordinates && input.type){\n      this.type = \"GeometryCollection\";\n      this.geometries = [input];\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.GeometryCollection\";\n    }\n\n    this.type = \"GeometryCollection\";\n  }\n\n  GeometryCollection.prototype = new Primitive();\n  GeometryCollection.prototype.constructor = GeometryCollection;\n  GeometryCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.geometries.length; i++) {\n      func.apply(this, [this.geometries[i], i, this.geometries]);\n    }\n  };\n  GeometryCollection.prototype.get = function(i){\n    return new Primitive(this.geometries[i]);\n  };\n\n  function createCircle(center, radius, interpolate){\n    var mercatorPosition = positionToMercator(center);\n    var steps = interpolate || 64;\n    var polygon = {\n      type: \"Polygon\",\n      coordinates: [[]]\n    };\n    for(var i=1; i<=steps; i++) {\n      var radians = i * (360/steps) * Math.PI / 180;\n      polygon.coordinates[0].push([mercatorPosition[0] + radius * Math.cos(radians), mercatorPosition[1] + radius * Math.sin(radians)]);\n    }\n    polygon.coordinates = closedPolygon(polygon.coordinates);\n\n    return toGeographic(polygon);\n  }\n\n  function Circle (center, radius, interpolate) {\n    var steps = interpolate || 64;\n    var rad = radius || 250;\n\n    if(!center || center.length < 2 || !rad || !steps) {\n      throw new Error(\"Terraformer: missing parameter for Terraformer.Circle\");\n    }\n\n    extend(this, new Feature({\n      type: \"Feature\",\n      geometry: createCircle(center, rad, steps),\n      properties: {\n        radius: rad,\n        center: center,\n        steps: steps\n      }\n    }));\n  }\n\n  Circle.prototype = new Primitive();\n  Circle.prototype.constructor = Circle;\n  Circle.prototype.recalculate = function(){\n    this.geometry = createCircle(this.properties.center, this.properties.radius, this.properties.steps);\n    return this;\n  };\n  Circle.prototype.center = function(coordinates){\n    if(coordinates){\n      this.properties.center = coordinates;\n      this.recalculate();\n    }\n    return this.properties.center;\n  };\n  Circle.prototype.radius = function(radius){\n    if(radius){\n      this.properties.radius = radius;\n      this.recalculate();\n    }\n    return this.properties.radius;\n  };\n  Circle.prototype.steps = function(steps){\n    if(steps){\n      this.properties.steps = steps;\n      this.recalculate();\n    }\n    return this.properties.steps;\n  };\n\n  Circle.prototype.toJSON = function() {\n    var output = Primitive.prototype.toJSON.call(this);\n    return output;\n  };\n\n  exports.Primitive = Primitive;\n  exports.Point = Point;\n  exports.MultiPoint = MultiPoint;\n  exports.LineString = LineString;\n  exports.MultiLineString = MultiLineString;\n  exports.Polygon = Polygon;\n  exports.MultiPolygon = MultiPolygon;\n  exports.Feature = Feature;\n  exports.FeatureCollection = FeatureCollection;\n  exports.GeometryCollection = GeometryCollection;\n  exports.Circle = Circle;\n\n  exports.toMercator = toMercator;\n  exports.toGeographic = toGeographic;\n\n  exports.Tools = {};\n  exports.Tools.positionToMercator = positionToMercator;\n  exports.Tools.positionToGeographic = positionToGeographic;\n  exports.Tools.applyConverter = applyConverter;\n  exports.Tools.toMercator = toMercator;\n  exports.Tools.toGeographic = toGeographic;\n  exports.Tools.createCircle = createCircle;\n\n  exports.Tools.calculateBounds = calculateBounds;\n  exports.Tools.calculateEnvelope = calculateEnvelope;\n\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.polygonContainsPoint = polygonContainsPoint;\n  exports.Tools.arraysIntersectArrays = arraysIntersectArrays;\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.coordinatesEqual = coordinatesEqual;\n  exports.Tools.convexHull = convexHull;\n  exports.Tools.isConvex = isConvex;\n\n  exports.MercatorCRS = MercatorCRS;\n  exports.GeographicCRS = GeographicCRS;\n\n  return exports;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./~/terraformer/terraformer.js"],"sourceRoot":""}